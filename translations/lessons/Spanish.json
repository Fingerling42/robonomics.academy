{
  "Part 3: Emergence of the World Computer": "Parte 3: Emergencia de la Computadora Mundial",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.\"": "En la tercera parte titulada \"Emergencia de la Computadora Mundial,\" intentaremos, capa por capa, recrear la implementación de ingeniería de la computadora mundial utilizando ejemplos de Ethereum y Polkadot, como antes.",
  "Learn": "Aprende",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.": "En la tercera parte titulada \"Emergencia de la Computadora Mundial,\" intentaremos, capa por capa, recrear la implementación de ingeniería de la computadora mundial utilizando ejemplos de Ethereum y Polkadot, como antes.",
  "Let's start with Ethereum. Ethereum began in 2015 with a state that can be characterized as a combination of the proof-of-work consensus algorithm, enabling the world computer to exist in a decentralized state (as discussed in Part 2). Additionally, the Ethereum Virtual Machine (EVM) was introduced, serving as a Turing-complete computational machine. Together, these two elements formed the first version of the world computer, sometimes referred to as a precursor. Within this context, decentralized applications, or smart contracts, began to emerge.": "Comencemos con Ethereum. Ethereum comenzó en 2015 con un estado que puede caracterizarse como una combinación del algoritmo de consenso de prueba de trabajo, lo que permite que la computadora mundial exista en un estado descentralizado (como se discutió en la Parte 2). Además, se introdujo la Máquina Virtual Ethereum (EVM), que sirve como una máquina computacional completa de Turing. Juntos, estos dos elementos formaron la primera versión de la computadora mundial, a veces referida como precursora. En este contexto, comenzaron a surgir aplicaciones descentralizadas, o contratos inteligentes.",
  "Over the next 5 years, Ethereum lived a relatively unchanged life, undergoing some engineering tunings, such as a continuous increase in gas limits, with the exception of events like the Shanghai fork. Notably, during the second DEFCON held in Shanghai, a denial-of-service attack exploited a function in the virtual machine that consumed minimal gas but triggered significant computations on the Ethereum network. This led to memory overflow, effectively disrupting an entire Ethereum node. This incident highlights the intricate details that arise when dealing with a large and abstract solution like creating a virtual machine.": "Durante los próximos 5 años, Ethereum vivió una vida relativamente inalterada, experimentando algunos ajustes de ingeniería, como un aumento continuo en los límites de gas, con la excepción de eventos como el fork de Shanghai. Especialmente, durante el segundo DEFCON celebrado en Shanghai, un ataque de denegación de servicio explotó una función en la máquina virtual que consumía gas mínimo pero desencadenaba cálculos significativos en la red de Ethereum. Esto llevó a un desbordamiento de memoria, interrumpiendo efectivamente un nodo completo de Ethereum. Este incidente destaca los detalles intrincados que surgen al tratar con una solución grande y abstracta como la creación de una máquina virtual.",
  "Moving forward, a significant shift occurred around the end of the decade, particularly in 2020, with the advent of Ethereum 2.0. However, Ethereum 2.0 has now been deprecated, and I would characterize the real breakthrough as starting around 2019-2020. During this period, there was a true technological breakthrough in Ethereum, moving towards the concept of Ethereum 2.0. The moment of engineering change in Ethereum's architecture can be considered the event known as \"the merge,\" where the functionalities of the beacon chain were combined. The merge marked a significant shift in the paradigm of Ethereum, transitioning it into a slightly different state than what was on the board. The actual engineering change in Ethereum's architecture can be associated with \"the merge,\" where the functionalities of the beacon chain were integrated. For a detailed history of this, you can refer to the ethereum.org website, which provides an excellent article on the coexistence of the traditional Ethereum blockchain with the parallel blockchain launched in 2015 and the Ethereum Virtual Machine.": "Avanzando, ocurrió un cambio significativo hacia finales de la década, particularmente en 2020, con la llegada de Ethereum 2.0. Sin embargo, Ethereum 2.0 ha sido descontinuado, y caracterizaría el verdadero avance como comenzando alrededor de 2019-2020. Durante este período, hubo un verdadero avance tecnológico en Ethereum, avanzando hacia el concepto de Ethereum 2.0. El momento de cambio de ingeniería en la arquitectura de Ethereum puede considerarse el evento conocido como \"la fusión,\" donde se combinaron las funcionalidades de la cadena de balizas. La fusión marcó un cambio significativo en el paradigma de Ethereum, llevándolo a un estado ligeramente diferente al que estaba en el tablero. El cambio real de ingeniería en la arquitectura de Ethereum puede asociarse con \"la fusión,\" donde se integraron las funcionalidades de la cadena de balizas. Para obtener una historia detallada de esto, puede consultar el sitio web ethereum.org, que proporciona un excelente artículo sobre la coexistencia de la cadena de bloques tradicional de Ethereum con la cadena de bloques paralela lanzada en 2015 y la Máquina Virtual Ethereum.",
  "When the merge occurred, we witnessed a new architectural representation, both at the network level and for individual nodes interacting with the Ethereum network. What was the actual change? For many, the merge signifies the transition from proof-of-work to proof-of-stake, which is indeed significant. It implies increased efficiency and fine-tuning, but it's still a tuning relative to one of the parameters. However, the more noteworthy internal engineering change for each network client was the split. There was no longer a single specific network client or a monolithic architecture. Instead, we got two components of a single node interacting with the Ethereum network.": "Cuando ocurrió la fusión, presenciamos una nueva representación arquitectónica, tanto a nivel de red como para nodos individuales interactuando con la red Ethereum. ¿Cuál fue el cambio real? Para muchos, la fusión significa la transición de prueba de trabajo a prueba de participación, lo cual es realmente significativo. Implica mayor eficiencia y ajuste fino, pero sigue siendo un ajuste relativo a uno de los parámetros. Sin embargo, el cambio interno más notable para cada cliente de red fue la división. Ya no había un cliente de red específico o una arquitectura monolítica. En su lugar, obtuvimos dos componentes de un solo nodo interactuando con la red Ethereum.",
  "The first part, which I labeled \"beacon chain\" on the diagram, essentially represents a collective image of all the innovations that came into the Ethereum client at the moment of the merge. The second part is the preserved virtual machine. Nevertheless, it's worth adding something here too. Dialogues truly began about replacing the virtual machine, which was exclusively tailored to work with smart contracts and smart contracts in a specific language—Solidity. This is because, by 2015, there were practically no interpreters left for smart contracts in languages other than Solidity, and the architecture appeared somewhat one-sided from the perspective of an Ethereum programmer. You learn a snippet of JavaScript in the form of Solidity, write smart contract code on it, and get your DApp, like Uniswap, for example.": "La primera parte, que etiqueté como \"cadena de balizas\" en el diagrama, representa esencialmente una imagen colectiva de todas las innovaciones que llegaron al cliente de Ethereum en el momento de la fusión. La segunda parte es la máquina virtual preservada. Sin embargo, también vale la pena agregar algo aquí. Los diálogos realmente comenzaron sobre reemplazar la máquina virtual, que estaba exclusivamente diseñada para trabajar con contratos inteligentes y contratos inteligentes en un lenguaje específico: Solidity. Esto se debe a que, para 2015, prácticamente no quedaban intérpretes para contratos inteligentes en idiomas que no fueran Solidity, y la arquitectura parecía algo unidireccional desde la perspectiva de un programador de Ethereum. Aprendes un fragmento de JavaScript en forma de Solidity, escribes código de contrato inteligente en él y obtienes tu DApp, como Uniswap, por ejemplo.",
  "Since the emergence of a more complex Ethereum architecture, discussions have revolved around the idea that the virtual machine, which existed as a somewhat monolithic element from 2015, can also be replaced in the new architecture. The conversation shifted towards replacing it with something like WebAssembly (Wasm) or a more interesting solution from the perspective of writing code for the world computer. You could say, \"Wasm with a question mark.\"": "Desde la aparición de una arquitectura de Ethereum más compleja, las discusiones han girado en torno a la idea de que la máquina virtual, que existía como un elemento algo monolítico desde 2015, también puede ser reemplazada en la nueva arquitectura. La conversación se centró en reemplazarla con algo como WebAssembly (Wasm) o una solución más interesante desde la perspectiva de escribir código para la computadora mundial. Podrías decir, \"Wasm con un signo de interrogación.\"",
  "From the perspective of the Beacon Chain, it indeed operates on proof-of-stake, but what's more interesting is the inclusion of Gasper. This represents a modification of the original ideas about Casper. Casper, often referred to as the friendly ghost finality gadget, was introduced, perhaps even as early as Defcon 3 or 4, and maybe even discussed at Defcon 2—I don't recall precisely. But at the EthCC conference in Paris, which definitely took place in 2018, Vlad Zamfir and Vitalik, from different rooms, were discussing the emergence of Casper as a friendly ghost, overseeing participants in proof-of-stake and coming to the aid of the network when a node misbehaves. From this idea of Casper, Gasper emerges. Without delving into terminology too much, the consensus algorithm undergoes a shift, changing not only in terms of simplicity but also becoming more complex, similar to Polkadot. As I mentioned earlier, Polkadot has two consensus algorithms, Babe and Grandpa. Similarly, with Ethereum's Beacon Chain functionality, achieving consensus and finality is not as instantaneous. It involves epochs, and the network operates on a more complex scenario, reaching a state that is already somewhat dynamic, not frozen, and is essentially carved in stone.": "Desde la perspectiva de la Cadena de Balizas, efectivamente opera con prueba de participación, pero lo más interesante es la inclusión de Gasper. Esto representa una modificación de las ideas originales sobre Casper. Casper, a menudo referido como el dispositivo de finalidad del fantasma amigable, fue introducido, quizás incluso tan temprano como en Defcon 3 o 4, e incluso tal vez discutido en Defcon 2, no recuerdo exactamente. Pero en la conferencia EthCC en París, que definitivamente tuvo lugar en 2018, Vlad Zamfir y Vitalik, desde diferentes salas, estaban discutiendo la aparición de Casper como un fantasma amigable, supervisando a los participantes en prueba de participación y acudiendo en ayuda de la red cuando un nodo se comporta mal. A partir de esta idea de Casper, surge Gasper. Sin profundizar demasiado en la terminología, el algoritmo de consenso experimenta un cambio, cambiando no solo en términos de simplicidad, sino también volviéndose más complejo, similar a Polkadot. Como mencioné anteriormente, Polkadot tiene dos algoritmos de consenso, Babe y Grandpa. De manera similar, con la funcionalidad de la Cadena de Balizas de Ethereum, lograr consenso y finalidad no es tan instantáneo. Involucra épocas, y la red opera en un escenario más complejo, alcanzando un estado que ya es algo dinámico, no congelado y es esencialmente tallado en piedra.",
  "What can be added in relation to 2024? For me, it was a prolonged observation and an attempt to understand whether Ethereum would eventually implement sharding or not. Sharding is the ability to exist not with a single blockchain but with multiple blockchains within one network. As I observed the merge and the simultaneous rise of Layer 2 (L2) networks, questions arose in my mind about whether sharding would indeed materialize. Sharding seemed interesting to me due to its homogeneity—having multiple chains that are almost identical, lacking any specific characteristics. It appeared to be an interesting approach, but not as flexible as a heterogeneous approach. In L2 networks, even several years ago, I could see the heterogeneity of Ethereum, its ability to work with various types of more specific blockchains. I was curious about the direction it would take—whether sharding, with its homogeneity, would displace L2 solutions or whether L2 solutions with a heterogeneous approach would saturate the Beacon Chain and the main nodes of the Ethereum network.": "¿Qué se puede agregar en relación con 2024? Para mí, fue una observación prolongada y un intento de entender si Ethereum finalmente implementaría el fragmentación o no. La fragmentación es la capacidad de existir no con una sola cadena de bloques, sino con múltiples cadenas de bloques dentro de una red. Mientras observaba la fusión y el surgimiento simultáneo de redes de Capa 2 (L2), surgieron preguntas en mi mente sobre si la fragmentación realmente se materializaría. La fragmentación me pareció interesante debido a su homogeneidad: tener múltiples cadenas que son casi idénticas, sin características específicas. Parecía ser un enfoque interesante, pero no tan flexible como un enfoque heterogéneo. En las redes L2, incluso hace varios años, pude ver la heterogeneidad de Ethereum, su capacidad para trabajar con varios tipos de cadenas de bloques más específicas. Me intrigaba la dirección que tomaría: si la fragmentación, con su homogeneidad, desplazaría las soluciones L2 o si las soluciones L2 con un enfoque heterogéneo saturarían la Cadena de Balizas y los nodos principales de la red Ethereum.",
  "Today, in 2024, based on articles on ethereum.org, it seems that sharding as a concept has been pushed back, and the focus is on helping various L2 networks integrate with the Beacon Chain and align with the main chain's functionality, which is now divided into two elements in the Ethereum network's architecture.": "Hoy, en 2024, basándome en artículos en ethereum.org, parece que la fragmentación como concepto ha sido postergada, y el enfoque está en ayudar a diversas redes L2 a integrarse con la Cadena de Balizas y alinearse con la funcionalidad de la cadena principal, que ahora está dividida en dos elementos en la arquitectura de la red Ethereum.",
  "Therefore, without delving into the details of how L2 networks are structured—although we'll touch upon that when we fill in the second part of the board—we should imagine that Ethereum is now a kind of Beacon Chain, a beacon, a guiding star for numerous L2 networks. These L2 networks can have more specific functionality, executing their logic according to a set of individual functions. This is somewhat in line with the idea of a Swiss Army knife—not making Ethereum a Swiss Army knife, but L2 networks are starting to differentiate in architecture. They duplicate the functionality of the abstract computing machine of Ethereum but perform it with lower gas costs or within their specific segment. Some are already thinking about tuning and making their L2 layer more efficient, focusing on specific functional capabilities. Thus, in my opinion, we are witnessing the emergence of heterogeneity in the world computer that aimed to be homogeneous. Also, it's essential not to forget that decentralized applications (dApps) still exist within the main blockchain, within that same blockchain that started in 2015. This means that during the merge, during the transition to the new architectural state, there was no wipeout, no erasure of the previous history. All decentralized applications and smart contracts underlying these applications continued to exist, and they continue to exist today, and probably tomorrow. This is a question that we will explore using Polkadot as an example, but there is still a feeling that it will be possible to settle a decentralized application in the Beacon Chain—dApps.": "Por lo tanto, sin profundizar en los detalles de cómo están estructuradas las redes L2, aunque tocaremos ese tema cuando completemos la segunda parte del tablero, debemos imaginar que Ethereum es ahora una especie de Beacon Chain, un faro, una estrella guía para numerosas redes L2. Estas redes L2 pueden tener funcionalidades más específicas, ejecutando su lógica de acuerdo con un conjunto de funciones individuales. Esto se alinea un poco con la idea de una navaja suiza, no convirtiendo a Ethereum en una navaja suiza, pero las redes L2 están empezando a diferenciarse en arquitectura. Duplican la funcionalidad de la máquina de computación abstracta de Ethereum pero la realizan con costos de gas más bajos o dentro de su segmento específico. Algunos ya están pensando en ajustar y hacer más eficiente su capa L2, centrándose en capacidades funcionales específicas. Por lo tanto, en mi opinión, estamos presenciando la aparición de heterogeneidad en la computadora mundial que pretendía ser homogénea. También es esencial no olvidar que las aplicaciones descentralizadas (dApps) todavía existen dentro de la cadena principal, dentro de esa misma cadena que comenzó en 2015. Esto significa que durante la fusión, durante la transición al nuevo estado arquitectónico, no hubo borrado, no hubo eliminación de la historia anterior. Todas las aplicaciones descentralizadas y contratos inteligentes subyacentes a estas aplicaciones continuaron existiendo, y continúan existiendo hoy, y probablemente mañana. Esta es una cuestión que exploraremos utilizando Polkadot como ejemplo, pero aún se tiene la sensación de que será posible establecer una aplicación descentralizada en la Beacon Chain—dApps.",
  "In summary, let's imagine the engineering implementation of today's Ethereum as a world computer. We have each network node consisting of two parts. The first layer is responsible for the Ethereum Virtual Machine (EVM), the actual functionality of the virtual machine or Turing complete machine, if we talk in theoretical terms. Perhaps we will see the emergence of alternatives to the virtual machine designed in 2015. These alternatives will likely surpass it in terms of more abstract programming possibilities than writing smart contracts in Solidity. Meanwhile, smart contracts in Solidity continue to feel comfortable. If you want to write functionality for the Ethereum main chain without creating any infrastructure on top of Ethereum, without offloading any calculations to make them cheaper, and so on, decentralized applications that you can write as smart contracts can still be housed in Ethereum's main blockchain. At the same time, Beacon Chain functionality has emerged, separating the consensus logic between validators from the main protocol of the computing machine. This allows for additional flexibility in how consensus should work and how it should be further modified without affecting the virtual machine itself. The example of Shanghai and Defcon 2, where a small opcode error caused a shutdown of part of the infrastructure, hints that it would be good to have such complex functionalities separated into two parts.": "En resumen, imaginemos la implementación de ingeniería del Ethereum actual como una computadora mundial. Tenemos cada nodo de red que consta de dos partes. La primera capa es responsable de la Máquina Virtual Ethereum (EVM), la funcionalidad real de la máquina virtual o máquina Turing completa, si hablamos en términos teóricos. Quizás veamos la aparición de alternativas a la máquina virtual diseñada en 2015. Estas alternativas probablemente la superarán en términos de posibilidades de programación más abstractas que escribir contratos inteligentes en Solidity. Mientras tanto, los contratos inteligentes en Solidity siguen sintiéndose cómodos. Si desea escribir funcionalidades para la cadena principal de Ethereum sin crear ninguna infraestructura encima de Ethereum, sin descargar ningún cálculo para hacerlo más barato, y así sucesivamente, las aplicaciones descentralizadas que puede escribir como contratos inteligentes aún pueden alojarse en la cadena principal de Ethereum. Al mismo tiempo, ha surgido la funcionalidad de Beacon Chain, separando la lógica de consenso entre validadores del protocolo principal de la máquina de computación. Esto permite una flexibilidad adicional en cómo debería funcionar el consenso y cómo debería modificarse sin afectar a la máquina virtual en sí. El ejemplo de Shanghai y Defcon 2, donde un pequeño error de opcode causó un apagado de parte de la infraestructura, sugiere que sería bueno tener tales funcionalidades complejas separadas en dos partes.",
  "What's interesting about the Beacon Chain? It is a more complex, comprehensive algorithm for achieving network synchronicity and finalization with the introduction of concepts such as \"epoch,\" and the presence of a ghost living within the network.": "¿Qué es interesante acerca de la Beacon Chain? Es un algoritmo más complejo y completo para lograr la sincronización de la red y la finalización con la introducción de conceptos como \"época\", y la presencia de un fantasma que vive dentro de la red.",
  "Lastly, what is important to consider now is that Ethereum is effectively putting an end to homogeneity, to the idea of getting a hundred identical blockchains working with the same virtual machine, where smart contracts written in Solidity can reside. Instead, various projects are proposing their own architectures or the same virtual machine taken beyond the main blockchain's limits. Alternatively, they are trying to build their more specific application, which, at the level of the Beacon Chain's main chain, is a smart contract written in Solidity. This is the current representation of Ethereum, which did not become Ethereum 2.0. It remains the same Ethereum—a project that once started with proof of work + Turing complete machine, transforming into this architecture.": "Por último, lo importante a considerar ahora es que Ethereum está poniendo fin efectivamente a la homogeneidad, a la idea de tener cien blockchains idénticas trabajando con la misma máquina virtual, donde los contratos inteligentes escritos en Solidity pueden residir. En cambio, varios proyectos están proponiendo sus propias arquitecturas o llevando la misma máquina virtual más allá de los límites de la cadena principal. Alternativamente, están tratando de construir su aplicación más específica, que, a nivel de la cadena principal de Beacon Chain, es un contrato inteligente escrito en Solidity. Esta es la representación actual de Ethereum, que no se convirtió en Ethereum 2.0. Sigue siendo el mismo Ethereum—un proyecto que una vez comenzó con prueba de trabajo + máquina Turing completa, transformándose en esta arquitectura.",
  "Now, let's take a look at how Polkadot emerged and evolved over the last 5 years. Polkadot came into existence five years after Ethereum, born out of the team that developed one of the best clients for Ethereum—Parity. Many might remember their web client, which, compared to Geth and other implementations, was probably much more pleasant to work with, at least from personal experience and the experience of colleagues.": "Ahora, echemos un vistazo a cómo Polkadot surgió y evolucionó en los últimos 5 años. Polkadot surgió cinco años después de Ethereum, nacido del equipo que desarrolló uno de los mejores clientes para Ethereum: Parity. Muchos podrían recordar su cliente web, que, en comparación con Geth y otras implementaciones, probablemente era mucho más agradable de trabajar, al menos desde la experiencia personal y la experiencia de los colegas.",
  "In the end, after a couple of months of the relay chain's existence without any decentralized application functionality, without the ability to connect your parachain or L2 network, without user capabilities, the network transitioned from an authority state to proof of stake. This gave developers the ability to upload their runtimes.": "Al final, después de un par de meses de la existencia de la cadena de retransmisión sin ninguna funcionalidad de aplicación descentralizada, sin la capacidad de conectar su paracadena o red L2, sin capacidades de usuario, la red pasó de un estado de autoridad a prueba de participación. Esto dio a los desarrolladores la capacidad de cargar sus tiempos de ejecución.",
  "At this point, it's also interesting to discuss the differences between today's Ethereum and how the central part of Polkadot is structured. From the perspective of the heart, which we've already discussed, the picture will be absolutely the same not only for Ethereum and Polkadot but for any project that wants to be presented as an abstract computing machine. However, from an engineering and architectural standpoint, it's fascinating to observe Beacon Chain & Relay Chain. Here, we have a virtual machine, which has been inherited since 2015, but alternatives are being proposed. In the relay chain, there's the ability to upload your runtime. The runtime is, in fact, your virtual machine. For example, some parachains completely emulate the Ethereum Virtual Machine. It's written as a runtime, meaning you can essentially upload an Ethereum Virtual Machine analog to the parachain level in Polkadot or write more specific logic that works with four or five functions. Recall part one about the ideas— you can write your Swiss Army knife, but it won't require creating the entire infrastructure. You can implement specific functionality with certain functions at the runtime level, put it into the Polkadot relay chain, and the immutability of this runtime will be ensured by Polkadot validators.": "En este punto, también es interesante discutir las diferencias entre el Ethereum de hoy y cómo está estructurada la parte central de Polkadot. Desde la perspectiva del corazón, que ya hemos discutido, la imagen será absolutamente la misma no solo para Ethereum y Polkadot, sino para cualquier proyecto que quiera presentarse como una máquina de computación abstracta. Sin embargo, desde un punto de vista de ingeniería y arquitectura, es fascinante observar Beacon Chain & Relay Chain. Aquí, tenemos una máquina virtual, que ha sido heredada desde 2015, pero se están proponiendo alternativas. En la cadena de retransmisión, hay la capacidad de cargar su tiempo de ejecución. El tiempo de ejecución es, de hecho, su máquina virtual. Por ejemplo, algunas paracadenas emulan completamente la Máquina Virtual Ethereum. Se escribe como un tiempo de ejecución, lo que significa que básicamente puedes cargar un análogo de la Máquina Virtual Ethereum al nivel de paracadena en Polkadot o escribir lógica más específica que funcione con cuatro o cinco funciones. Recuerda la parte uno sobre las ideas: puedes escribir tu navaja suiza, pero no requerirá crear toda la infraestructura. Puedes implementar funcionalidades específicas con ciertas funciones a nivel de tiempo de ejecución, ponerlo en la cadena de retransmisión de Polkadot y la inmutabilidad de este tiempo de ejecución será asegurada por los validadores de Polkadot.",
  "What happens next? Over the course of about a year, a layer of parachains begins to form around the relay chain. In terms of Ethereum implementation, you could say that L2 networks are quite similar to parachains. However, there's one interesting cross-network distinction that I find fascinating in Polkadot, and I'm trying to further understand how it will develop—namely, the second layer of validation and data availability checks. After a couple of years, Polkadot takes a shape like this. It's not just a relay chain where proof-of-stake validators protect the runtime of future parachains; an additional and crucial layer of data validation and availability checking emerges from parachains.": "¿Qué sucede a continuación? A lo largo de aproximadamente un año, comienza a formarse una capa de paracadenas alrededor de la cadena de retransmisión. En términos de implementación de Ethereum, se podría decir que las redes L2 son bastante similares a las paracadenas. Sin embargo, hay una interesante distinción entre redes cruzadas que encuentro fascinante en Polkadot, y estoy tratando de entender mejor cómo se desarrollará, a saber, la segunda capa de validación y verificación de disponibilidad de datos. Después de un par de años, Polkadot toma una forma como esta. No es solo una cadena de retransmisión donde los validadores de prueba de participación protegen el tiempo de ejecución de futuras paracadenas; una capa adicional y crucial de validación de datos y verificación de disponibilidad emerge de las paracadenas.",
  "As you look at this diagram, try to notice the analogies that arise and the differences in engineering implementation details. So, what does this represent, and how does this scheme compare with Ethereum? We have an L2 project, in this case, with Polkadot, it's a parachain. A parachain also generates information blocks, which then go to the relay chain to be combined and release a relay chain block as the sum of all headers, headers, and more headers. The parachain collects transactions in a block using collators, which are not involved in validation. They don't stake anything in the relay chain; they only use the runtime, which is in the relay chain. They fetch it, apply it to transactions, perform necessary state transitions, form a block, and, crucially, provide proof of validity—a stamp containing cryptographic proofs that the collator correctly assembled the block. This information goes to the external validation ring of the relay chain. In this ring, there are internal validators of Polkadot—parachain collators. Again, they don't stake anything directly from the relay chain's point of view. Parachain implementations sometimes introduce their consensus among collators, and some don't. For example, in Robonomics, implementing a parachain, we find this paradigm more interesting, less burdensome, and it makes the network simpler while still remaining functionally substantial. Any collator, without reaching consensus with anyone—verified by us—can propose a block and some proof to the external layer. This is precisely why blocks are proposed, proofs of block assembly validity are offered, and there's an external ring. We don't need any consensus from parachain validators. Anyone can generate a block and send it, and if this node of the collator sends incorrect information to the parachain validators on the external ring, the validator at this level will reject it. It won't pass into the central part. But let's say the block was provided correctly by the collator. Our transactions got in; the collator calculated them, applying the runtime stored in the relay chain, executed all state transitions, gathered some proof of validity—validity of the assembled block—and passed it to the external ring of the relay chain. Here, every epoch, which is also part of the finalization, every epoch has validators from the relay chain diverging into parachains. Some of them stay in the center, and the others go to parachains. Their number ranges from 16 to 64 validators, and this figure, I believe, will change in the specification—somewhere more, somewhere less. However, parachain validators re-verify the information from one selected group of validators about everything coming from the collator being correct, that work has been done in accordance with the runtime, and that the proof of validity is indeed valid. The selected segment of relay chain validators who already have something staked respond, or rather, chirp among themselves. They respond to the chosen main block producer of the parachain, so to speak, saying,": "Al observar este diagrama, intenta notar las analogías que surgen y las diferencias en los detalles de implementación de ingeniería. Entonces, ¿qué representa esto y cómo se compara este esquema con Ethereum? Tenemos un proyecto L2, en este caso, con Polkadot, es una parachain. Una parachain también genera bloques de información, que luego van a la cadena de retransmisión para combinarse y liberar un bloque de cadena de retransmisión como la suma de todas las cabeceras, cabeceras y más cabeceras. La parachain recopila transacciones en un bloque utilizando collators, que no participan en la validación. No apuestan nada en la cadena de retransmisión; solo utilizan el tiempo de ejecución, que está en la cadena de retransmisión. Lo obtienen, lo aplican a las transacciones, realizan transiciones de estado necesarias, forman un bloque y, crucialmente, proporcionan una prueba de validez: un sello que contiene pruebas criptográficas de que el collator ensambló correctamente el bloque. Esta información va al anillo de validación externo de la cadena de retransmisión. En este anillo, hay validadores internos de Polkadot: collators de parachain. Nuevamente, no apuestan nada directamente desde el punto de vista de la cadena de retransmisión. Las implementaciones de parachain a veces introducen su consenso entre collators, y algunas no. Por ejemplo, en Robonomics, implementando una parachain, encontramos este paradigma más interesante, menos pesado y hace que la red sea más simple pero sigue siendo funcionalmente sustancial. Cualquier collator, sin llegar a un consenso con nadie, verificado por nosotros, puede proponer un bloque y alguna prueba a la capa externa. Es precisamente por esto que se proponen bloques, se ofrecen pruebas de validez del ensamblaje del bloque y hay un anillo externo. No necesitamos ningún consenso de los validadores de parachain. Cualquiera puede generar un bloque y enviarlo, y si este nodo del collator envía información incorrecta a los validadores de parachain en el anillo externo, el validador en este nivel lo rechazará. No pasará a la parte central. Pero digamos que el bloque fue proporcionado correctamente por el collator. Nuestras transacciones entraron; el collator las calculó, aplicando el tiempo de ejecución almacenado en la cadena de retransmisión, ejecutó todas las transiciones de estado, reunió alguna prueba de validez: validez del bloque ensamblado y la pasó al anillo externo de la cadena de retransmisión. Aquí, en cada época, que también es parte de la finalización, cada época tiene validadores de la cadena de retransmisión divergiendo en parachains. Algunos se quedan en el centro y otros van a parachains. Su número varía de 16 a 64 validadores, y esta cifra, creo, cambiará en la especificación: en algunos lugares más, en otros menos. Sin embargo, los validadores de parachain vuelven a verificar la información de un grupo seleccionado de validadores sobre todo lo que proviene del collator es correcto, que el trabajo se ha realizado de acuerdo con el tiempo de ejecución y que la prueba de validez es realmente válida. El segmento seleccionado de validadores de la cadena de retransmisión que ya tienen algo apostado responden, o mejor dicho, trinan entre ellos. Responden al productor principal de bloques seleccionado de la parachain, por así decirlo, diciendo: ",
  "\"Yes, we agree. There are no problems. You can carry it through the entire external ring inside.\"": "\"Sí, estamos de acuerdo. No hay problemas. Puedes llevarlo a través de todo el anillo externo interior.\"",
  "And thus, almost all information formed on the parachain collators, with verification on the external ring, enters the internal one. The lower part, not that it's physically at the bottom, still constitutes the external ring—data availability. Data starts to be checked at this stage, meaning that on the external ring, not only the correctness of block assembly is verified, but the process of preparing for distribution within the Polkadot network begins, ensuring that the block information will not be lost in the future. Here, precisely, is what I mentioned in the second part about chunks, like CD RW. At this stage of block preparation for transfer to the internal ring, the data availability layer is formed as a service, something that is currently also attempted by some projects in Ethereum. Some projects put additional redundant information directly into smart contracts, necessary for checking what is happening on the L2 layer and, if necessary, slashing or punishing those who did it incorrectly. It's impossible to overcome the external ring without distributing block information and without rechecking dozens of nodes with stakes laid down on the assumption that the runtime must work correctly.": "Y así, casi toda la información formada en los recolectores de paracadenas, con verificación en el anillo externo, entra en el interno. La parte inferior, no es que esté físicamente en la parte inferior, sigue constituyendo el anillo externo: disponibilidad de datos. Los datos comienzan a ser verificados en esta etapa, lo que significa que en el anillo externo, no solo se verifica la corrección del ensamblaje de bloques, sino que comienza el proceso de preparación para la distribución dentro de la red Polkadot, asegurando que la información del bloque no se pierda en el futuro. Aquí, precisamente, es lo que mencioné en la segunda parte sobre fragmentos, como CD RW. En esta etapa de preparación del bloque para transferirlo al anillo interno, la capa de disponibilidad de datos se forma como un servicio, algo que actualmente también intentan algunos proyectos en Ethereum. Algunos proyectos colocan información redundante adicional directamente en contratos inteligentes, necesaria para verificar lo que está sucediendo en la capa L2 y, si es necesario, sancionar o castigar a aquellos que lo hicieron incorrectamente. Es imposible superar el anillo externo sin distribuir información de bloque y sin volver a verificar docenas de nodos con apuestas realizadas bajo la suposición de que el tiempo de ejecución debe funcionar correctamente.",
  "Thus, information that has passed through the external ring is already quite trustworthy, probably yes, you can say that, and on the internal ring, work is mainly done not with parachain blocks, but their block headers are collected into one big header. That is, from many headers, one header of a relay chain block is assembled—a mechanism of linking in Shared Security, as mentioned in Polkadot, which ensures the security of parachains. One could say that parachains are validated and reach a state where the service exists in a distributed decentralized form on the external ring. In the internal ring, the information that has entered attempts to come together in one hyperblock, which should precisely link everything together. There are no calculations happening there; there is no recalculation of absolutely everything. The assembly of the final block takes place, so to speak, in the current iteration of the world computer, to put a point on the question of whether the transaction has passed in a particular parachain. We must assemble a hyperblock that contains not all the information from the parachains but gathers all the headers verified on the external ring of parachains into one large block. And thus, our world computer in Polkadot operates.": "Así, la información que ha pasado por el anillo externo ya es bastante confiable, probablemente sí, se puede decir eso, y en el anillo interno, el trabajo se hace principalmente no con bloques de paracadenas, sino que sus encabezados de bloque se recopilan en un gran encabezado. Es decir, a partir de muchos encabezados, se ensambla un encabezado de un bloque de cadena de relevos: un mecanismo de vinculación en Shared Security, como se menciona en Polkadot, que garantiza la seguridad de las paracadenas. Se podría decir que las paracadenas son validadas y alcanzan un estado donde el servicio existe en una forma distribuida descentralizada en el anillo externo. En el anillo interno, la información que ha ingresado intenta unirse en un hiperbloque, que debería enlazar todo precisamente. No hay cálculos sucediendo allí; no hay recalculo de absolutamente todo. El ensamblaje del bloque final tiene lugar, por así decirlo, en la iteración actual del ordenador mundial, para poner un punto en la pregunta de si la transacción ha pasado en una paracadena particular. Debemos ensamblar un hiperbloque que contenga no toda la información de las paracadenas, sino que reúna todos los encabezados verificados en el anillo externo de las paracadenas en un bloque grande. Y así, nuestro ordenador mundial en Polkadot opera.",
  "Let's take another look at these two schemes together: relay chain, beacon chain, runtime, secured by proof of stake, where someone stakes their funds to validate that they will always perform their work correctly. There's a virtual machine where you can also stake your funds, and if you perform any computation or state transition not in accordance with the Ethereum Virtual Machine's specification, you'll be penalized.": "Echemos otro vistazo a estos dos esquemas juntos: cadena de relé, cadena de faro, tiempo de ejecución, asegurado por prueba de participación, donde alguien apuesta sus fondos para validar que siempre realizarán su trabajo correctamente. Hay una máquina virtual donde también puedes apostar tus fondos, y si realizas alguna computación o transición de estado que no esté de acuerdo con la especificación de la Máquina Virtual de Ethereum, serás penalizado.",
  "In Polkadot, there's an additional external layer, which seems to be one of the main advantages, such pleasant perks of the engineering implementation that, in my opinion, should be present here. It should appear between L2 networks and the beacon chain, which exists in Ethereum. By the way, some say that the term \"beacon chain\" is dying out again and is misunderstood, but I really like to use it in analogy with the \"relay chain,\" a term from Ethereum's roadmap.": "En Polkadot, hay una capa externa adicional, que parece ser una de las principales ventajas, tales como agradables ventajas de la implementación de ingeniería que, en mi opinión, deberían estar presentes aquí. Debería aparecer entre las redes L2 y la cadena de faro, que existe en Ethereum. Por cierto, algunos dicen que el término \"cadena de faro\" está desapareciendo de nuevo y es malinterpretado, pero realmente me gusta usarlo en analogía con la \"cadena de relé,\" un término del roadmap de Ethereum.",
  "And perhaps one more interesting story in this part of the lecture: so far, we can hardly imagine proper cross-chain messages between L2 networks in Ethereum. Maybe I missed something in the papers, but when you don't have an external ring and issues like collators, paravalidators, and data availability services are not resolved, thinking about how two L2 layers can communicate is challenging. Yet, in Polkadot, it exists. Even horizontally, through the relay chain, meaning directly, one can send a transaction securely from one parachain to another, without trusting any bridges between these two parachains. This is another crucial functionality that will likely need to be implemented at the level of connecting L2 networks. Smart contracts in Ethereum communicate well. We have created many chains of linked smart contracts, where one triggers another. With this, there is no problem. But when we say that almost all applications are moving to the L2 layer in a heterogeneous network, I hear that if you live in a specific area, you won't be able to get out. That's not the case at the level of parachains and implementation in Polkadot. Both architectures are worth watching, as, in my opinion, the engineering implementation follows the mainstream path of becoming a global computer. They differ slightly, but there are many similarities. There's an enormous amount of engineering work everywhere. As we see, human civilization, in the form of a multitude of researchers, engineers, and growing developers with significant resources for further development, is moving roughly in the same direction from the smallest early stage to probably some future establishment of the world's computer, all on the same tracks.": "Y quizás una historia más interesante en esta parte de la conferencia: hasta ahora, apenas podemos imaginar mensajes adecuados entre redes L2 en Ethereum. Tal vez me perdí algo en los documentos, pero cuando no tienes un anillo externo y problemas como los recolectores, paravalidadores y servicios de disponibilidad de datos no están resueltos, pensar en cómo pueden comunicarse dos capas L2 es un desafío. Sin embargo, en Polkadot, existe. Incluso horizontalmente, a través de la cadena de retransmisión, lo que significa que directamente, se puede enviar una transacción de forma segura desde una paracadena a otra, sin confiar en ningún puente entre estas dos paracadenas. Esta es otra funcionalidad crucial que probablemente necesitará implementarse a nivel de conexión de redes L2. Los contratos inteligentes en Ethereum se comunican bien. Hemos creado muchas cadenas de contratos inteligentes vinculados, donde uno activa otro. Con esto, no hay problema. Pero cuando decimos que casi todas las aplicaciones se están trasladando a la capa L2 en una red heterogénea, escucho que si vives en una área específica, no podrás salir. Eso no es así a nivel de paracadenas e implementación en Polkadot. Ambas arquitecturas merecen ser observadas, ya que, en mi opinión, la implementación de ingeniería sigue el camino principal de convertirse en una computadora global. Difieren ligeramente, pero hay muchas similitudes. Hay una enorme cantidad de trabajo de ingeniería en todas partes. Como vemos, la civilización humana, en forma de una multitud de investigadores, ingenieros y desarrolladores en crecimiento con recursos significativos para un mayor desarrollo, se está moviendo aproximadamente en la misma dirección desde las primeras etapas más pequeñas hasta probablemente algún futuro establecimiento de la computadora mundial, todo en las mismas pistas.",
  "Part 1: The Idea of a World Computer": "Parte 1: La idea de una computadora mundial",
  "This is the first part of a four-part lecture titled \"World Computer in Your Home.\" In the first part, titled \"The Idea of a World Computer,\" I want to analyze and share my own reflections that have, in a broader historical context, gathered around the hashtag \"world computer.\"": "Esta es la primera parte de una conferencia de cuatro partes titulada \"Computadora mundial en tu hogar\". En la primera parte, titulada \"La idea de una computadora mundial\", quiero analizar y compartir mis propias reflexiones que, en un contexto histórico más amplio, se han reunido en torno al hashtag \"computadora mundial\".",
  "To begin with, let's try to gather a generalized understanding of what a world computer is, without delving into terminology or specific technical details. If you take your mobile phone in hand and look at the icons, you can notice that practically every application on the phone has two major segments or areas of operation.": "Para empezar, intentemos reunir una comprensión general de lo que es una computadora mundial, sin profundizar en la terminología o detalles técnicos específicos. Si tomas tu teléfono móvil en la mano y miras los iconos, puedes notar que prácticamente cada aplicación en el teléfono tiene dos segmentos principales o áreas de funcionamiento.",
  "The first is the local part, meaning, for example, your calculator or notes application. This is a completely local application that requires almost no external communication. Although even applications like the notes app on an iPhone are a bit more than that, let's focus on the more austere Open Source side of applications for Android phones, so to speak.": "El primero es la parte local, es decir, por ejemplo, tu calculadora o aplicación de notas. Esta es una aplicación completamente local que requiere casi ninguna comunicación externa. Aunque incluso aplicaciones como la aplicación de notas en un iPhone son un poco más que eso, centrémonos en el lado más austero de las aplicaciones de código abierto para teléfonos Android, por así decirlo.",
  "The second part requires cloud infrastructure, and here, when the question of cloud infrastructure arises, a multitude of quite complex stories begins: who owns this cloud infrastructure, what capabilities do developers have to add features to an application, and in general, how does the user own this application? What capabilities and responsibilities does the user have when dealing with an application that exists not only on their phone but also in some infrastructure beyond their pocket or palm? The world computer is precisely one example of how the developer community responds to these obvious questions. Obvious questions about creating higher-quality applications for your mobile phone, laptop, server, and any other smart device that needs to connect to the network and obtain knowledge from there.": "La segunda parte requiere infraestructura en la nube, y aquí, cuando surge la pregunta de la infraestructura en la nube, comienzan una multitud de historias bastante complejas: quién posee esta infraestructura en la nube, qué capacidades tienen los desarrolladores para agregar funciones a una aplicación y, en general, ¿cómo posee el usuario esta aplicación? ¿Qué capacidades y responsabilidades tiene el usuario al tratar con una aplicación que no solo existe en su teléfono, sino también en alguna infraestructura más allá de su bolsillo o palma? La computadora mundial es precisamente un ejemplo de cómo la comunidad de desarrolladores responde a estas preguntas obvias. Preguntas obvias sobre la creación de aplicaciones de mayor calidad para tu teléfono móvil, computadora portátil, servidor y cualquier otro dispositivo inteligente que necesite conectarse a la red y obtener conocimiento de allí.",
  "The world computer is, accordingly, the same cloud, the same infrastructure that exists on the internet, with which developers can interact and publish their applications. As a user, you can install, download, and run them on your PC. However, with one interesting, crucial feature: no one actually owns the infrastructure or cloud of the world computer. There is no specific company, jurisdiction, or individual on Earth who can determine and say whether you can publish your application there or not, whether you have the right to access this world computer infrastructure to receive the provided service. Therefore, the world computer is a cloud in which any developer can place their application, and any user with access solely to the internet network and not to a specific IP address behind a firewall can use the application by paying for computations from their pocket.": "La computadora mundial es, en consecuencia, la misma nube, la misma infraestructura que existe en internet, con la cual los desarrolladores pueden interactuar y publicar sus aplicaciones. Como usuario, puedes instalar, descargar y ejecutarlas en tu PC. Sin embargo, con una característica interesante y crucial: nadie realmente posee la infraestructura o nube de la computadora mundial. No hay una empresa específica, jurisdicción o individuo en la Tierra que pueda determinar y decir si puedes publicar tu aplicación allí o no, si tienes derecho a acceder a esta infraestructura de computadora mundial para recibir el servicio proporcionado. Por lo tanto, la computadora mundial es una nube en la que cualquier desarrollador puede colocar su aplicación, y cualquier usuario con acceso únicamente a la red de internet y no a una dirección IP específica detrás de un firewall puede usar la aplicación pagando por cálculos desde su bolsillo.",
  "Here's the story in a generalized format. There is no mention of \"blockchain,\" no mention of \"smart contracts,\" but these concepts are underneath. Let's still acknowledge: a world computer is a cloud infrastructure that is sovereign, owned by no one, allowing each developer to avoid censorship from platform owners offering app downloads. It also prevents users from being in a situation where they don't understand how an app works on their phone. In my opinion, these are important and cool features deserving respect and attention from those who want to create more futuristic, cooler applications. This is precisely what my team and I have been doing for eight years, choosing perhaps the most challenging area - creating services for robotics on the world computer, which seems to be right outside your door, quietly scraping and saying, \"I want to come into your home.\"": "Aquí está la historia en un formato generalizado. No se menciona \"blockchain\", no se menciona \"contratos inteligentes\", pero estos conceptos están debajo. Aún así, reconozcamos: una computadora mundial es una infraestructura en la nube que es soberana, propiedad de nadie, lo que permite a cada desarrollador evitar la censura de los propietarios de plataformas que ofrecen descargas de aplicaciones. También evita que los usuarios se encuentren en una situación en la que no entienden cómo funciona una aplicación en su teléfono. En mi opinión, estas son características importantes y geniales que merecen respeto y atención de aquellos que desean crear aplicaciones más futuristas y geniales. Esto es precisamente lo que mi equipo y yo hemos estado haciendo durante ocho años, eligiendo quizás el área más desafiante: crear servicios para la robótica en la computadora mundial, que parece estar justo afuera de tu puerta, rascando silenciosamente y diciendo: \"Quiero entrar en tu hogar.\"",
  "Now, let's move on to a timeline and look through my personal experience at how the concept of the world computer evolved. First, let's go back to 2012. This year is notable because Bitcoin already exists as a global internet service, accessible to everyone, not owned by anyone specific. By 2012, besides Bitcoin, its so-called forks start appearing. One of the most well-known is Litecoin.": "Ahora, pasemos a una línea de tiempo y revisemos mi experiencia personal en cómo evolucionó el concepto de la computadora mundial. Primero, retrocedamos a 2012. Este año es notable porque Bitcoin ya existe como un servicio global de internet, accesible para todos, no propiedad de nadie en específico. Para 2012, además de Bitcoin, comienzan a aparecer sus llamadas bifurcaciones. Una de las más conocidas es Litecoin.",
  "Litecoin is notable because its developer did the most important work for the entire community. He collected the most crucial configurable variables or constants from different parts of Bitcoin's code after the protocol was launched. This allowed specifying block generation time, block reward, and, statistically, Litecoin is more frequently forked than Bitcoin. When we say \"fork of Bitcoin,\" I can confidently say that, in most cases, it will be a fork of Litecoin.": "Litecoin es notable porque su desarrollador hizo el trabajo más importante para toda la comunidad. Recopiló las variables o constantes configurables más cruciales de diferentes partes del código de Bitcoin después de que se lanzara el protocolo. Esto permitió especificar el tiempo de generación de bloques, la recompensa por bloque y, estadísticamente, Litecoin se bifurca con más frecuencia que Bitcoin. Cuando decimos \"bifurcación de Bitcoin\", puedo decir con confianza que, en la mayoría de los casos, será una bifurcación de Litecoin.",
  "Namecoin is also a fork of Bitcoin, and if memory serves me right, it was initially a direct fork from Bitcoin, and then Litecoin appeared a few months later in 2011. However, Namecoin turned out to be a bit different, paving the way for many developers mentally on where ideas underlying Bitcoin's internet service could evolve. Namecoin went beyond being just a coin; it could store identity as a database and allow an internet service to place your domain name. This was the first example where an internet service spawned from Bitcoin could have a different nature, not just like Litecoin with fast transactions but the ability to pay for storing certain information with its internal currency, an internal token. For example, the name in the .bit domain zone.": "Namecoin también es un fork de Bitcoin, y si la memoria no me falla, inicialmente fue un fork directo de Bitcoin, y luego Litecoin apareció unos meses después en 2011. Sin embargo, Namecoin resultó ser un poco diferente, allanando el camino para muchos desarrolladores en cuanto a dónde podrían evolucionar las ideas subyacentes del servicio de internet de Bitcoin. Namecoin fue más allá de ser solo una moneda; podía almacenar identidades como una base de datos y permitir que un servicio de internet colocara tu nombre de dominio. Este fue el primer ejemplo donde un servicio de internet derivado de Bitcoin podría tener una naturaleza diferente, no solo como Litecoin con transacciones rápidas, sino la capacidad de pagar por almacenar cierta información con su moneda interna, un token interno. Por ejemplo, el nombre en la zona de dominio .bit.",
  "Developers worldwide were experimenting with Bitcoin, mostly creating forks, making them faster, cheaper electronic cash. Alongside this, the first services appeared, seeing opportunities not only in financial applications but also in cross-industrial applications in other areas like Namecoin. Namecoin provided the first globally accessible and unowned internet service through which you could launch your website without being under the jurisdiction of a specific organization but within a distributed globally accessible network. This moment is crucial for us to move on to the early precursors of the world computer's ideas.": "Los desarrolladores de todo el mundo estaban experimentando con Bitcoin, principalmente creando forks, haciéndolos más rápidos, más baratos y efectivo electrónico. Junto a esto, aparecieron los primeros servicios, viendo oportunidades no solo en aplicaciones financieras, sino también en aplicaciones interindustriales en otras áreas como Namecoin. Namecoin proporcionó el primer servicio de internet globalmente accesible y sin dueño a través del cual podías lanzar tu sitio web sin estar bajo la jurisdicción de una organización específica, sino dentro de una red globalmente accesible y distribuida. Este momento es crucial para avanzar hacia los precursores tempranos de las ideas de la computadora mundial.",
  "The first practical ideas of the world computer emerged in 2014, two years after the appearance of the first wave of Bitcoin forks and the creation of meaningful services dedicated not only to electronic cash but also exploring broader themes. We encounter ideas that precede the launch of Ethereum.": "Las primeras ideas prácticas de la computadora mundial surgieron en 2014, dos años después de la aparición de la primera ola de forks de Bitcoin y la creación de servicios significativos dedicados no solo al efectivo electrónico, sino también explorando temas más amplios. Nos encontramos con ideas que preceden al lanzamiento de Ethereum.",
  "In 2014, at several meetups worldwide, in Miami and, I believe, in Europe, Vitalik Buterin articulated sensible ideas. He suggests that we can develop not just a set of internet services that essentially function as a Swiss army knife, right? We can develop a virtual machine. Those with an education in Computer Science probably remember what an infinite tape is in Turing machines, and if we go back to the theory of computational machines, we probably recall the theoretical origins of creating our personal computers, essentially the server infrastructure we have today. It's interesting that, fifty years after the development of von Neumann architecture and the complete Turing machine theory, and with the dawn of internet technologies only by 2014, and only after experiments with Bitcoin, the first idea emerges on our planet of creating a fully virtual computational machine based on the same theory that has been tested in the computer science industry for the past 50 years. The mechanics are the same as when creating any personal computer or server in a data center, but based more on achievements in internet technologies and the achievements of the world that will later be called Web3.": "En 2014, en varios encuentros en todo el mundo, en Miami y, creo, en Europa, Vitalik Buterin articuló ideas sensatas. Sugiere que podemos desarrollar no solo un conjunto de servicios de internet que funcionen esencialmente como una navaja suiza, ¿verdad? Podemos desarrollar una máquina virtual. Aquellos con educación en Ciencias de la Computación probablemente recuerdan qué es una cinta infinita en las máquinas de Turing, y si volvemos a la teoría de las máquinas computacionales, probablemente recordemos los orígenes teóricos de crear nuestras computadoras personales, esencialmente la infraestructura de servidores que tenemos hoy. Es interesante que, cincuenta años después del desarrollo de la arquitectura de von Neumann y la teoría completa de la máquina de Turing, y con el surgimiento de las tecnologías de internet solo en 2014, y solo después de experimentos con Bitcoin, surge la primera idea en nuestro planeta de crear una máquina computacional completamente virtual basada en la misma teoría que ha sido probada en la industria de la informática durante los últimos 50 años. Los mecanismos son los mismos que al crear cualquier computadora personal o servidor en un centro de datos, pero basados más en los logros en tecnologías de internet y los logros del mundo que luego se llamará Web3.",
  "Ethereum itself is not a Swiss army knife, not a set of specific internet services. It is, in the direct sense, a cloud, a computational machine. What lies at its core, I will tell you in the next lecture. Here, the most important thing for us is to focus on where the idea of Ethereum began. It started with the realization that, in two years, dozens of different internet services were invented that were interesting because they were globally accessible, available without censorship for developers to deploy. Users could use them only with an internal currency. However, what was not liked in all these concepts was that almost every interesting service required its own massive distributed infrastructure. Unlike familiar internet services, you couldn't just launch your globally accessible infrastructure if you were a very small person or a small team because such a network would be vulnerable, and the service itself would become unsafe. To overcome the problems that were side effects or negative externalities of creating your own globally accessible sovereign internet service, the concept of Ethereum emerged. Ethereum, as a full-fledged cloud capable of handling any formalized computation, allows you to write your program code, a complete program essentially, and run it in the same blockchain alongside hundreds of other applications. This possibility, sounding from the small stages of 2014, naturally captivated the minds of many and seemed absolutely logical for someone with a basic education in Computer Science. If you could understand what Turing completeness was by 2014, if you could envision the historical theory of creating a personal computer, you would definitely not overlook the Ethereum whitepaper and would say that this is exactly what the entire developer community needs.": "Ethereum en sí mismo no es una navaja suiza, ni un conjunto de servicios específicos de internet. Es, en el sentido directo, una nube, una máquina computacional. Lo que yace en su núcleo, te lo diré en la próxima conferencia. Aquí, lo más importante para nosotros es enfocarnos en dónde comenzó la idea de Ethereum. Comenzó con la realización de que, en dos años, se inventaron docenas de diferentes servicios de internet que eran interesantes porque eran globalmente accesibles, disponibles sin censura para que los desarrolladores los implementaran. Los usuarios solo podían usarlos con una moneda interna. Sin embargo, lo que no gustaba en todos estos conceptos era que casi todos los servicios interesantes requerían su propia infraestructura distribuida masiva. A diferencia de los servicios de internet familiares, no podías simplemente lanzar tu infraestructura globalmente accesible si eras una persona muy pequeña o un equipo pequeño porque tal red sería vulnerable, y el servicio en sí mismo se volvería inseguro. Para superar los problemas que eran efectos secundarios o externalidades negativas de crear tu propio servicio de internet soberano globalmente accesible, surgió el concepto de Ethereum. Ethereum, como una nube completa capaz de manejar cualquier computación formalizada, te permite escribir tu código de programa, un programa completo esencialmente, y ejecutarlo en la misma cadena de bloques junto con cientos de otras aplicaciones. Esta posibilidad, sonando desde las primeras etapas de 2014, naturalmente cautivó las mentes de muchos y pareció absolutamente lógica para alguien con una educación básica en Ciencias de la Computación. Si pudieras entender qué era la completitud de Turing para 2014, si pudieras imaginar la teoría histórica de crear una computadora personal, definitivamente no pasarías por alto el libro blanco de Ethereum y dirías que esto es exactamente lo que toda la comunidad de desarrolladores necesita.",
  "I believe the year 2014 and Ethereum mark the first, though not explicitly named, instances of the concept of a global computer. It started with the idea that we don't need a Swiss knife; instead, we need infrastructure or a universal cloud that addresses global-level security challenges. Developers, at a low cost, should be able to deploy their applications there without concerning themselves with issues like securing the network or creating a network of providers for this computer or your specific internet service.": "Creo que el año 2014 y Ethereum marcan las primeras, aunque no explícitamente nombradas, instancias del concepto de una computadora global. Comenzó con la idea de que no necesitamos una navaja suiza; en cambio, necesitamos infraestructura o una nube universal que aborde los desafíos de seguridad a nivel global. Los desarrolladores, a bajo costo, deberían poder implementar sus aplicaciones allí sin preocuparse por problemas como asegurar la red o crear una red de proveedores para esta computadora o su servicio de internet específico.",
  "In 2015, Ethereum was effectively launched. From that moment onwards, even until 2020, I haven't encountered significant counterarguments against the idea of creating not just specific internet services but embracing and developing the concept of a virtual computer, virtual server, cloud, or a global computer, as I prefer to call it.": "En 2015, Ethereum fue lanzado efectivamente. A partir de ese momento, incluso hasta 2020, no he encontrado argumentos significativos en contra de la idea de crear no solo servicios de internet específicos, sino de abrazar y desarrollar el concepto de una computadora virtual, un servidor virtual, una nube o una computadora global, como prefiero llamarla.",
  "Various variations emerge, perhaps some remember the then-popular EOS suggesting a slightly different consumption paradigm. Despite my personal aversion to that project, with its 21st validator and all, it seemed sufficient for many. But it introduced the idea that owning tokens grants you a portion of bandwidth, which, in the realm of Robonomics architecture, remains interesting to me to this day.": "Surgen varias variaciones, quizás algunos recuerden el entonces popular EOS sugiriendo un paradigma de consumo ligeramente diferente. A pesar de mi aversión personal a ese proyecto, con sus 21 validadores y todo, parecía ser suficiente para muchos. Pero introdujo la idea de que poseer tokens te otorga una porción de ancho de banda, lo cual, en el ámbito de la arquitectura de Robonomics, sigue siendo interesante para mí hasta el día de hoy.",
  "Simultaneously, other ideas on how to modernize the Ethereum network arise. Projects like Definity, Solana, and others come into play. Around the same time, Gavin Wood introduces Polkadot, who assisted Vitalik in creating Ethereum. From a multitude of technological projects between 2015 and 2020, we move from a race to create individual internet service variants to witnessing, on a communication protocol level, the emergence of something like Ethereum killers. Many projects started under this slogan, taking the idea of a unified cloud for multiple internet services and modifying some aspects. For instance, EOS proposed an alternative utilization scheme, where only token-backed ownership allowed access to bandwidth. There were projects where the programming language for writing code was more interesting. For example, during a hackathon for BMW, when we won with an implementation on Ethereum, the automaker immediately stated that we wouldn't go any further unless we had formally verified contracts, which was impossible to achieve on Ethereum at that time.": "Al mismo tiempo, surgen otras ideas sobre cómo modernizar la red Ethereum. Proyectos como Definity, Solana y otros entran en juego. Alrededor del mismo tiempo, Gavin Wood presenta Polkadot, quien ayudó a Vitalik a crear Ethereum. De una multitud de proyectos tecnológicos entre 2015 y 2020, pasamos de una carrera para crear variantes individuales de servicios de internet a presenciar, a nivel de protocolo de comunicación, la emergencia de algo como los asesinos de Ethereum. Muchos proyectos comenzaron bajo este lema, tomando la idea de una nube unificada para múltiples servicios de internet y modificando algunos aspectos. Por ejemplo, EOS propuso un esquema de utilización alternativo, donde solo la propiedad respaldada por tokens permitía el acceso al ancho de banda. Hubo proyectos donde el lenguaje de programación para escribir código era más interesante. Por ejemplo, durante un hackathon para BMW, cuando ganamos con una implementación en Ethereum, el fabricante de automóviles declaró de inmediato que no avanzaríamos más a menos que tuviéramos contratos formalmente verificados, lo cual era imposible de lograr en Ethereum en ese momento.",
  "At this moment, as you read about the ideas of Eternity and other networks, you may think, \"I should try working with them too.\" Service developers understood this, as did, as I mentioned, projects like Definity, which recently launched the World Computer and is gaining traction. Simultaneously, the idea of Polkadot emerges as a heterogeneous multi-chain framework. Ethereum, around the mid-2010s, also received a roadmap for scalability and development. By 2024, almost all concepts converge on the idea of having not just one database or blockchain but a multitude. Various transaction processing methods, two-layer consensus algorithms, optimistic majority approaches, and a plethora of technical implementation variations emerge, all aiming at the same global computer concept.": "En este momento, mientras lees sobre las ideas de Eternity y otras redes, es posible que pienses: \"Debería intentar trabajar con ellas también\". Los desarrolladores de servicios entendieron esto, al igual que, como mencioné, proyectos como Definity, que recientemente lanzó la World Computer y está ganando impulso. Al mismo tiempo, surge la idea de Polkadot como un marco heterogéneo de múltiples cadenas. Ethereum, alrededor de mediados de la década de 2010, también recibió una hoja de ruta para escalabilidad y desarrollo. Para 2024, casi todos los conceptos convergen en la idea de no tener solo una base de datos o blockchain, sino una multitud. Surgen diversos métodos de procesamiento de transacciones, algoritmos de consenso de dos capas, enfoques optimistas de mayoría y una plétora de variaciones de implementación técnica, todos apuntando al mismo concepto de computadora global.",
  "Let's now go through a timeline snapshot:": "Ahora pasemos a un vistazo a la línea de tiempo:",
  "**2009-2012**: Emergence of the first globally accessible internet service for electronic cash - Bitcoin.": "**2009-2012**: Emergencia del primer servicio de internet globalmente accesible para dinero electrónico - Bitcoin.",
  "**Early 2012**: The first fork war occurs, with projects emerging to replicate similar services. Some multi-billion projects create their forks. Simultaneously, projects like Namecoin propose interesting ideas.": "**Principios de 2012**: Ocurre la primera guerra de bifurcaciones, con proyectos emergentes para replicar servicios similares. Algunos proyectos multimillonarios crean sus bifurcaciones. Al mismo tiempo, proyectos como Namecoin proponen ideas interesantes.",
  "**2014**: The concept of a world computer emerges, requiring a deep understanding of computer science theory and immersion in Bitcoin's development.": "**2014**: Surge el concepto de una computadora mundial, que requiere una comprensión profunda de la teoría de la ciencia informática y una inmersión en el desarrollo de Bitcoin.",
  "**2015-2020**: The concept moves from theory to practice. Modifications and variations of Ethereum arise, introducing different ideas with varying degrees of quality. The term \"World Computer\" became established.": "**2015-2020**: El concepto pasa de la teoría a la práctica. Surgen modificaciones y variaciones de Ethereum, introduciendo diferentes ideas con diferentes grados de calidad. El término \"Computadora Mundial\" se estableció.",
  "**2024**: We reach the World Computer, a term now well-established, marking the transition from a simple calculator on your phone to a globally accessible institution. The idea of the World Computer encompasses future money, programming money, storage for identification records, and important documents.": "**2024**: Alcanzamos la Computadora Mundial, un término ahora bien establecido, marcando la transición de una simple calculadora en tu teléfono a una institución globalmente accesible. La idea de la Computadora Mundial abarca el dinero futuro, la programación de dinero, el almacenamiento de registros de identificación y documentos importantes.",
  "In conclusion, from a simple calculator to a globally accessible institution, the idea of the World Computer has evolved. It's seen as a place for the future of money and the storage of vital records. The concept of a World Computer has progressed from theoretical discussions to practical engineering implementations. In the next lecture, the discussion will delve into what a World Computer actually represents. It is fundamentally a state transition function, a concept to be explored further in the upcoming lecture, emphasizing its importance and the need to safeguard it.": "En conclusión, desde una simple calculadora hasta una institución globalmente accesible, la idea de la Computadora Mundial ha evolucionado. Se ve como un lugar para el futuro del dinero y el almacenamiento de registros vitales. El concepto de una Computadora Mundial ha progresado de discusiones teóricas a implementaciones de ingeniería prácticas. En la próxima conferencia, la discusión se adentrará en lo que realmente representa una Computadora Mundial. Es fundamentalmente una función de transición de estado, un concepto que se explorará más en la próxima conferencia, enfatizando su importancia y la necesidad de protegerlo.",
  "Part 2: The Heart of the World Computer": "Parte 2: El Corazón de la Computadora Mundial",
  "What lies at the core of projects like Ethereum or Polkadot, or any other web3 project claiming the title of the world computer, and why does the comparison with the heart in the human body fit so well into the abstract architecture of the world computer?": "¿Qué se encuentra en el núcleo de proyectos como Ethereum o Polkadot, o cualquier otro proyecto web3 que reclame el título de la computadora mundial, y por qué la comparación con el corazón en el cuerpo humano encaja tan bien en la arquitectura abstracta de la computadora mundial?",
  "Let's try to understand these questions in this part of the lecture, and to begin with, we'll have to break the chains of Bitcoin maximalists a bit. Most likely, you've already read one or several popular science articles dedicated to Bitcoin in your life, and the main thing that is practically noted everywhere is the three main advantages of Bitcoin as electronic cash:": "Intentemos entender estas preguntas en esta parte de la conferencia, y para empezar, tendremos que romper un poco las cadenas de los maximalistas de Bitcoin. Lo más probable es que ya hayas leído uno o varios artículos de divulgación científica dedicados a Bitcoin en tu vida, y lo principal que se nota prácticamente en todas partes son las tres principales ventajas de Bitcoin como efectivo electrónico:",
  "Censorship resistance": "Resistencia a la censura",
  "Immutability of data stored in the Bitcoin blockchain": "Inmutabilidad de los datos almacenados en la cadena de bloques de Bitcoin",
  "Transparency of transactions": "Transparencia de las transacciones",
  "Let's quickly go through each of these properties, and most importantly, at the end, we'll need to step back a bit from them, as the world computer inherits them as some kind of successor to Bitcoin.": "Repasemos rápidamente cada una de estas propiedades, y lo más importante, al final, tendremos que retroceder un poco de ellas, ya que la computadora mundial las hereda como una especie de sucesor de Bitcoin.",
  "**Firstly**, immutability of data. Of course, this property, from the perspective of electronic cash, has significant advantages and importance. After you send a transaction or receive bitcoins, after one or two blocks, you gradually begin to feel the immutability of data in the blockchain. In the first 15 minutes, you can observe, using a blockchain explorer, how the transaction should settle. You already see it in the network, but it is not finalized, meaning these bitcoins are not yet in your account. However, after several blocks, there is confidence that these funds will not disappear from your account. As time passes, the probability of values being somehow overwritten from your account becomes almost negligible, practically reducing to zero. This is our property of data immutability. How cool it is when you can share information with the recipient, send them a link to the blockchain explorer, and you don't need to obtain any paper or document from the bank stating that you sent a payment on a certain date and time - this is the second advantage of Bitcoin that is very helpful in practice and is probably the most pleasant perk when comparing a bank transfer and a Bitcoin transfer.": "**En primer lugar**, inmutabilidad de datos. Por supuesto, esta propiedad, desde la perspectiva del efectivo electrónico, tiene ventajas e importancia significativas. Después de enviar una transacción o recibir bitcoins, después de uno o dos bloques, gradualmente comienzas a sentir la inmutabilidad de los datos en la cadena de bloques. En los primeros 15 minutos, puedes observar, utilizando un explorador de bloques, cómo debería liquidarse la transacción. Ya lo ves en la red, pero no está finalizado, lo que significa que estos bitcoins aún no están en tu cuenta. Sin embargo, después de varios bloques, hay confianza en que estos fondos no desaparecerán de tu cuenta. Con el tiempo, la probabilidad de que los valores se sobrescriban de alguna manera de tu cuenta se vuelve casi insignificante, prácticamente reduciéndose a cero. Esta es nuestra propiedad de inmutabilidad de datos. Qué genial es cuando puedes compartir información con el destinatario, enviarle un enlace al explorador de bloques, y no necesitas obtener ningún papel o documento del banco que indique que enviaste un pago en una fecha y hora determinadas - esta es la segunda ventaja de Bitcoin que es muy útil en la práctica y probablemente el beneficio más agradable al comparar una transferencia bancaria y una transferencia de Bitcoin.",
  "**Secondly**, transparency of transactions. There is practically no fear when using Bitcoin that you will find yourself in a region of the world or connected to an internet provider through which you cannot perform operations with the Bitcoin network. There are practically no options other than locking you in a dark room without internet access so that you cannot use the Bitcoin network.": "**En segundo lugar**, transparencia de las transacciones. Prácticamente no hay temor al usar Bitcoin de que te encuentres en una región del mundo o conectado a un proveedor de internet a través del cual no puedas realizar operaciones con la red de Bitcoin. Prácticamente no hay opciones aparte de encerrarte en una habitación oscura sin acceso a internet para que no puedas usar la red de Bitcoin.",
  "These three properties are, of course, very important. Now, in order to understand the question \"What is at the heart of the world computer,\" we will need to step back from them, abstract ourselves, and make a small leap of faith, a jump, approximately, 100 years back to the 1930s.": "Estas tres propiedades son, por supuesto, muy importantes. Ahora, para entender la pregunta \"¿Qué está en el corazón de la computadora mundial,\" necesitaremos retroceder, abstraernos y dar un pequeño salto de fe, un salto, aproximadamente, 100 años atrás a la década de 1930.",
  "In 1936, Alan Turing made a proposal to the scientific community to solve the formalization problem and, in fact, a more qualitative description of such a concept as an algorithm. Interestingly, from Alan Turing's proposal, the architecture and development of all computer science in the future emerged, but he in no way pursued the idea of creating a personal computer, and he knew nothing about data centers or clouds. His task was to provide a way to define an algorithm in the context of the tasks faced by mathematicians. It's a fascinating picture over the span of a century that the achievement of computer science turns out to be a by-product of a rather mundane problem among mathematicians.": "En 1936, Alan Turing hizo una propuesta a la comunidad científica para resolver el problema de la formalización y, de hecho, una descripción más cualitativa de un concepto como un algoritmo. Curiosamente, a partir de la propuesta de Alan Turing, surgió la arquitectura y el desarrollo de toda la ciencia de la computación en el futuro, pero de ninguna manera persiguió la idea de crear una computadora personal, y no sabía nada sobre centros de datos o nubes. Su tarea era proporcionar una forma de definir un algoritmo en el contexto de las tareas que enfrentaban los matemáticos. Es una imagen fascinante a lo largo de un siglo que el logro de la ciencia de la computación resulta ser un subproducto de un problema bastante mundano entre los matemáticos.",
  "Let's delve into what Alan Turing proposed, without delving too deeply into algorithm theory and the purpose for which he suggested it. Alan Turing proposed the Turing machine, which represents an infinite tape (we can call it memory cells to make it easier), traversed by a reading and writing head. This head, positioned over a certain cell, can read data, apply some simple operations to them, and write new values.": "Adentrémonos en lo que propuso Alan Turing, sin profundizar demasiado en la teoría de algoritmos y el propósito para el cual lo sugirió. Alan Turing propuso la máquina de Turing, que representa una cinta infinita (podemos llamarla celdas de memoria para facilitarlo), recorrida por una cabeza de lectura y escritura. Esta cabeza, posicionada sobre una cierta celda, puede leer datos, aplicar algunas operaciones simples a ellos y escribir nuevos valores.",
  "Today, when you hear phrases like this, it might seem to you: \"Well, yes, it's a hard drive, a computer, or something like that.\" That's absolutely correct. This description gave rise to the first computer architecture. However, the main task of the Turing machine was to provide a means of representing a system or entity capable of performing any formalized computations. One can imagine a box or room, even filled with lamps, into which you insert your punch card, card, or transmit a Bluetooth signal, and the machine starts working, performing simple operations that ultimately solve your problem. Thus, the Turing machine is a universal computational mechanism that primarily solves the universal and essential task of providing a mechanism through which any simple computation or, more accurately, any formalized computation can be performed—computations that can be decomposed into the language of mathematics": "Hoy, cuando escuchas frases como esta, puede parecerte: \"Bueno, sí, es un disco duro, una computadora, o algo así.\" Eso es absolutamente correcto. Esta descripción dio origen a la primera arquitectura de computadora. Sin embargo, la tarea principal de la máquina de Turing era proporcionar un medio para representar un sistema o entidad capaz de realizar cualquier cálculo formalizado. Uno puede imaginar una caja o habitación, incluso llena de lámparas, en la que insertas tu tarjeta perforada, tarjeta, o transmites una señal Bluetooth, y la máquina comienza a funcionar, realizando operaciones simples que finalmente resuelven tu problema. Así, la máquina de Turing es un mecanismo computacional universal que resuelve principalmente la tarea universal y esencial de proporcionar un mecanismo a través del cual se puede realizar cualquier cálculo simple o, más precisamente, cualquier cálculo formalizado—cálculos que pueden descomponerse en el lenguaje de las matemáticas",
  "In essence, the task of the last 100 years, after finding some solution in the field of mathematics, was precisely to give it a physical form, to find the set of transistors that could be placed on a board, learn how to solder them all, reduce the processes of the computing processor, and so on. No wonder that the theory from 1936 finds application in 2014 for the ideas of the world computer. These 100 years were occupied, in general, in another area—the field of physically implementing this computer.": "En esencia, la tarea de los últimos 100 años, después de encontrar alguna solución en el campo de las matemáticas, fue precisamente darle una forma física, encontrar el conjunto de transistores que se podrían colocar en una placa, aprender a soldarlos todos, reducir los procesos del procesador de computación, y así sucesivamente. No es de extrañar que la teoría de 1936 encuentre aplicación en 2014 para las ideas de la computadora mundial. Estos 100 años estuvieron ocupados, en general, en otra área: el campo de implementar físicamente esta computadora.",
  "When the planet became saturated, and we had personal computers, computational machines even inside smart devices, and when data centers started growing on the planet, the question shifted from the hardware solution to how the computational machine might look not at the physical or mathematically abstract level but at some non-physical, perhaps metaphysical, level relative to the entire planet. However, the foundation remains the same: the state transition function and nothing else.": "Cuando el planeta se saturó, y teníamos computadoras personales, máquinas computacionales incluso dentro de dispositivos inteligentes, y cuando los centros de datos comenzaron a crecer en el planeta, la pregunta pasó de la solución de hardware a cómo podría verse la máquina computacional no a nivel físico o matemáticamente abstracto, sino a algún nivel no físico, quizás metafísico, en relación con todo el planeta. Sin embargo, la base sigue siendo la misma: la función de transición de estado y nada más.",
  "As an addition to what has been said, so that we don't only dwell on the theory of 1936 and don't just break the shackles of Bitcoin maximalists, open the Ethereum white paper. There you will find the crucial phrase \"Turing complete machine\"—this is the main definition of Ethereum. A Turing complete machine means that Ethereum can handle any simple operations described in a formal language, operations that are possible. This is not some set of operations that Ethereum can provide as a calculator or a sophisticated calculator for scientists. Instead, it is an abstraction inside which it is possible to load any possible variations, manipulations with variables, constants, additions, calculations with any states, and so on. You won't find anything different from what Turing proposed in the 1930s in the Ethereum concept. You will find an engineering implementation of how to do it. If we move on and open the Polkadot wiki, it's a bit more challenging to find. For this, you should use the search, enter \"State transition,\" and in the search results, find several mentions that Polkadot guarantees nothing else but the state transition. Neither the storage of data in the Polkadot blockchain nor any additional services—only the purest change of state caused by incoming transactions and processed by Polkadot validators. Now, let's try to delve more into this.": "Como complemento a lo dicho, para que no solo nos detengamos en la teoría de 1936 y no solo rompamos las cadenas de los maximalistas de Bitcoin, abran el libro blanco de Ethereum. Allí encontrarán la frase crucial \"máquina completa de Turing\"—esta es la definición principal de Ethereum. Una máquina completa de Turing significa que Ethereum puede manejar cualquier operación simple descrita en un lenguaje formal, operaciones que son posibles. No se trata de un conjunto de operaciones que Ethereum pueda proporcionar como una calculadora o una calculadora sofisticada para científicos. En cambio, es una abstracción dentro de la cual es posible cargar cualquier variación posible, manipulaciones con variables, constantes, adiciones, cálculos con cualquier estado, y así sucesivamente. No encontrarán nada diferente de lo que Turing propuso en la década de 1930 en el concepto de Ethereum. Encontrarán una implementación de ingeniería de cómo hacerlo. Si avanzamos y abrimos el wiki de Polkadot, es un poco más difícil de encontrar. Para esto, deben usar la búsqueda, ingresar \"Transición de estado\", y en los resultados de la búsqueda, encontrarán varias menciones de que Polkadot no garantiza nada más que la transición de estado. Ni el almacenamiento de datos en la cadena de bloques de Polkadot ni ningún servicio adicional—solo el cambio más puro de estado causado por transacciones entrantes y procesado por los validadores de Polkadot. Ahora, intentemos adentrarnos más en esto.",
  "Now, let's add a bit to this linear diagram to move from the theory of the 1930s to today's realities, where we describe the abstract picture of the world computer. To do this, let's consider an example with Alice and Bob. Alice, being in the office, wants to start Bob's home vacuum robot for cleaning. If we look at today's concepts of how the link between Alice's mobile application and the robot vacuum at home is implemented, you will see roughly the following picture: Alice's mobile application generates a transaction in some cloud where calculations take place, and the output of these calculations is the output values that effectively turn into a command to start the vacuum robot. It would be useful for us, from the field of robotics and Robonomics as concepts in the world of web3, to understand that in the cloud, there is a digital twin of this robot, and its state is changed. We can, in general, not go that far and stop at the fact that Alice sends a transaction to the cloud, and the cloud, having performed all the necessary calculations and manipulations, generates a command to start Bob's vacuum robot.": "Ahora, agreguemos un poco a este diagrama lineal para pasar de la teoría de la década de 1930 a las realidades actuales, donde describimos la imagen abstracta de la computadora mundial. Para hacer esto, consideremos un ejemplo con Alice y Bob. Alice, estando en la oficina, quiere iniciar el robot aspirador de Bob en casa para limpiar. Si observamos los conceptos actuales de cómo se implementa la conexión entre la aplicación móvil de Alice y el robot aspirador en casa, veremos aproximadamente la siguiente imagen: la aplicación móvil de Alice genera una transacción en algún lugar en la nube donde se realizan cálculos, y la salida de estos cálculos son los valores de salida que efectivamente se convierten en un comando para iniciar el robot aspirador. Sería útil para nosotros, desde el campo de la robótica y Robonomics como conceptos en el mundo de web3, entender que en la nube hay un gemelo digital de este robot, y su estado cambia. En general, no podemos ir tan lejos y detenernos en el hecho de que Alice envía una transacción a la nube, y la nube, después de realizar todos los cálculos y manipulaciones necesarios, genera un comando para iniciar el robot aspirador de Bob.",
  "In this scheme today, there are several main questions: if you were interacting with a physical computer in front of you or were in a room with the vacuum robot, you would approach, press a physical button, and set it in motion. What changes when instead of arrows, there is not a manual drive but a communication layer, the internet? A multitude of questions arises about how we can safely connect Alice and this cloud, how we can be sure that Alice has access to this cloud. The question of the communication network arises—how we can protect Alice from someone else addressing her vacuum robot, requesting, for example, to make a video of her entire apartment instead of cleaning, and a similar aspect arises: why would the vacuum robot listen to this cloud with such honor and integrity? Why would the robot fully trust this cloud?": "En este esquema actual, hay varias preguntas principales: si estuvieras interactuando con una computadora física frente a ti o estuvieras en una habitación con el robot aspirador, te acercarías, presionarías un botón físico y lo pondrías en movimiento. ¿Qué cambia cuando en lugar de flechas, no hay un control manual sino una capa de comunicación, internet? Surgirán multitud de preguntas sobre cómo podemos conectar de manera segura a Alice y esta nube, cómo podemos estar seguros de que Alice tiene acceso a esta nube. Surge la pregunta de la red de comunicación: ¿cómo podemos proteger a Alice de que alguien más se dirija a su robot aspirador, solicitando, por ejemplo, hacer un video de todo su apartamento en lugar de limpiar, y surge un aspecto similar: ¿por qué el robot aspirador escucharía a esta nube con tanto honor e integridad? ¿Por qué el robot confiaría plenamente en esta nube?",
  "Today's approach with the architecture of cloud solutions that connect your mobile phone, or rather, the application on your mobile phone, and some technology on the other side, smart devices, is based on the significant achievements in building physical computers. Computers in data centers today are something extraordinary—the level of technical processes is simply amazing. However, from the perspective of communication technologies, when you already have some experience working with internet applications, it seems that somewhere there, at the level of a technical school or college, or maybe not right next to how developers, architects of Intel processors are solving their tasks now. Almost all questions about connecting Alice to Bob boil down solely to outputting a specific access certificate on a specific IP address from both sides, linking them together, and the cloud will own and do anything. The most important thing in this scheme is to do anything, meaning to perform state transitions or operations that occur without any guarantees that for Alice, for Bob, these will be executed according to the same logic. No one can say anything about how the cloud is arranged. It is a black box where computations are not formalized, and neither Alice nor Bob knows how the computation is performed.": "El enfoque actual con la arquitectura de soluciones en la nube que conectan tu teléfono móvil, o más bien, la aplicación en tu teléfono móvil, y alguna tecnología en el otro lado, dispositivos inteligentes, se basa en los logros significativos en la construcción de computadoras físicas. Las computadoras en los centros de datos hoy en día son algo extraordinario: el nivel de procesos técnicos es simplemente asombroso. Sin embargo, desde la perspectiva de las tecnologías de comunicación, cuando ya tienes algo de experiencia trabajando con aplicaciones de internet, parece que en algún lugar, en el nivel de una escuela técnica o universidad, o tal vez no justo al lado de cómo los desarrolladores, arquitectos de procesadores Intel están resolviendo sus tareas ahora. Casi todas las preguntas sobre cómo conectar a Alice con Bob se reducen únicamente a emitir un certificado de acceso específico en una dirección IP específica desde ambos lados, vinculándolos juntos, y la nube poseerá y hará cualquier cosa. Lo más importante en este esquema es hacer cualquier cosa, es decir, realizar transiciones de estado u operaciones que ocurren sin garantías de que para Alice, para Bob, estas se ejecutarán de acuerdo con la misma lógica. Nadie puede decir nada sobre cómo está organizada la nube. Es una caja negra donde los cálculos no están formalizados, y ni Alice ni Bob saben cómo se realiza el cálculo.",
  "The place where you must fully trust—relying on the reputation of the company that owns these data centers, and you must completely trust the network access providers who issue a certificate and verify the security of your connection. In fact, if we talk about the boom of internet applications, this is a huge problem. The problem is that there are actually some citadels located in specific jurisdictions that operate on a relatively simple technology stack to connect you as easily as possible to the cloud, which represents a black box. Dissatisfaction with this approach actually arouses interest in the world computer because it will arrange things a bit differently. And how? Let's try to supplement the scheme we drew with blue color right now.": "El lugar donde debes confiar plenamente, confiando en la reputación de la empresa que posee estos centros de datos, y debes confiar completamente en los proveedores de acceso a la red que emiten un certificado y verifican la seguridad de tu conexión. De hecho, si hablamos del auge de las aplicaciones de internet, este es un gran problema. El problema es que en realidad hay algunas ciudadelas ubicadas en jurisdicciones específicas que operan en una pila de tecnología relativamente simple para conectarte lo más fácilmente posible a la nube, que representa una caja negra. La insatisfacción con este enfoque realmente despierta interés en la computadora mundial porque organizará las cosas de manera un poco diferente. ¿Y cómo? Intentemos complementar el esquema que dibujamos con color azul ahora mismo.",
  "So, to supplement our linear graph, our linear diagram from both sides, let's take a look at the discoveries that have significance in computer science and that are directly or indirectly related to achievements from the world of web3.": "Entonces, para complementar nuestro gráfico lineal, nuestro diagrama lineal desde ambos lados, echemos un vistazo a los descubrimientos que tienen importancia en la informática y que están directa o indirectamente relacionados con los logros del mundo de web3.",
  "Let's start with Leslie Lamport in 1976. Those who attended my presentations, lectures from 2015-2020, probably remember how often I liked to mention that before the invention of Bitcoin, problems related to creating a decentralized network were well described by Leslie Lamport in 1976 in the Byzantine Generals problem. The solution to the Byzantine Generals problem is at the core of Tendermint PBFT algorithms and all synchronous algorithms used from Telegram Open Network to Tendermint, to Cosmos, and other blockchain projects that, accordingly, followed the path of Byzantine Generals.": "Comencemos con Leslie Lamport en 1976. Aquellos que asistieron a mis presentaciones, conferencias de 2015-2020, probablemente recuerden cuántas veces me gustaba mencionar que antes de la invención de Bitcoin, los problemas relacionados con la creación de una red descentralizada fueron bien descritos por Leslie Lamport en 1976 en el problema de los generales bizantinos. La solución al problema de los generales bizantinos está en el núcleo de los algoritmos PBFT de Tendermint y todos los algoritmos síncronos utilizados desde Telegram Open Network hasta Tendermint, Cosmos y otros proyectos de blockchain que, en consecuencia, siguieron el camino de los generales bizantinos.",
  "The second interesting achievement in internet technologies is torrent trackers. We don't have any specific, already erased, cloud or a black box that stores files. Still, users worldwide, by exchanging torrent files, can download exactly the file they were looking for, and this works without data substitution. No one uploads any viruses to you by replacing the file. There might sometimes be a virus embedded in the file, but the idea of receiving a link to download and actually downloading something other than what you were offered to download using torrent technology is impossible. Similar processes exist in the IPFS network, a hash-oriented storage - a way of connecting various participants with trust in the information you convey without using a black box, precisely.": "El segundo logro interesante en tecnologías de internet son los rastreadores de torrents. No tenemos ninguna nube específica, ya borrada, o una caja negra que almacene archivos. Aún así, los usuarios de todo el mundo, intercambiando archivos torrent, pueden descargar exactamente el archivo que estaban buscando, y esto funciona sin sustitución de datos. Nadie te sube ningún virus reemplazando el archivo. A veces puede haber un virus incrustado en el archivo, pero la idea de recibir un enlace para descargar y realmente descargar algo diferente a lo que te ofrecieron descargar utilizando la tecnología torrent es imposible. Procesos similares existen en la red IPFS, un almacenamiento orientado a hash, una forma de conectar varios participantes con confianza en la información que transmites sin usar una caja negra, precisamente.",
  "And of course, Bitcoin. Bitcoin, as a more collective example, I'm sure Satoshi Nakamoto was well aware of Leslie Lamport's solution to the Byzantine Generals problem and, of course, observed how the idea of torrent trackers was developing. If we don't emphasize the properties that the Bitcoin blockchain obtained, such as immutability, transparency of transactions, and, to some extent, censorship resistance, then Bitcoin is an internet service that performs state transition, some changes in state based on transactions without a central node. It is an example of a collective construction of a global network in which there is a constantly functioning state transition function that we can trust, and to ensure trust, neither jurisdictions nor specific IP addresses nor the most primitive technologies used and still used today in building cloud services are used. The collective image of Bitcoin allowed overlaying the general concept from the 1930s of a Turing-complete machine on the existence of a universal abstract function for everything.": "Y por supuesto, Bitcoin. Bitcoin, como ejemplo más colectivo, estoy seguro de que Satoshi Nakamoto estaba bien consciente de la solución de Leslie Lamport al problema de los generales bizantinos y, por supuesto, observó cómo se estaba desarrollando la idea de los rastreadores de torrents. Si no enfatizamos las propiedades que obtuvo la cadena de bloques de Bitcoin, como la inmutabilidad, la transparencia de las transacciones y, hasta cierto punto, la resistencia a la censura, entonces Bitcoin es un servicio de internet que realiza una transición de estado, algunos cambios de estado basados en transacciones sin un nodo central. Es un ejemplo de una construcción colectiva de una red global en la que hay una función de transición de estado constantemente funcionando en la que podemos confiar, y para garantizar la confianza, no se utilizan ni jurisdicciones ni direcciones IP específicas ni las tecnologías más primitivas utilizadas y aún utilizadas hoy en día en la construcción de servicios en la nube. La imagen colectiva de Bitcoin permitió superponer el concepto general de la década de 1930 de una máquina completa de Turing en la existencia de una función abstracta universal para todo.",
  "So, what do we need to add to this scheme to envision a global computer? From the bottom, we provide consensus validators or, in general, validators. It can be said that the \"Data availability layer\" is probably a phrase many have heard around Ethereum this year, and it has become an advantage of Bitcoin as well. However, in the organization scheme of the global computer, this is one piece of the puzzle and, as I mentioned, it complements the main function that lies at the heart of the global computer—the function of universal state transition. Going back to the very beginning, the analogy of the heart in the human body is interesting here. It's not a thinking thing, indeed. Yes, it doesn't generate, you could say, the brain is much more important. Still, life is impossible without the heart. It simply pumps blood. Similarly, at the core of the global computer, all transactions are pumped through the state transition function, resulting in outputs. But to organize this in a distributed internet network without the need to trust some citadel, we need to supplement the picture with two components.": "Entonces, ¿qué necesitamos agregar a este esquema para visualizar una computadora global? Desde abajo, proporcionamos validadores de consenso o, en general, validadores. Se puede decir que la capa de disponibilidad de datos es probablemente una frase que muchos han escuchado en Ethereum este año, y también se ha convertido en una ventaja de Bitcoin. Sin embargo, en el esquema de organización de la computadora global, esta es una pieza del rompecabezas y, como mencioné, complementa la función principal que se encuentra en el corazón de la computadora global: la función de transición de estado universal. Volviendo al principio, la analogía del corazón en el cuerpo humano es interesante aquí. No es algo que piense, de hecho. Sí, no genera, podrías decir, el cerebro es mucho más importante. Aún así, la vida es imposible sin el corazón. Simplemente bombea sangre. De manera similar, en el núcleo de la computadora global, todas las transacciones se bombean a través de la función de transición de estado, dando como resultado salidas. Pero para organizar esto en una red de internet distribuida sin la necesidad de confiar en alguna ciudadela, necesitamos complementar la imagen con dos componentes.",
  "The first component is a set of computers or nodes that are ready to execute the state transition. When you send transactions, they don't just go here; they go to the validators. Validators perform computations, recalling what I've already mentioned in this ongoing conversation. They take your transaction, retrieve information from the blockchain about how to process that transaction, apply that processing, and then coordinate with other validators the fact that they correctly executed the state transition. The core of the global computer, in terms of protection against situations where Bob, the vacuum cleaner robot, receives a correct command from Alice in the office, is not based on trust but on cross-verification by a multitude of network participants based on available information from the blockchain. Not only from the blockchain, by the way. It's complex, and we won't delve into it right now, but essentially, a multitude of validators take turns watching and have incentives, some internal incentives within the protocol, to prevent the universal and capable-of-calculating-anything machine from executing this operation incorrectly. A validator effectively processes transactions that come into the global computer, and other validators help prevent situations where one of the validators performed an incorrect calculation. The better the consensus algorithms of the validators, the better protection we have for the state transition function or, in other words, the heart of our global computer.": "El primer componente es un conjunto de computadoras o nodos que están listos para ejecutar la transición de estado. Cuando envías transacciones, no van solo aquí; van a los validadores. Los validadores realizan cálculos, recordando lo que ya he mencionado en esta conversación en curso. Toman tu transacción, recuperan información de la cadena de bloques sobre cómo procesar esa transacción, aplican ese procesamiento, y luego coordinan con otros validadores el hecho de que ejecutaron correctamente la transición de estado. El núcleo de la computadora global, en términos de protección contra situaciones donde Bob, el robot aspiradora, recibe un comando correcto de Alice en la oficina, no se basa en la confianza sino en la verificación cruzada por una multitud de participantes de la red basada en la información disponible de la cadena de bloques. No solo de la cadena de bloques, por cierto. Es complejo, y no profundizaremos en ello en este momento, pero esencialmente, una multitud de validadores se turnan para vigilar y tienen incentivos, algunos incentivos internos dentro del protocolo, para evitar que la máquina universal y capaz de calcular cualquier cosa ejecute esta operación incorrectamente. Un validador procesa efectivamente las transacciones que ingresan a la computadora global, y otros validadores ayudan a prevenir situaciones donde uno de los validadores realizó un cálculo incorrecto. Cuanto mejores sean los algoritmos de consenso de los validadores, mejor protección tendremos para la función de transición de estado o, en otras palabras, el corazón de nuestra computadora global.",
  "The second part of this scheme is the data availability service—what we've always called the database in Bitcoin or Ethereum. In fact, we'll have to abandon that concept because there's a fundamental change in the architecture of all projects, and for those specifically targeting the global computer, this change is most crucial. For a simple present-day example: there are various implementations of Layer 2 networks on top of Ethereum—such as Arbitrum, Optimism, and others. If you start looking into their main differences and how they operate, you'll find that, in some cases, an L2 network in Ethereum sends a larger amount of data, solely from the first-layer blockchain, i.e., from the Ethereum blockchain. All the necessary puzzle pieces to confirm that the computation on the L2 layer was correct can be found in the first-layer Ethereum blockchain. On the other hand, other approaches suggest that beyond the first layer of Ethereum, something else is stored that needs to be found to prove the correctness of transactions. So, right now, before our eyes, there is again a question of improvement, but specifically of such an architecture where transactions go on the left, in the middle, we have the heart in the form of the state transition function, validators, and their consensus allows for the correct execution of this state transition. But there is also a question of data availability, which is necessary to ensure both cross-verification and, essentially, the existence of the service itself. Some approaches and patterns for creating L2 on top of Ethereum today ask the question: \"What if a certain L2 layer loses the data it doesn't store within the main Ethereum blockchain?\"": "La segunda parte de este esquema es el servicio de disponibilidad de datos, lo que siempre hemos llamado la base de datos en Bitcoin o Ethereum. De hecho, tendremos que abandonar ese concepto porque hay un cambio fundamental en la arquitectura de todos los proyectos, y para aquellos que se dirigen específicamente al ordenador global, este cambio es crucial. Por ejemplo, en la actualidad hay varias implementaciones de redes de Capa 2 sobre Ethereum, como Arbitrum, Optimism y otros. Si comienzas a investigar sus principales diferencias y cómo operan, descubrirás que, en algunos casos, una red L2 en Ethereum envía una cantidad mayor de datos, únicamente desde la cadena de bloques de la primera capa, es decir, desde la cadena de bloques de Ethereum. Todas las piezas de rompecabezas necesarias para confirmar que la computación en la capa L2 fue correcta se pueden encontrar en la cadena de bloques de Ethereum de la primera capa. Por otro lado, otros enfoques sugieren que más allá de la primera capa de Ethereum, se almacena algo más que debe encontrarse para demostrar la corrección de las transacciones. Por lo tanto, en este momento, ante nuestros ojos, surge nuevamente una cuestión de mejora, pero específicamente de una arquitectura en la que las transacciones van a la izquierda, en el medio tenemos el corazón en forma de la función de transición de estado, validadores y su consenso permite la ejecución correcta de esta transición de estado. Pero también hay una cuestión de disponibilidad de datos, que es necesaria para garantizar tanto la verificación cruzada como, esencialmente, la existencia del servicio en sí mismo. Algunos enfoques y patrones para crear L2 sobre Ethereum hoy en día plantean la pregunta: \"¿Qué sucede si una cierta capa L2 pierde los datos que no almacena dentro de la cadena de bloques principal de Ethereum?\"",
  "Let's complement this picture with how Polkadot is structured. Polkadot has two consensus mechanisms: the \"babe\" consensus, responsible for the parachain-level consensus and is fast, and the \"grandpa\" consensus, which is slower and verifies everything afterward. So, if you delve into the wiki article titled \"The Path of a Block in the Polkadot Network,\" you will encounter interesting abbreviations. After achieving the \"babe\" consensus at the parachain level, the \"grandpa\" consensus introduces the concept of \"proof of validity and data availability.\" Going deeper, you'll find the term \"chunk\" of redundant pieces of information, inspired by CD RW technologies from the 90s and 2000s. This addresses the question of how to preserve information when absolute trust in a specific entity in the network is not feasible. The concept of \"chunk\" of redundant information is one of these patterns.": "Complementemos esta imagen con cómo está estructurado Polkadot. Polkadot tiene dos mecanismos de consenso: el consenso \"babe\", responsable del consenso a nivel de paracadena y es rápido, y el consenso \"grandpa\", que es más lento y verifica todo posteriormente. Por lo tanto, si profundizas en el artículo de wiki titulado \"El camino de un bloque en la red de Polkadot\", encontrarás abreviaturas interesantes. Después de lograr el consenso \"babe\" a nivel de paracadena, el consenso \"grandpa\" introduce el concepto de \"prueba de validez y disponibilidad de datos\". Profundizando, encontrarás el término \"chunk\" de piezas redundantes de información, inspirado en las tecnologías de CD RW de los años 90 y 2000. Esto aborda la cuestión de cómo preservar la información cuando la confianza absoluta en una entidad específica en la red no es factible. El concepto de \"chunk\" de información redundante es uno de estos patrones.",
  "Summing up, at the core lies an abstract function that enables any computation and was described by Alan Turing in the 1930s. The personal computer, essentially a side effect of a mathematical problem, emerged from Turing's work. The technologies first applied in Bitcoin, such as consensus that allows the network to exist without a specific data center or entity responsible for data correctness, form a functioning mechanism. It goes beyond providing a specific service for electronic cash transfers; it allows us to audit and control any computation in the network. Additionally, we face the challenge of ensuring data availability, as it's not the primary concern of the world computer. The world computer's task lies at its core, executing computation, managing state transitions, and performing calculations, while the data in this scheme serves as a puzzle piece that is more necessary to support the lower part. Thus, this overall scheme can be seen as an abstract and generalized illustration of the world computer's structure, where the state transition function is at its core.": "En resumen, en el núcleo se encuentra una función abstracta que permite cualquier computación y fue descrita por Alan Turing en la década de 1930. La computadora personal, esencialmente un efecto secundario de un problema matemático, surgió del trabajo de Turing. Las tecnologías primero aplicadas en Bitcoin, como el consenso que permite que la red exista sin un centro de datos específico o una entidad responsable de la corrección de los datos, forman un mecanismo funcional. Va más allá de proporcionar un servicio específico para transferencias de efectivo electrónicas; nos permite auditar y controlar cualquier computación en la red. Además, nos enfrentamos al desafío de garantizar la disponibilidad de datos, ya que no es la preocupación principal del ordenador mundial. La tarea del ordenador mundial radica en su núcleo, ejecutar computaciones, gestionar transiciones de estado y realizar cálculos, mientras que los datos en este esquema sirven como una pieza de rompecabezas que es más necesaria para respaldar la parte inferior. Por lo tanto, este esquema general se puede ver como una ilustración abstracta y generalizada de la estructura del ordenador mundial, donde la función de transición de estado está en su núcleo.",
  "Part 4: The Path of a New Block of Information in the World Computer": "Parte 4: El Camino de un Nuevo Bloque de Información en la Computadora Mundial",
  "The fourth and final part of our lecture is \"The World Computer in Your Home.\" After this, I will begin recording screencasts for the practical part of the sessions.": "La cuarta y última parte de nuestra conferencia es \"La Computadora Mundial en tu Hogar\". Después de esto, comenzaré a grabar screencasts para la parte práctica de las sesiones.",
  "Now we will try to summarize almost all the theory we have covered so far in terms of one process. The process that describes the path of an information block in the world computer. Let's start again by returning to the theme of web3 and the concept of blockchain. The phrase \"block\" or \"information block\" can be considered identical when stepping away from the last 10 years and taking a more general theory, as explored in the previous parts of the lectures. The concept of a \"block of information\" aligns with web3, but not necessarily with blockchain. Even without any crypto projects, we need to understand that when forming the theory of the world computer without referencing the formation of information blocks, it's currently challenging to envision other models. So, we will consider the path of an information block throughout the entire world computer, not because it is blockchain, but because, for now, there are no other ways to conceptualize the existence of the world computer other than by processing information in specific portions.": "Ahora intentaremos resumir casi toda la teoría que hemos cubierto hasta ahora en términos de un proceso. El proceso que describe el camino de un bloque de información en la computadora mundial. Comencemos nuevamente volviendo al tema de web3 y al concepto de blockchain. La frase \"bloque\" o \"bloque de información\" puede considerarse idéntica al alejarse de los últimos 10 años y adoptar una teoría más general, como se exploró en las partes anteriores de las conferencias. El concepto de un \"bloque de información\" se alinea con web3, pero no necesariamente con blockchain. Incluso sin proyectos de criptomonedas, necesitamos entender que al formar la teoría de la computadora mundial sin hacer referencia a la formación de bloques de información, actualmente es difícil imaginar otros modelos. Por lo tanto, consideraremos el camino de un bloque de información en toda la computadora mundial, no porque sea blockchain, sino porque, por ahora, no hay otras formas de conceptualizar la existencia de la computadora mundial que procesando información en porciones específicas.",
  "Block of information = block in web3, but without blockchain and without any crypto project influence. We must currently consider the formation of information blocks when discussing the theory of the world computer. Now, let's move on to the first point. I tried to find close analogies from everyday life to help illustrate the path of an information block in the world computer. The analogy I've chosen is the movement of a bus on a route. Our first meeting point is the bus station.": "Bloque de información = bloque en web3, pero sin blockchain y sin influencia de ningún proyecto de criptomonedas. Actualmente debemos considerar la formación de bloques de información al discutir la teoría de la computadora mundial. Ahora, pasemos al primer punto. Intenté encontrar analogías cercanas de la vida cotidiana para ayudar a ilustrar el camino de un bloque de información en la computadora mundial. La analogía que he elegido es el movimiento de un autobús en una ruta. Nuestro primer punto de encuentro es la parada de autobús.",
  "I marked transactions in pink as small dots. Let's imagine a typical bus stop where people gather, waiting for a bus that operates on a schedule. If we don't consider the hustle and bustle of large cities, where buses are always late, everyone in the world generally knows that the train from village A to village B always arrives around 7:15 am. Transactions that users want to send to the world computer gather at a certain bus stop and wait for the bus to arrive.": "Marqué las transacciones en rosa como pequeños puntos. Imaginemos una parada de autobús típica donde la gente se reúne, esperando un autobús que opera según un horario. Si no consideramos el ajetreo y bullicio de las grandes ciudades, donde los autobuses siempre llegan tarde, todos en el mundo generalmente saben que el tren de la aldea A a la aldea B siempre llega alrededor de las 7:15 am. Las transacciones que los usuarios desean enviar a la computadora mundial se reúnen en una cierta parada de autobús y esperan a que llegue el autobús.",
  "This is how our block is formed. Imagine: the bus arrives, and each person starts boarding one by one, taking their seats. The bus then follows its route. In our case, the block of information overcomes the first frontier. Our transactions, in some form, have settled into the bus and overcome the initial barrier. I will be using terminology primarily from Polkadot, and the third part should have better explained the concept of the world computer in the comparison between Ethereum and Polkadot. My personal opinion, and probably the majority of engineers today would agree, is that the representation of a heterogeneous multicentric world computer is better implemented in Polkadot. However, we will still go through the terms inherited from Ethereum, but towards the end of this part of the lecture.": "Así es como se forma nuestro bloque. Imagina: el autobús llega y cada persona comienza a abordar uno por uno, tomando sus asientos. El autobús luego sigue su ruta. En nuestro caso, el bloque de información supera la primera frontera. Nuestras transacciones, de alguna forma, se han asentado en el autobús y superado la barrera inicial. Estaré utilizando terminología principalmente de Polkadot, y la tercera parte debería haber explicado mejor el concepto de la computadora mundial en la comparación entre Ethereum y Polkadot. Mi opinión personal, y probablemente la mayoría de los ingenieros hoy estarían de acuerdo, es que la representación de una computadora mundial multicéntrica heterogénea se implementa mejor en Polkadot. Sin embargo, aún revisaremos los términos heredados de Ethereum, pero hacia el final de esta parte de la conferencia.",
  "What is the line that separates the bus stop from the bus's further movement? This line represents the collators of the network – participants in the network nodes who collect transactions. You can think of a collator not as a bus driver but as a controller who stays at the bus stop. In other words, this controller checks whether you have a ticket when you enter the bus. It doesn't recheck in the database how valid the ticket is but looks at the basic parameters of the ticket and checks if everything seems fine. In reality, collators perform almost all the calculations required, verifying the ticket number and other data, but they are not required to guarantee that the check is done correctly. Therefore, collators are controllers who remain at the bus stop, primarily ensuring passenger boarding, seating, and sending the bus further along the route.": "¿Cuál es la línea que separa la parada de autobús del movimiento posterior del autobús? Esta línea representa a los recolectores de la red, participantes en los nodos de la red que recopilan transacciones. Puedes pensar en un recolector no como un conductor de autobús sino como un controlador que se queda en la parada de autobús. En otras palabras, este controlador verifica si tienes un boleto cuando entras al autobús. No vuelve a verificar en la base de datos qué tan válido es el boleto, sino que mira los parámetros básicos del boleto y verifica si todo parece estar bien. En realidad, los recolectores realizan casi todos los cálculos necesarios, verificando el número de boleto y otros datos, pero no se requiere que garanticen que la verificación se realice correctamente. Por lo tanto, los recolectores son controladores que permanecen en la parada de autobús, asegurando principalmente el abordaje de pasajeros, la asignación de asientos y el envío del autobús a lo largo de la ruta.",
  "Beyond the drawn border, we enter the first validation area where paravalidators are located. These are validators of the entire ecosystem, the entire network, specifically assigned for a certain time to check each transaction and thus perform actual computations in the world computer. Our not-yet-fully-formed block of information is marked with a dashed line. It is still a candidate block of information since it has not undergone any actual verification. The collator, who collected the block of information and checked the transactions at the entrance, does not participate in any way in securing the cybersecurity of the computations conducted. Its task is only to seat all transactions and form the first block. At this stage, the transformation from a candidate to a real block of information begins.": "Más allá de la frontera dibujada, ingresamos a la primera área de validación donde se encuentran los paravalidadores. Estos son validadores de todo el ecosistema, de toda la red, específicamente asignados por un cierto tiempo para verificar cada transacción y así realizar cálculos reales en la computadora mundial. Nuestro bloque de información aún no completamente formado está marcado con una línea discontinua. Todavía es un bloque de información candidato ya que no ha pasado por ninguna verificación real. El recolector, que recopiló el bloque de información y verificó las transacciones en la entrada, no participa de ninguna manera en la ciberseguridad de los cálculos realizados. Su tarea es solo asignar todas las transacciones y formar el primer bloque. En esta etapa, comienza la transformación de un bloque candidato a un bloque real de información.",
  "I have divided it into three parts, but forgot one more. Let's consider four parts of this candidate block. The top part, known to users of various web3 applications as the header or block header, is the quintessence, the most popular piece of information circulating and reflected from the block explorer to the console clients of all nodes mining, staking, and so on. The header is a key element of the block, but it is practically formed at the last stage at this point.": "Lo he dividido en tres partes, pero olvidé una más. Consideremos cuatro partes de este bloque candidato. La parte superior, conocida por los usuarios de varias aplicaciones web3 como el encabezado o bloque de encabezado, es la quintaesencia, la pieza de información más popular que circula y se refleja desde el explorador de bloques hasta los clientes de consola de todos los nodos de minería, participación, etc. El encabezado es un elemento clave del bloque, pero prácticamente se forma en la última etapa en este punto.",
  "Firstly, we have our actual requests for state transitions or computations. There is a list of changes that need to be made: convert A to A', B to B', C to C', applying a set of algorithms to them. For this, we will now build another boundary immediately and go beyond it to perform this part of the work, and then only proceed beyond it. Already at the block preparation stage, we have to cross the second boundary within the world computer to go for the algorithms that need to be applied to prepare the block. As I mentioned before, theoretically, the controller at the bus stop here does the same, but I wouldn't pay much attention to that. The block preparation stage, especially when we talk about examples simultaneously from Polkadot and Ethereum as a world computer, they differ slightly and show us the insignificance of checks at this stage because it is precisely on the second step, after passing the first boundary and receiving the block of information from collators, that the attention-worthy calculations of this world computer begin.": "En primer lugar, tenemos nuestras solicitudes reales de transiciones de estado o cálculos. Hay una lista de cambios que deben hacerse: convertir A en A', B en B', C en C', aplicando un conjunto de algoritmos a ellos. Para esto, ahora construiremos otro límite inmediatamente y lo cruzaremos para realizar esta parte del trabajo, y luego solo proceder más allá de él. Ya en la etapa de preparación del bloque, tenemos que cruzar el segundo límite dentro de la computadora mundial para ir a los algoritmos que deben aplicarse para preparar el bloque. Como mencioné antes, teóricamente, el controlador en la parada de autobús aquí hace lo mismo, pero no prestaría mucha atención a eso. La etapa de preparación del bloque, especialmente cuando hablamos de ejemplos simultáneamente de Polkadot y Ethereum como una computadora mundial, difieren ligeramente y nos muestran la insignificancia de las verificaciones en esta etapa porque es precisamente en el segundo paso, después de pasar la primera frontera y recibir el bloque de información de los recolectores, que comienzan los cálculos dignos de atención de esta computadora mundial.",
  "To perform these calculations, the validator, at this stage, can only do so by turning to the relay chain, the central database, and taking from there the algorithms from the runtime. In the case of Ethereum, it was the same virtual machines in the previous architectural concept, which could be applied, so there was no need to go anywhere. Almost every node had a complete copy of the algorithms that could be applied. But in terms of a heterogeneous network, where each segment or each individual chain may have its own set of algorithms, a validator, before actually executing all the transitions, calculations obtained in the form of a block candidate from the collator, must consult. It must consult the relay chain, consult the main blockchain in the network and take from there the necessary algorithms, apply them, and perform state transitions.": "Para realizar estos cálculos, el validador, en esta etapa, solo puede hacerlo recurriendo a la cadena de retransmisión, la base de datos central, y tomando de allí los algoritmos del tiempo de ejecución. En el caso de Ethereum, eran las mismas máquinas virtuales en el concepto arquitectónico anterior, que podían aplicarse, por lo que no era necesario ir a ningún lado. Casi cada nodo tenía una copia completa de los algoritmos que podían aplicarse. Pero en términos de una red heterogénea, donde cada segmento o cada cadena individual puede tener su propio conjunto de algoritmos, un validador, antes de ejecutar realmente todas las transiciones, debe consultar los cálculos obtenidos en forma de un bloque candidato del recolector. Debe consultar la cadena de retransmisión, consultar la cadena principal en la red y tomar de allí los algoritmos necesarios, aplicarlos y realizar transiciones de estado.",
  "During the execution of calculations, a Merkle tree is simultaneously formed, and we won't dwell on it because Merkle trees are not that complicated from the perspective of computer science. Still, I notice that to understand how to apply them in engineering and in the architecture of a project, how they are applied, not just by reading on Wikipedia, you need to break your head a bit, imagine examples. In this example, we won't delve too much into it, but I think for those who are already familiar with some basic definitions, have read about Merkle trees, it will become a bit clearer about how and at what moments another Merkle tree is assembled. The Merkle tree is formed when we actually perform calculations and output values appear. These output values are packed into a binary tree format, then the addition is performed between them in computer science language, and the top node reaches the header. Let's denote it with a big letter \"H.\" It's a small and pleasant aspect of considering such schemes.": "Durante la ejecución de los cálculos, se forma simultáneamente un árbol de Merkle, y no nos detendremos en ello porque los árboles de Merkle no son tan complicados desde la perspectiva de la informática. Aún así, noto que para entender cómo aplicarlos en la ingeniería y en la arquitectura de un proyecto, cómo se aplican, no solo leyendo en Wikipedia, necesitas romperte un poco la cabeza, imaginar ejemplos. En este ejemplo, no profundizaremos demasiado en ello, pero creo que para aquellos que ya están familiarizados con algunas definiciones básicas, han leído sobre los árboles de Merkle, será un poco más claro cómo y en qué momentos se ensambla otro árbol de Merkle. El árbol de Merkle se forma cuando realmente realizamos cálculos y aparecen valores de salida. Estos valores de salida se empaquetan en un formato de árbol binario, luego se realiza la adición entre ellos en lenguaje de informática, y el nodo superior alcanza el encabezado. Vamos a denotarlo con una letra grande \"H.\" Es un aspecto pequeño y agradable considerar tales esquemas.",
  "In this scheme, we can note how the block header is actually related to the computations performed inside. Let's look again - our block candidate came from the collator. There is a set of transactions that need to be executed, perform calculations. The validator went through another internal boundary, one more, behind the algorithms, applied them, and recorded all the results at the lowest level of the Merkle tree. The other nodes are essentially systemic. They do not come from any data; they don't come from anywhere. At the second level, the node does not come from any information. It is obtained by summing values in these two leaves, and when we go up with you, we get only the root of this tree, which is enough to protect all output values. We won't get the same header if we change any of these calculations. And this is one of the magical and simple features, like hash-oriented storage, of how we can protect a whole block of information by talking only about one header. Therefore, headers are so important and play a cornerstone role even in architectures when we transition from one chain or one virtual machine to many combined in the network. It is enough for us to ensure the security of storing headers to be sure that all transactions that were executed at the block preparation stage were executed correctly, and they cannot be replaced.": "En este esquema, podemos notar cómo el encabezado del bloque está realmente relacionado con los cálculos realizados en su interior. Volvamos a mirar - nuestro bloque candidato provino del recolector. Hay un conjunto de transacciones que deben ejecutarse, realizar cálculos. El validador pasó por otro límite interno, uno más, detrás de los algoritmos, los aplicó y registró todos los resultados en el nivel más bajo del árbol de Merkle. Los otros nodos son fundamentalmente sistémicos. No provienen de ningún dato; no provienen de ninguna parte. En el segundo nivel, el nodo no proviene de ninguna información. Se obtiene sumando valores en estas dos hojas, y cuando subimos contigo, obtenemos solo la raíz de este árbol, que es suficiente para proteger todos los valores de salida. No obtendremos el mismo encabezado si cambiamos alguno de estos cálculos. Y esta es una de las características mágicas y simples, como el almacenamiento orientado a hash, de cómo podemos proteger un bloque completo de información hablando solo de un encabezado. Por lo tanto, los encabezados son tan importantes y desempeñan un papel fundamental incluso en arquitecturas cuando pasamos de una cadena o una máquina virtual a muchas combinadas en la red. Es suficiente para nosotros asegurar la seguridad de almacenar encabezados para estar seguros de que todas las transacciones que se ejecutaron en la etapa de preparación del bloque se ejecutaron correctamente y no pueden ser reemplazadas.",
  "And one field is still left unfilled. In the process of preparing the block of information, it is the author's field, that is, the validator who actually performed all the changes, prepared the Merkle tree, and recorded the header. Since we are considering an example with the bus moving along the route from the stop, let's call the validator a \"controller\" who goes right inside the bus, passes each seat, approaches each person, checks for real what is written on their tickets, makes some mark, validates it, and, accordingly, puts their signature. The controller, for example, number 134, meaning, naturally, each validator has some unique identifier, their address, and we also somehow uniquely renamed it here.": "Y todavía queda un campo sin completar. En el proceso de preparar el bloque de información, es el campo del autor, es decir, el validador que realmente realizó todos los cambios, preparó el árbol de Merkle y registró el encabezado. Dado que estamos considerando un ejemplo con el autobús moviéndose a lo largo de la ruta desde la parada, llamemos al validador un \"controlador\" que entra directamente en el autobús, pasa por cada asiento, se acerca a cada persona, verifica realmente lo que está escrito en sus boletos, hace alguna marca, lo valida y, en consecuencia, pone su firma. El controlador, por ejemplo, número 134, lo que significa, naturalmente, que cada validador tiene algún identificador único, su dirección, y también lo hemos renombrado de alguna manera de forma única.",
  "And it seems that at this point, we could have shaded and made our block boundaries bolder, but no, and this is one of the interesting changes that have occurred in the last 5 years in terms of decentralized ecosystems, namely the shift from proof of work. When validators of the network, at that time miners, never had to coordinate anything with each other. You produced a block and sent it to the network and moved on. In fact, it was not a consensus of agreed consent. It was a consensus of obvious agreement with the fact that had occurred. What is interesting changes when the architecture becomes more complex, and we have come closer from a simple calculator like Bitcoin with a ledger towards an actual virtual computer, is that at each stage, the connectivity of participants who ensure security and block production has increased. Because, in fact, no one who risks their stake, the one who ensures this security and wants to earn by processing your transactions, has something to lose, unlike proof of work. In proof of work, you bought the equipment, yes, you put money into it, you spend electricity, but there is actually no protection against the fact that you can attack the network with your power, the same 51% attack, where someone with a lot of miners can try to rewrite the chain.": "Y parece que en este punto podríamos haber sombreado y hecho más audaces los límites de nuestro bloque, pero no, y este es uno de los cambios interesantes que han ocurrido en los últimos 5 años en términos de ecosistemas descentralizados, a saber, el cambio de prueba de trabajo. Cuando los validadores de la red, en ese momento mineros, nunca tuvieron que coordinar nada entre ellos. Producías un bloque y lo enviabas a la red y seguías adelante. De hecho, no era un consenso de consentimiento acordado. Era un consenso de acuerdo obvio con el hecho que había ocurrido. Lo interesante es que cuando la arquitectura se vuelve más compleja, y nos hemos acercado de una simple calculadora como Bitcoin con un libro mayor hacia una computadora virtual real, es que en cada etapa, la conectividad de los participantes que garantizan la seguridad y la producción de bloques ha aumentado. Porque, de hecho, nadie que arriesgue su participación, el que garantiza esta seguridad y quiere ganar procesando sus transacciones, tiene algo que perder, a diferencia de la prueba de trabajo. En la prueba de trabajo, compraste el equipo, sí, pusiste dinero en él, gastaste electricidad, pero en realidad no hay protección contra el hecho de que puedes atacar la red con tu poder, el mismo ataque del 51%, donde alguien con muchos mineros puede intentar reescribir la cadena.",
  "Now we are talking about proof of stake, where a deposit is already made, and if you do something wrong, a part will be withdrawn from it, as a penalty. All nodes, absolutely, in all architectures that I currently observe, mechanisms for messaging between validators began to appear quickly at the block preparation stage. In Polkadot, it is no different. Any validator of a separate parachain that collects a block knows the addresses or already has established contact with another 15-63 validators who are with you on this epoch, on some temporary period, as validators, and each of them randomly becomes a block producer at some point. But being appointed as a producer does not negate a very important component of this process. You do not stop interacting with the other participants. There is always a pool of validators assigned to a specific epoch, to a certain time slot, for validating a particular parachain or segment of the world computer. Regardless of whether you are a validator-controller specifically assigned to produce the next block in the world computer of this segment, you still stay in touch with the other validators, and you have constant contact with them.": "Ahora estamos hablando de la prueba de participación, donde ya se realiza un depósito, y si haces algo mal, se retirará una parte de él, como penalización. Todos los nodos, absolutamente, en todas las arquitecturas que observo actualmente, comenzaron a aparecer rápidamente mecanismos para el intercambio de mensajes entre validadores en la etapa de preparación del bloque. En Polkadot, no es diferente. Cualquier validador de una parachain separada que recopila un bloque conoce las direcciones o ya ha establecido contacto con otros 15-63 validadores que están contigo en esta época, en algún período temporal, como validadores, y cada uno de ellos se convierte aleatoriamente en un productor de bloques en algún momento. Pero ser designado como productor no niega un componente muy importante de este proceso. No dejas de interactuar con los demás participantes. Siempre hay un grupo de validadores asignados a una época específica, a un intervalo de tiempo específico, para validar una parachain o segmento de la computadora mundial. Independientemente de si eres un validador-controlador específicamente asignado para producir el siguiente bloque en la computadora mundial de este segmento, sigues en contacto con los demás validadores y tienes contacto constante con ellos.",
  "Why is this constant contact necessary? It turns out to be quite simple. We do not want, when we move into the inner part, to be afraid or worry that we performed any of the operations incorrectly. As surprising as it may seem, it is beneficial for any validator, before moving on, to first turn to their colleagues assigned to validation and ask them to double-check the calculations. This check is informal, so even if we do not use any logging into an immutable database of requests for verification and the results of this verification, the appointed controller, after talking to the pool of validators, still collects additional responses from all validators assigned to this parachain or network segment. Together with additional confirmations, the controller moves on to the next stage. But even here, it's not quite as simple. At this stage, another process has to be performed. It is important to note that at this stage, our block of information is still a candidate block, and settlement of information is already taking place in the storage. Neither at the very end, nor after we have created and sealed the block and attached it with an archiver in the final part, namely here, in this middle part where all the calculations are actually performed, does the information get saved in the storage. Therefore, our controller, in addition to talking to their colleagues, also ensures the storage of data in some storage, which is also quite metaphysical because the moment you communicate with other validators, this storage gets filled. How is this checked? We will need to move on to the next stage.": "¿Por qué es necesario este contacto constante? Resulta ser bastante simple. No queremos, al entrar en la parte interna, tener miedo o preocuparnos de que hayamos realizado alguna de las operaciones incorrectamente. Por sorprendente que parezca, es beneficioso para cualquier validador, antes de avanzar, dirigirse primero a sus colegas asignados a la validación y pedirles que verifiquen nuevamente los cálculos. Esta verificación es informal, por lo que incluso si no utilizamos ningún registro en una base de datos inmutable de solicitudes de verificación y los resultados de esta verificación, el controlador designado, después de hablar con el grupo de validadores, aún recopila respuestas adicionales de todos los validadores asignados a esta paracadena o segmento de red. Junto con las confirmaciones adicionales, el controlador avanza a la siguiente etapa. Pero incluso aquí, no es tan simple. En esta etapa, se debe realizar otro proceso. Es importante tener en cuenta que en esta etapa, nuestro bloque de información sigue siendo un bloque candidato, y el asentamiento de la información ya está teniendo lugar en el almacenamiento. Ni al final, ni después de haber creado y sellado el bloque y adjuntado con un archivador en la parte final, es decir, aquí, en esta parte intermedia donde realmente se realizan todos los cálculos, la información se guarda en el almacenamiento. Por lo tanto, nuestro controlador, además de hablar con sus colegas, también asegura el almacenamiento de datos en algún almacenamiento, lo cual también es bastante metafísico porque en el momento en que te comunicas con otros validadores, este almacenamiento se llena. ¿Cómo se verifica esto? Tendremos que pasar a la siguiente etapa.",
  "In summary, to complete the middle part, let's look again. We still have only a candidate block at the very beginning. Yes, all transactions are roughly calculated somewhere at the bus stop, everyone has taken their seats according to their tickets. We have passed the first boundary, which is essentially direct established contact between validators and block collators. In Ethereum and Polkadot, these are slightly different schemes now. But everything that happens on the left side at the very beginning does not provide cybersecurity for data and calculations. It's just preparation. Once we have passed and entered the environment of the validators' attention, work with the block of information in the world computer begins. A randomly selected validator, in our case, with a bus route - a controller, actually goes through each of the seats, checks the ticket, checks and performs all the calculations that were made, gathers all the information into a tree. The resulting root node of this tree becomes the header of the proposed block. The validator who actually performs all the calculations with this block of information communicates with the other participants who perform a similar function for the same route in an undefined time slot. And while communicating with them and asking them to verify all the calculations, we are actually filling a certain storage of data in the network. It is not a specific physical storage; there is no specific IP address, no specific hard drive onto which they all load through some VPN or login and password scheme, of course not. In the process of communicating with other validators, data remains on their local machines, and this data will further participate in the transformation of this candidate into a new block of information. In essence, the sealed block that will be settled in the relay chain is collected. We have assembled a block. All the metadata around the calculations is already filled, which means we can try to move on to the next frontier.": "En resumen, para completar la parte intermedia, veamos de nuevo. Todavía tenemos solo un bloque candidato al principio. Sí, todas las transacciones se calculan aproximadamente en algún lugar en la parada de autobús, todos han tomado sus asientos según sus boletos. Hemos pasado el primer límite, que es básicamente el contacto directo establecido entre validadores y recolectores de bloques. En Ethereum y Polkadot, estos son esquemas ligeramente diferentes ahora. Pero todo lo que sucede en el lado izquierdo al principio no proporciona ciberseguridad para datos y cálculos. Es solo preparación. Una vez que hemos pasado y entrado en el entorno de la atención de los validadores, el trabajo con el bloque de información en la computadora mundial comienza. Un validador seleccionado al azar, en nuestro caso, con una ruta de autobús - un controlador, en realidad pasa por cada uno de los asientos, verifica el boleto, verifica y realiza todos los cálculos que se hicieron, reúne toda la información en un árbol. El nodo raíz resultante de este árbol se convierte en el encabezado del bloque propuesto. El validador que realmente realiza todos los cálculos con este bloque de información se comunica con los otros participantes que realizan una función similar para la misma ruta en un intervalo de tiempo indefinido. Y mientras se comunica con ellos y les pide que verifiquen todos los cálculos, en realidad estamos llenando un cierto almacenamiento de datos en la red. No es un almacenamiento físico específico; no hay una dirección IP específica, no hay un disco duro específico en el que todos carguen a través de algún esquema de VPN o inicio de sesión y contraseña, por supuesto que no. En el proceso de comunicarse con otros validadores, los datos permanecen en sus máquinas locales, y estos datos participarán más adelante en la transformación de este candidato en un nuevo bloque de información. En esencia, se recopila el bloque sellado que se liquidará en la cadena de retransmisión. Hemos ensamblado un bloque. Todos los metadatos alrededor de los cálculos ya están llenos, lo que significa que podemos intentar avanzar hacia la próxima frontera.",
  "At this moment, let's delve into the passage of the next boundary. The most crucial aspect at the final stage becomes the block header. We are less concerned with the execution of computations; we can simplify our perspective here, as computations may vary based on the architecture, whether it's Ethereum or Polkadot. The key point is that, on the intermediate stage, from what I observe in the theory and practice of implementing the world computer concept, most computations happen at an intermediate level. The last level remains only to execute essential checks. Almost all these checks in a multi-chain architecture are related to the concatenation or merging of block headers into one block.": "En este momento, adentrémonos en el paso del próximo límite. El aspecto más crucial en la etapa final se convierte en el encabezado del bloque. Nos preocupa menos la ejecución de cálculos; podemos simplificar nuestra perspectiva aquí, ya que los cálculos pueden variar según la arquitectura, ya sea Ethereum o Polkadot. El punto clave es que, en la etapa intermedia, según lo que observo en la teoría y práctica de implementar el concepto de computadora mundial, la mayoría de los cálculos ocurren a un nivel intermedio. El último nivel queda solo para ejecutar verificaciones esenciales. Casi todas estas verificaciones en una arquitectura multi-cadena están relacionadas con la concatenación o fusión de encabezados de bloques en un bloque.",
  "In the final part of our journey, the most important element in the world computer's information block becomes the cornerstone – the header. The second component is more about meta-information. If the header is the actual result of all computations, the additional meta-information being transmitted consists of receipts and signatures of the validators who participated in the intermediate stage of this process. At the final stage, we can visualize the whole picture solely as the assembly of the same tree, not as a list of transactions. In the relay chain's final part, the crucial aspect is the assembly of headers from many similar processes, but linked to different segments of the world computer, different parachains.": "En la parte final de nuestro viaje, el elemento más importante en el bloque de información de la computadora mundial se convierte en la piedra angular: el encabezado. El segundo componente se trata más de meta-información. Si el encabezado es el resultado real de todos los cálculos, la meta-información adicional que se transmite consiste en recibos y firmas de los validadores que participaron en la etapa intermedia de este proceso. En la etapa final, podemos visualizar toda la imagen únicamente como el ensamblaje del mismo árbol, no como una lista de transacciones. En la parte final de la cadena de retransmisión, el aspecto crucial es el ensamblaje de encabezados de muchos procesos similares, pero vinculados a diferentes segmentos de la computadora mundial, diferentes paracadenas.",
  "Each parachain, each set of validators – we've discussed one example, but in reality, such block preparations for parachains happen 30-40 times. The number of parachain slots or the number of L2 networks in Ethereum will result in a similar number of processes with a similar architecture. However, in the final stage, we will see an approximately identical picture everywhere – how the block header will be formed from a multitude of headers from other blocks. In this process, we need to introduce one more entity and jump back across the boundary to the second stage.": "Cada paracadena, cada conjunto de validadores: hemos discutido un ejemplo, pero en realidad, tales preparativos de bloques para paracadenas ocurren 30-40 veces. El número de espacios de paracadena o el número de redes L2 en Ethereum resultará en un número similar de procesos con una arquitectura similar. Sin embargo, en la etapa final, veremos una imagen aproximadamente idéntica en todas partes: cómo se formará el encabezado del bloque a partir de una multitud de encabezados de otros bloques. En este proceso, necesitamos introducir una entidad más y saltar de nuevo a través del límite a la segunda etapa.",
  "Finalizers. In fact, they are also validators, but relay chain validators. In the Polkadot architecture, we have a thousand validators divided into two groups. The first, a very small group, is responsible only for forming the block header and a new block consisting of the headers of the State of the States blocks. The second group – parachain validators – is further divided into many subgroups, but this group is called parachain validators. In L2 networks above Ethereum, this story will eventually gain more understanding, more denominators. For now, let's focus on the Polkadot architecture. Finalizers, besides checking an additional set of meta-information and rechecking a validator with a specific ID, randomly chosen to generate this block of all blocks, also help recheck meta-information, check, and assemble all headers into one. It's a bit complex, yes, if we look at it from the perspective of tree assembly.": "Finalizadores. De hecho, también son validadores, pero validadores de la cadena de retransmisión. En la arquitectura de Polkadot, tenemos mil validadores divididos en dos grupos. El primero, un grupo muy pequeño, es responsable solo de formar el encabezado del bloque y un nuevo bloque que consiste en los encabezados de los bloques del Estado de los Estados. El segundo grupo: los validadores de paracadena, se divide aún más en muchos subgrupos, pero este grupo se llama validadores de paracadena. En las redes L2 por encima de Ethereum, esta historia eventualmente ganará más comprensión, más denominadores. Por ahora, centrémonos en la arquitectura de Polkadot. Los finalizadores, además de verificar un conjunto adicional de meta-información y volver a verificar un validador con un ID específico, elegido al azar para generar este bloque de todos los bloques, también ayudan a volver a verificar la meta-información, verificar y ensamblar todos los encabezados en uno. Es un poco complejo, sí, si lo miramos desde la perspectiva del ensamblaje de árboles.",
  "In addition to this, in the Polkadot architecture and in Ethereum with the latest changes, a data availability check takes place. For this, finalizers visit parachain validators and try to request actual information about each block stored in the network. If they receive data from at least 1/3 of the validators, using technology that allows redundant storage of information, and subsequently, if someone loses it, one or two or three validators can still restore it, there is a critical threshold at 1/3. If 1/3 of the nodes respond and say that we have data about the block being produced, finalizers tell the block that it is already a fully formed information block, that all computations have been done correctly, that we have already taken the header of this block and combined it with someone else's headers from other segments of the network. We have already formed the main header of the entire network. After that, finalizers place many checkmarks on the final block, which combines all performed computations.": "Además de esto, en la arquitectura de Polkadot y en Ethereum con los últimos cambios, se realiza una verificación de disponibilidad de datos. Para esto, los finalizadores visitan a los validadores de las paracadenas e intentan solicitar información real sobre cada bloque almacenado en la red. Si reciben datos de al menos 1/3 de los validadores, utilizando tecnología que permite el almacenamiento redundante de información, y posteriormente, si alguien la pierde, uno o dos o tres validadores aún pueden restaurarla, hay un umbral crítico en 1/3. Si 1/3 de los nodos responden y dicen que tenemos datos sobre el bloque que se está produciendo, los finalizadores le dicen al bloque que ya es un bloque de información completamente formado, que todos los cálculos se han realizado correctamente, que ya hemos tomado el encabezado de este bloque y lo hemos combinado con los encabezados de otras personas de otros segmentos de la red. Ya hemos formado el encabezado principal de toda la red. Después de eso, los finalizadores colocan muchas marcas de verificación en el bloque final, que combina todos los cálculos realizados.",
  "Currently, this is the situation from the perspective of the most engineering-implemented multi-chain heterogeneous ecosystem, which is Polkadot. It is the most engineering-implemented multi-chain heterogeneous ecosystem, not too far from Ethereum. I would like to focus on the comparison, and if someone is interested in understanding how information blocks flow in Ethereum with L2 networks, you can try to do that now. I will return to this question when some elements of Ethereum, in terms of heterogeneity and multi-chain aspects, are completed. It might take 1-2 years, and then we can build such a picture. Nevertheless, we can generally accept a scheme with three main stages:": "Actualmente, esta es la situación desde la perspectiva del ecosistema heterogéneo de múltiples cadenas más implementado en términos de ingeniería, que es Polkadot. Es el ecosistema heterogéneo de múltiples cadenas más implementado en términos de ingeniería, no muy lejos de Ethereum. Me gustaría centrarme en la comparación, y si alguien está interesado en entender cómo fluyen los bloques de información en Ethereum con redes L2, puede intentarlo ahora. Volveré a esta pregunta cuando algunos elementos de Ethereum, en términos de heterogeneidad y aspectos de múltiples cadenas, estén completos. Podría tomar 1-2 años, y luego podremos construir tal imagen. Sin embargo, podemos aceptar generalmente un esquema con tres etapas principales:",
  "**1. Formation of a candidate for the information block:**": "**1. Formación de un candidato para el bloque de información:**",
  "In this stage, the initial candidate for the information block is formed.": "En esta etapa, se forma el candidato inicial para el bloque de información.",
  "**2. Execution of all computations, data storage, data availability, rechecking with other nodes, ensuring that all state transitions are performed correctly according to specific algorithms, and storing these algorithms in the main citadel:**": "**2. Ejecución de todos los cálculos, almacenamiento de datos, disponibilidad de datos, reconfirmación con otros nodos, asegurando que todas las transiciones de estado se realicen correctamente según algoritmos específicos, y almacenando estos algoritmos en la ciudadela principal:**",
  "This stage involves the actual execution of computations, saving data to certain layers, ensuring data availability, rechecking with other nodes to confirm that all state transitions are in accordance with algorithms stored somewhere in the main citadel.": "Esta etapa implica la ejecución real de cálculos, guardando datos en ciertas capas, asegurando la disponibilidad de datos, reconfirmación con otros nodos para confirmar que todas las transiciones de estado están de acuerdo con algoritmos almacenados en algún lugar de la ciudadela principal.",
  "**3. Finalization, which will not recheck the computations but will verify the meta-information, how this meta-information is stored. It will then assemble the final block, which is the state of the states, and release it as a common information block for the entire segmented multi-chain network:**": "**3. Finalización, que no volverá a verificar los cálculos pero verificará la meta-información, cómo se almacena esta meta-información. Luego ensamblará el bloque final, que es el estado de los estados, y lo liberará como un bloque de información común para toda la red multi-cadena segmentada:**",
  "The final stage involves checking the meta-information, verifying how this meta-information is stored, assembling the final block (state of the states), and releasing it as a common information block for the entire segmented multi-chain network.": "La etapa final implica verificar la meta-información, verificar cómo se almacena esta meta-información, ensamblar el bloque final (estado de los estados) y liberarlo como un bloque de información común para toda la red multi-cadena segmentada.",
  "At this point, we can say that our information is saved. It has passed through the heart, the heart has executed its data transfer correctly, and we can already use the output values. Some will use them to open a smart-contract-purchased apartment with a smart lock, while others might show off their NFT, just received for 10 ethers.": "En este punto, podemos decir que nuestra información está guardada. Ha pasado por el corazón, el corazón ha ejecutado correctamente su transferencia de datos, y ya podemos usar los valores de salida. Algunos los usarán para abrir un apartamento comprado con un contrato inteligente con una cerradura inteligente, mientras que otros podrían presumir de su NFT, recién recibido por 10 ethers.",
  "In general, this is approximately how it works. This concludes the theoretical part. I think it took about 2 hours, and ahead of us are practical sessions that I will be recording over the next few months. They will help us understand the observed data from the console window, decentralized applications, block explorers, where we will gradually understand how all these theoretical numbers and letters actually look in implementation using Polkadot as an example. I will also start getting hands-on with implementations at the L2 level using one of the well-known frameworks for building L2. Thank you to everyone who has been watching.": "En general, así es más o menos cómo funciona. Esto concluye la parte teórica. Creo que tomó alrededor de 2 horas, y por delante tenemos sesiones prácticas que estaré grabando durante los próximos meses. Nos ayudarán a entender los datos observados desde la ventana de la consola, aplicaciones descentralizadas, exploradores de bloques, donde gradualmente entenderemos cómo se ven realmente todos estos números y letras te��ricos en la implementación utilizando Polkadot como ejemplo. También comenzaré a trabajar en implementaciones a nivel L2 utilizando uno de los marcos conocidos para construir L2. Gracias a todos los que han estado viendo."
}