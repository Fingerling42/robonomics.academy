{
  "Part 3: Emergence of the World Computer": "Teil 3: Entstehung des Weltcomputers",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.\"": "Im dritten Teil mit dem Titel \"Entstehung des Weltcomputers\" werden wir versuchen, Schicht für Schicht die technische Umsetzung des Weltcomputers mithilfe von Beispielen aus Ethereum und Polkadot nachzubilden, wie zuvor.",
  "Learn": "Lernen",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.": "Im dritten Teil mit dem Titel \"Entstehung des Weltcomputers\" werden wir versuchen, Schicht für Schicht die technische Umsetzung des Weltcomputers mithilfe von Beispielen aus Ethereum und Polkadot nachzubilden, wie zuvor.",
  "Let's start with Ethereum. Ethereum began in 2015 with a state that can be characterized as a combination of the proof-of-work consensus algorithm, enabling the world computer to exist in a decentralized state (as discussed in Part 2). Additionally, the Ethereum Virtual Machine (EVM) was introduced, serving as a Turing-complete computational machine. Together, these two elements formed the first version of the world computer, sometimes referred to as a precursor. Within this context, decentralized applications, or smart contracts, began to emerge.": "Lassen Sie uns mit Ethereum beginnen. Ethereum begann 2015 mit einem Zustand, der als Kombination des Proof-of-Work-Konsensalgorithmus charakterisiert werden kann, der es dem Weltcomputer ermöglichte, in einem dezentralen Zustand zu existieren (wie in Teil 2 diskutiert). Darüber hinaus wurde die Ethereum Virtual Machine (EVM) eingeführt, die als Turing-vollständige Rechenmaschine diente. Zusammen bildeten diese beiden Elemente die erste Version des Weltcomputers, manchmal als Vorläufer bezeichnet. Im Rahmen dieser Kontextualisierung begannen dezentrale Anwendungen oder Smart Contracts aufzutauchen.",
  "Over the next 5 years, Ethereum lived a relatively unchanged life, undergoing some engineering tunings, such as a continuous increase in gas limits, with the exception of events like the Shanghai fork. Notably, during the second DEFCON held in Shanghai, a denial-of-service attack exploited a function in the virtual machine that consumed minimal gas but triggered significant computations on the Ethereum network. This led to memory overflow, effectively disrupting an entire Ethereum node. This incident highlights the intricate details that arise when dealing with a large and abstract solution like creating a virtual machine.": "In den nächsten 5 Jahren führte Ethereum ein relativ unverändertes Leben, unterzog sich einigen technischen Feinabstimmungen, wie einer kontinuierlichen Erhöhung der Gasgrenzen, mit Ausnahme von Ereignissen wie der Shanghai-Fork. Besonders während des zweiten DEFCON in Shanghai wurde ein Denial-of-Service-Angriff ausgeführt, der eine Funktion in der virtuellen Maschine ausnutzte, die minimalen Gas verbrauchte, aber signifikante Berechnungen im Ethereum-Netzwerk auslöste. Dies führte zu einem Speicherüberlauf, der effektiv einen gesamten Ethereum-Knoten störte. Dieser Vorfall verdeutlicht die komplexen Details, die bei der Arbeit mit einer großen und abstrakten Lösung wie der Erstellung einer virtuellen Maschine auftreten.",
  "Moving forward, a significant shift occurred around the end of the decade, particularly in 2020, with the advent of Ethereum 2.0. However, Ethereum 2.0 has now been deprecated, and I would characterize the real breakthrough as starting around 2019-2020. During this period, there was a true technological breakthrough in Ethereum, moving towards the concept of Ethereum 2.0. The moment of engineering change in Ethereum's architecture can be considered the event known as \"the merge,\" where the functionalities of the beacon chain were combined. The merge marked a significant shift in the paradigm of Ethereum, transitioning it into a slightly different state than what was on the board. The actual engineering change in Ethereum's architecture can be associated with \"the merge,\" where the functionalities of the beacon chain were integrated. For a detailed history of this, you can refer to the ethereum.org website, which provides an excellent article on the coexistence of the traditional Ethereum blockchain with the parallel blockchain launched in 2015 and the Ethereum Virtual Machine.": "In der Folge kam es gegen Ende des Jahrzehnts, insbesondere 2020, zu einem bedeutenden Wandel, mit dem Aufkommen von Ethereum 2.0. Allerdings wurde Ethereum 2.0 mittlerweile veraltet, und ich würde den eigentlichen Durchbruch als Beginn um 2019-2020 charakterisieren. Während dieser Zeit gab es einen echten technologischen Durchbruch in Ethereum, der sich auf das Konzept von Ethereum 2.0 zubewegte. Der Moment des technischen Wandels in der Architektur von Ethereum kann als das Ereignis betrachtet werden, das als \"die Fusion\" bekannt ist, bei der die Funktionalitäten der Beacon Chain kombiniert wurden. Die Fusion markierte einen signifikanten Paradigmenwechsel in Ethereum, der es in einen etwas anderen Zustand versetzte als zuvor. Der tatsächliche technische Wandel in der Architektur von Ethereum kann mit \"der Fusion\" in Verbindung gebracht werden, bei der die Funktionalitäten der Beacon Chain integriert wurden. Für eine detaillierte Geschichte dazu können Sie die Website ethereum.org konsultieren, die einen ausgezeichneten Artikel über das Nebeneinander des traditionellen Ethereum-Blockchains mit dem 2015 gestarteten parallelen Blockchain und der Ethereum Virtual Machine bietet.",
  "When the merge occurred, we witnessed a new architectural representation, both at the network level and for individual nodes interacting with the Ethereum network. What was the actual change? For many, the merge signifies the transition from proof-of-work to proof-of-stake, which is indeed significant. It implies increased efficiency and fine-tuning, but it's still a tuning relative to one of the parameters. However, the more noteworthy internal engineering change for each network client was the split. There was no longer a single specific network client or a monolithic architecture. Instead, we got two components of a single node interacting with the Ethereum network.": "Als der Merge stattfand, beobachteten wir eine neue architektonische Darstellung, sowohl auf Netzwerkebene als auch für einzelne Knoten, die mit dem Ethereum-Netzwerk interagieren. Was war die tatsächliche Veränderung? Für viele bedeutet der Merge den Übergang von Proof-of-Work zu Proof-of-Stake, was tatsächlich signifikant ist. Es impliziert eine erhöhte Effizienz und Feinabstimmung, aber es handelt sich immer noch um eine Abstimmung im Verhältnis zu einem der Parameter. Die bemerkenswertere interne technische Änderung für jeden Netzwerkclient war jedoch die Aufteilung. Es gab nicht mehr einen spezifischen Netzwerkclient oder eine monolithische Architektur. Stattdessen erhielten wir zwei Komponenten eines einzelnen Knotens, die mit dem Ethereum-Netzwerk interagieren.",
  "The first part, which I labeled \"beacon chain\" on the diagram, essentially represents a collective image of all the innovations that came into the Ethereum client at the moment of the merge. The second part is the preserved virtual machine. Nevertheless, it's worth adding something here too. Dialogues truly began about replacing the virtual machine, which was exclusively tailored to work with smart contracts and smart contracts in a specific language—Solidity. This is because, by 2015, there were practically no interpreters left for smart contracts in languages other than Solidity, and the architecture appeared somewhat one-sided from the perspective of an Ethereum programmer. You learn a snippet of JavaScript in the form of Solidity, write smart contract code on it, and get your DApp, like Uniswap, for example.": "Der erste Teil, den ich auf dem Diagramm als \"Beacon Chain\" bezeichnet habe, repräsentiert im Wesentlichen ein kollektives Bild aller Innovationen, die zum Zeitpunkt des Merges in den Ethereum-Client eingeflossen sind. Der zweite Teil ist die erhaltene virtuelle Maschine. Dennoch lohnt es sich auch hier etwas hinzuzufügen. Es begannen tatsächlich Diskussionen über die Ersetzung der virtuellen Maschine, die ausschließlich darauf ausgelegt war, mit Smart Contracts und Smart Contracts in einer bestimmten Sprache - Solidity - zu arbeiten. Dies liegt daran, dass es bis 2015 praktisch keine Interpreter mehr für Smart Contracts in anderen Sprachen als Solidity gab und die Architektur aus der Sicht eines Ethereum-Programmierers etwas einseitig erschien. Man lernt ein Schnipsel JavaScript in Form von Solidity, schreibt darauf Smart Contract-Code und erhält seine DApp, wie zum Beispiel Uniswap.",
  "Since the emergence of a more complex Ethereum architecture, discussions have revolved around the idea that the virtual machine, which existed as a somewhat monolithic element from 2015, can also be replaced in the new architecture. The conversation shifted towards replacing it with something like WebAssembly (Wasm) or a more interesting solution from the perspective of writing code for the world computer. You could say, \"Wasm with a question mark.\"": "Seit dem Aufkommen einer komplexeren Ethereum-Architektur drehen sich die Diskussionen um die Idee, dass die virtuelle Maschine, die seit 2015 als etwas monolithisches Element existierte, auch in der neuen Architektur ersetzt werden kann. Die Diskussion verlagerte sich dahingehend, sie durch etwas wie WebAssembly (Wasm) oder eine interessantere Lösung aus der Perspektive des Schreibens von Code für den Weltcomputer zu ersetzen. Man könnte sagen, \"Wasm mit einem Fragezeichen.\"",
  "From the perspective of the Beacon Chain, it indeed operates on proof-of-stake, but what's more interesting is the inclusion of Gasper. This represents a modification of the original ideas about Casper. Casper, often referred to as the friendly ghost finality gadget, was introduced, perhaps even as early as Defcon 3 or 4, and maybe even discussed at Defcon 2—I don't recall precisely. But at the EthCC conference in Paris, which definitely took place in 2018, Vlad Zamfir and Vitalik, from different rooms, were discussing the emergence of Casper as a friendly ghost, overseeing participants in proof-of-stake and coming to the aid of the network when a node misbehaves. From this idea of Casper, Gasper emerges. Without delving into terminology too much, the consensus algorithm undergoes a shift, changing not only in terms of simplicity but also becoming more complex, similar to Polkadot. As I mentioned earlier, Polkadot has two consensus algorithms, Babe and Grandpa. Similarly, with Ethereum's Beacon Chain functionality, achieving consensus and finality is not as instantaneous. It involves epochs, and the network operates on a more complex scenario, reaching a state that is already somewhat dynamic, not frozen, and is essentially carved in stone.": "Aus der Perspektive der Beacon Chain arbeitet sie tatsächlich nach dem Proof-of-Stake-Prinzip, aber noch interessanter ist die Einbeziehung von Gasper. Dies stellt eine Modifikation der ursprünglichen Ideen zu Casper dar. Casper, oft als freundlicher Geist-Finalitätsmechanismus bezeichnet, wurde möglicherweise bereits bei Defcon 3 oder 4 eingeführt und vielleicht sogar bei Defcon 2 diskutiert - ich erinnere mich nicht genau. Aber auf der EthCC-Konferenz in Paris, die definitiv 2018 stattfand, diskutierten Vlad Zamfir und Vitalik aus verschiedenen Räumen heraus über das Aufkommen von Casper als freundlicher Geist, der die Teilnehmer im Proof-of-Stake überwacht und dem Netzwerk zu Hilfe kommt, wenn ein Knoten sich falsch verhält. Aus dieser Idee von Casper entsteht Gasper. Ohne zu sehr in die Terminologie einzutauchen, erfährt der Konsensalgorithmus eine Verschiebung, ändert sich nicht nur in Bezug auf Einfachheit, sondern wird auch komplexer, ähnlich wie bei Polkadot. Wie ich bereits erwähnte, hat Polkadot zwei Konsensalgorithmen, Babe und Grandpa. Ähnlich verhält es sich mit der Beacon Chain-Funktionalität von Ethereum, bei der die Erreichung von Konsens und Finalität nicht so unmittelbar ist. Es beinhaltet Epochen, und das Netzwerk arbeitet in einem komplexeren Szenario, erreicht einen Zustand, der bereits etwas dynamisch ist, nicht eingefroren und im Wesentlichen in Stein gemeißelt.",
  "What can be added in relation to 2024? For me, it was a prolonged observation and an attempt to understand whether Ethereum would eventually implement sharding or not. Sharding is the ability to exist not with a single blockchain but with multiple blockchains within one network. As I observed the merge and the simultaneous rise of Layer 2 (L2) networks, questions arose in my mind about whether sharding would indeed materialize. Sharding seemed interesting to me due to its homogeneity—having multiple chains that are almost identical, lacking any specific characteristics. It appeared to be an interesting approach, but not as flexible as a heterogeneous approach. In L2 networks, even several years ago, I could see the heterogeneity of Ethereum, its ability to work with various types of more specific blockchains. I was curious about the direction it would take—whether sharding, with its homogeneity, would displace L2 solutions or whether L2 solutions with a heterogeneous approach would saturate the Beacon Chain and the main nodes of the Ethereum network.": "Was kann im Zusammenhang mit 2024 hinzugefügt werden? Für mich war es eine langwierige Beobachtung und ein Versuch zu verstehen, ob Ethereum letztendlich Sharding implementieren würde oder nicht. Sharding ist die Fähigkeit, nicht nur mit einer einzelnen Blockchain, sondern mit mehreren Blockchains innerhalb eines Netzwerks zu existieren. Als ich den Merge und den gleichzeitigen Aufstieg von Layer 2 (L2)-Netzwerken beobachtete, kamen mir Fragen in den Sinn, ob Sharding tatsächlich realisiert werden würde. Sharding schien mir aufgrund seiner Homogenität interessant zu sein - mit mehreren Ketten, die fast identisch sind und keine spezifischen Merkmale aufweisen. Es schien mir ein interessanter Ansatz zu sein, aber nicht so flexibel wie ein heterogener Ansatz. In L2-Netzwerken konnte ich bereits vor einigen Jahren die Heterogenität von Ethereum erkennen, seine Fähigkeit, mit verschiedenen Arten von spezifischeren Blockchains zu arbeiten. Ich war neugierig, in welche Richtung es gehen würde - ob Sharding mit seiner Homogenität die L2-Lösungen verdrängen würde oder ob die L2-Lösungen mit einem heterogenen Ansatz die Beacon Chain und die Hauptknoten des Ethereum-Netzwerks saturieren würden.",
  "Today, in 2024, based on articles on ethereum.org, it seems that sharding as a concept has been pushed back, and the focus is on helping various L2 networks integrate with the Beacon Chain and align with the main chain's functionality, which is now divided into two elements in the Ethereum network's architecture.": "Heute, im Jahr 2024, basierend auf Artikeln auf ethereum.org, scheint es, dass Sharding als Konzept zurückgestellt wurde und der Fokus darauf liegt, verschiedenen L2-Netzwerken zu helfen, sich mit der Beacon Chain zu integrieren und sich mit der Funktionalität der Hauptkette abzustimmen, die jetzt in zwei Elemente in der Architektur des Ethereum-Netzwerks aufgeteilt ist.",
  "Therefore, without delving into the details of how L2 networks are structured—although we'll touch upon that when we fill in the second part of the board—we should imagine that Ethereum is now a kind of Beacon Chain, a beacon, a guiding star for numerous L2 networks. These L2 networks can have more specific functionality, executing their logic according to a set of individual functions. This is somewhat in line with the idea of a Swiss Army knife—not making Ethereum a Swiss Army knife, but L2 networks are starting to differentiate in architecture. They duplicate the functionality of the abstract computing machine of Ethereum but perform it with lower gas costs or within their specific segment. Some are already thinking about tuning and making their L2 layer more efficient, focusing on specific functional capabilities. Thus, in my opinion, we are witnessing the emergence of heterogeneity in the world computer that aimed to be homogeneous. Also, it's essential not to forget that decentralized applications (dApps) still exist within the main blockchain, within that same blockchain that started in 2015. This means that during the merge, during the transition to the new architectural state, there was no wipeout, no erasure of the previous history. All decentralized applications and smart contracts underlying these applications continued to exist, and they continue to exist today, and probably tomorrow. This is a question that we will explore using Polkadot as an example, but there is still a feeling that it will be possible to settle a decentralized application in the Beacon Chain—dApps.": "Daher, ohne in die Details einzutauchen, wie L2-Netzwerke strukturiert sind - obwohl wir darauf eingehen werden, wenn wir den zweiten Teil des Boards ausfüllen - sollten wir uns vorstellen, dass Ethereum jetzt eine Art Beacon Chain ist, ein Leitstern für zahlreiche L2-Netzwerke. Diese L2-Netzwerke können spezifischere Funktionalitäten haben, ihre Logik gemäß einer Reihe von individuellen Funktionen ausführen. Dies steht ein wenig im Einklang mit der Idee eines Schweizer Taschenmessers - Ethereum wird nicht zu einem Schweizer Taschenmesser, aber L2-Netzwerke beginnen sich in ihrer Architektur zu unterscheiden. Sie duplizieren die Funktionalität der abstrakten Rechenmaschine von Ethereum, führen sie jedoch mit geringeren Gasgebühren oder innerhalb ihres spezifischen Segments aus. Einige denken bereits darüber nach, ihre L2-Schicht zu optimieren und effizienter zu gestalten, indem sie sich auf spezifische funktionale Fähigkeiten konzentrieren. Meiner Meinung nach erleben wir also das Aufkommen von Heterogenität in dem Weltcomputer, der homogen sein sollte. Es ist auch wichtig, nicht zu vergessen, dass dezentrale Anwendungen (dApps) immer noch innerhalb der Hauptblockchain existieren, innerhalb derselben Blockchain, die 2015 begann. Dies bedeutet, dass während des Mergers, während des Übergangs zum neuen architektonischen Zustand, keine Löschung, kein Löschen der vorherigen Geschichte stattfand. Alle dezentralen Anwendungen und Smart Contracts, die diesen Anwendungen zugrunde liegen, existierten weiterhin und existieren auch heute und wahrscheinlich morgen. Dies ist eine Frage, die wir am Beispiel von Polkadot untersuchen werden, aber es besteht immer noch das Gefühl, dass es möglich sein wird, eine dezentrale Anwendung in der Beacon Chain - dApps - abzuwickeln.",
  "In summary, let's imagine the engineering implementation of today's Ethereum as a world computer. We have each network node consisting of two parts. The first layer is responsible for the Ethereum Virtual Machine (EVM), the actual functionality of the virtual machine or Turing complete machine, if we talk in theoretical terms. Perhaps we will see the emergence of alternatives to the virtual machine designed in 2015. These alternatives will likely surpass it in terms of more abstract programming possibilities than writing smart contracts in Solidity. Meanwhile, smart contracts in Solidity continue to feel comfortable. If you want to write functionality for the Ethereum main chain without creating any infrastructure on top of Ethereum, without offloading any calculations to make them cheaper, and so on, decentralized applications that you can write as smart contracts can still be housed in Ethereum's main blockchain. At the same time, Beacon Chain functionality has emerged, separating the consensus logic between validators from the main protocol of the computing machine. This allows for additional flexibility in how consensus should work and how it should be further modified without affecting the virtual machine itself. The example of Shanghai and Defcon 2, where a small opcode error caused a shutdown of part of the infrastructure, hints that it would be good to have such complex functionalities separated into two parts.": "Zusammenfassend betrachten wir die technische Umsetzung des heutigen Ethereum als Weltcomputer. Jeder Netzwerkknoten besteht aus zwei Teilen. Die erste Schicht ist für die Ethereum Virtual Machine (EVM) verantwortlich, die tatsächliche Funktionalität der virtuellen Maschine oder Turing-vollständigen Maschine, wenn wir in theoretischen Begriffen sprechen. Möglicherweise werden wir das Aufkommen von Alternativen zur virtuellen Maschine sehen, die 2015 entworfen wurde. Diese Alternativen werden wahrscheinlich in Bezug auf abstraktere Programmiermöglichkeiten als das Schreiben von Smart Contracts in Solidity übertreffen. In der Zwischenzeit fühlen sich Smart Contracts in Solidity weiterhin wohl. Wenn Sie Funktionalitäten für die Ethereum-Hauptkette schreiben möchten, ohne eine Infrastruktur über Ethereum zu erstellen, ohne Berechnungen auszulagern, um sie günstiger zu machen usw., können dezentrale Anwendungen, die Sie als Smart Contracts schreiben können, immer noch in der Hauptblockchain von Ethereum untergebracht werden. Gleichzeitig ist die Funktionalität der Beacon Chain entstanden, die die Konsenslogik zwischen Validatoren vom Hauptprotokoll der Rechenmaschine trennt. Dies ermöglicht zusätzliche Flexibilität in Bezug darauf, wie der Konsens funktionieren sollte und wie er weiter modifiziert werden sollte, ohne die virtuelle Maschine selbst zu beeinträchtigen. Das Beispiel von Shanghai und Defcon 2, bei dem ein kleiner Opcode-Fehler zu einem Ausfall eines Teils der Infrastruktur führte, deutet darauf hin, dass es gut wäre, solche komplexen Funktionalitäten in zwei Teile aufzuteilen.",
  "What's interesting about the Beacon Chain? It is a more complex, comprehensive algorithm for achieving network synchronicity and finalization with the introduction of concepts such as \"epoch,\" and the presence of a ghost living within the network.": "Was ist interessant an der Beacon Chain? Es handelt sich um einen komplexeren, umfassenderen Algorithmus zur Erreichung von Netzwerksynchronizität und Finalisierung mit der Einführung von Konzepten wie \"Epoch\" und dem Vorhandensein eines Geistes, der im Netzwerk lebt.",
  "Lastly, what is important to consider now is that Ethereum is effectively putting an end to homogeneity, to the idea of getting a hundred identical blockchains working with the same virtual machine, where smart contracts written in Solidity can reside. Instead, various projects are proposing their own architectures or the same virtual machine taken beyond the main blockchain's limits. Alternatively, they are trying to build their more specific application, which, at the level of the Beacon Chain's main chain, is a smart contract written in Solidity. This is the current representation of Ethereum, which did not become Ethereum 2.0. It remains the same Ethereum—a project that once started with proof of work + Turing complete machine, transforming into this architecture.": "Schließlich ist es jetzt wichtig zu bedenken, dass Ethereum effektiv der Homogenität ein Ende setzt, der Idee, hundert identische Blockchains mit derselben virtuellen Maschine arbeiten zu lassen, in der Smart Contracts in Solidity geschrieben werden können. Stattdessen schlagen verschiedene Projekte ihre eigenen Architekturen oder dieselbe virtuelle Maschine vor, die über die Grenzen der Hauptblockchain hinausgeht. Alternativ versuchen sie, ihre spezifischere Anwendung zu erstellen, die auf der Hauptkette der Beacon Chain als in Solidity geschriebener Smart Contract fungiert. Dies ist die aktuelle Darstellung von Ethereum, das nicht zu Ethereum 2.0 wurde. Es bleibt dasselbe Ethereum - ein Projekt, das einst mit Proof of Work + Turing-vollständiger Maschine begann und sich in diese Architektur verwandelte.",
  "Now, let's take a look at how Polkadot emerged and evolved over the last 5 years. Polkadot came into existence five years after Ethereum, born out of the team that developed one of the best clients for Ethereum—Parity. Many might remember their web client, which, compared to Geth and other implementations, was probably much more pleasant to work with, at least from personal experience and the experience of colleagues.": "Nun wollen wir uns ansehen, wie Polkadot in den letzten 5 Jahren entstanden und entwickelt hat. Polkadot entstand fünf Jahre nach Ethereum, hervorgegangen aus dem Team, das einen der besten Clients für Ethereum entwickelt hat - Parity. Viele erinnern sich vielleicht an ihren Webclient, der im Vergleich zu Geth und anderen Implementierungen wahrscheinlich viel angenehmer zu bedienen war, zumindest aus persönlicher Erfahrung und der Erfahrung von Kollegen.",
  "In the end, after a couple of months of the relay chain's existence without any decentralized application functionality, without the ability to connect your parachain or L2 network, without user capabilities, the network transitioned from an authority state to proof of stake. This gave developers the ability to upload their runtimes.": "Am Ende, nach ein paar Monaten des Bestehens der Relay Chain ohne dezentrale Anwendungsfunktionalität, ohne die Möglichkeit, Ihre Parachain oder L2-Netzwerk zu verbinden, ohne Benutzerfähigkeiten, wechselte das Netzwerk von einem Autoritätszustand zu einem Proof-of-Stake-Zustand. Dies gab Entwicklern die Möglichkeit, ihre Laufzeiten hochzuladen.",
  "At this point, it's also interesting to discuss the differences between today's Ethereum and how the central part of Polkadot is structured. From the perspective of the heart, which we've already discussed, the picture will be absolutely the same not only for Ethereum and Polkadot but for any project that wants to be presented as an abstract computing machine. However, from an engineering and architectural standpoint, it's fascinating to observe Beacon Chain & Relay Chain. Here, we have a virtual machine, which has been inherited since 2015, but alternatives are being proposed. In the relay chain, there's the ability to upload your runtime. The runtime is, in fact, your virtual machine. For example, some parachains completely emulate the Ethereum Virtual Machine. It's written as a runtime, meaning you can essentially upload an Ethereum Virtual Machine analog to the parachain level in Polkadot or write more specific logic that works with four or five functions. Recall part one about the ideas— you can write your Swiss Army knife, but it won't require creating the entire infrastructure. You can implement specific functionality with certain functions at the runtime level, put it into the Polkadot relay chain, and the immutability of this runtime will be ensured by Polkadot validators.": "An diesem Punkt ist es auch interessant, die Unterschiede zwischen dem heutigen Ethereum und der Struktur des zentralen Teils von Polkadot zu diskutieren. Aus der Perspektive des Herzens, über das wir bereits gesprochen haben, wird das Bild nicht nur für Ethereum und Polkadot, sondern für jedes Projekt, das als abstrakte Rechenmaschine präsentiert werden möchte, absolut gleich sein. Aus ingenieurtechnischer und architektonischer Sicht ist es jedoch faszinierend, Beacon Chain & Relay Chain zu beobachten. Hier haben wir eine virtuelle Maschine, die seit 2015 vererbt wurde, aber es werden Alternativen vorgeschlagen. In der Relay Chain besteht die Möglichkeit, Ihre Laufzeit hochzuladen. Die Laufzeit ist in der Tat Ihre virtuelle Maschine. Zum Beispiel emulieren einige Parachains vollständig die Ethereum Virtual Machine. Es wird als Laufzeit geschrieben, was bedeutet, dass Sie im Grunde genommen eine Ethereum Virtual Machine-Analogie auf die Parachain-Ebene in Polkadot hochladen oder spezifischere Logik schreiben können, die mit vier oder fünf Funktionen funktioniert. Erinnern Sie sich an Teil eins über die Ideen - Sie können Ihr Schweizer Taschenmesser schreiben, aber es erfordert nicht die Erstellung der gesamten Infrastruktur. Sie können spezifische Funktionalitäten mit bestimmten Funktionen auf der Laufzeitebene implementieren, sie in die Polkadot-Relay-Chain einfügen und die Unveränderlichkeit dieser Laufzeit wird von den Polkadot-Validatoren sichergestellt.",
  "What happens next? Over the course of about a year, a layer of parachains begins to form around the relay chain. In terms of Ethereum implementation, you could say that L2 networks are quite similar to parachains. However, there's one interesting cross-network distinction that I find fascinating in Polkadot, and I'm trying to further understand how it will develop—namely, the second layer of validation and data availability checks. After a couple of years, Polkadot takes a shape like this. It's not just a relay chain where proof-of-stake validators protect the runtime of future parachains; an additional and crucial layer of data validation and availability checking emerges from parachains.": "Was passiert als nächstes? Im Laufe von etwa einem Jahr beginnt sich eine Schicht von Parachains um die Relay Chain zu bilden. In Bezug auf die Ethereum-Implementierung könnte man sagen, dass L2-Netzwerke ziemlich ähnlich zu Parachains sind. Es gibt jedoch eine interessante Quer-Netzwerk-Unterscheidung, die ich faszinierend finde in Polkadot, und ich versuche weiter zu verstehen, wie sie sich entwickeln wird - nämlich die zweite Schicht der Validierung und Datenverfügbarkeitsprüfungen. Nach ein paar Jahren nimmt Polkadot eine Form wie diese an. Es ist nicht nur eine Relay Chain, in der Proof-of-Stake-Validatoren die Laufzeit zukünftiger Parachains schützen; eine zusätzliche und entscheidende Schicht der Datenvalidierung und Verfügbarkeitsprüfung entsteht aus Parachains.",
  "As you look at this diagram, try to notice the analogies that arise and the differences in engineering implementation details. So, what does this represent, and how does this scheme compare with Ethereum? We have an L2 project, in this case, with Polkadot, it's a parachain. A parachain also generates information blocks, which then go to the relay chain to be combined and release a relay chain block as the sum of all headers, headers, and more headers. The parachain collects transactions in a block using collators, which are not involved in validation. They don't stake anything in the relay chain; they only use the runtime, which is in the relay chain. They fetch it, apply it to transactions, perform necessary state transitions, form a block, and, crucially, provide proof of validity—a stamp containing cryptographic proofs that the collator correctly assembled the block. This information goes to the external validation ring of the relay chain. In this ring, there are internal validators of Polkadot—parachain collators. Again, they don't stake anything directly from the relay chain's point of view. Parachain implementations sometimes introduce their consensus among collators, and some don't. For example, in Robonomics, implementing a parachain, we find this paradigm more interesting, less burdensome, and it makes the network simpler while still remaining functionally substantial. Any collator, without reaching consensus with anyone—verified by us—can propose a block and some proof to the external layer. This is precisely why blocks are proposed, proofs of block assembly validity are offered, and there's an external ring. We don't need any consensus from parachain validators. Anyone can generate a block and send it, and if this node of the collator sends incorrect information to the parachain validators on the external ring, the validator at this level will reject it. It won't pass into the central part. But let's say the block was provided correctly by the collator. Our transactions got in; the collator calculated them, applying the runtime stored in the relay chain, executed all state transitions, gathered some proof of validity—validity of the assembled block—and passed it to the external ring of the relay chain. Here, every epoch, which is also part of the finalization, every epoch has validators from the relay chain diverging into parachains. Some of them stay in the center, and the others go to parachains. Their number ranges from 16 to 64 validators, and this figure, I believe, will change in the specification—somewhere more, somewhere less. However, parachain validators re-verify the information from one selected group of validators about everything coming from the collator being correct, that work has been done in accordance with the runtime, and that the proof of validity is indeed valid. The selected segment of relay chain validators who already have something staked respond, or rather, chirp among themselves. They respond to the chosen main block producer of the parachain, so to speak, saying,": "Wenn Sie sich dieses Diagramm ansehen, versuchen Sie die Analogien zu bemerken, die entstehen, und die Unterschiede in den technischen Implementierungsdetails. Also, was repräsentiert das und wie vergleicht sich dieses Schema mit Ethereum? Wir haben ein L2-Projekt, in diesem Fall mit Polkadot, ist es eine Parachain. Eine Parachain generiert auch Informationsblöcke, die dann zur Relay Chain gehen, um kombiniert zu werden und einen Relay Chain-Block freizugeben als die Summe aller Header, Header und mehr Header. Die Parachain sammelt Transaktionen in einem Block mit Hilfe von Collators, die nicht an der Validierung beteiligt sind. Sie setzen nichts in die Relay Chain ein; sie verwenden nur die Laufzeit, die sich in der Relay Chain befindet. Sie holen sie ab, wenden sie auf Transaktionen an, führen notwendige Zustandsübergänge durch, bilden einen Block und, entscheidend, liefern einen Beweis für die Gültigkeit - einen Stempel, der kryptografische Beweise enthält, dass der Collator den Block korrekt zusammengestellt hat. Diese Informationen gehen an den externen Validierungsring der Relay Chain. In diesem Ring gibt es interne Validatoren von Polkadot - Parachain-Collators. Auch sie setzen nichts direkt aus der Sicht der Relay Chain ein. Parachain-Implementierungen führen manchmal ihren Konsens unter den Collators ein, und manche nicht. Zum Beispiel finden wir in Robonomics, bei der Implementierung einer Parachain, dieses Paradigma interessanter, weniger belastend und es macht das Netzwerk einfacher, bleibt aber funktional wesentlich. Jeder Collator, ohne mit jemandem Konsens zu erreichen - von uns verifiziert - kann einen Block vorschlagen und einen Beweis an die externe Schicht senden. Genau deshalb werden Blöcke vorgeschlagen, Beweise für die Gültigkeit der Blockzusammenstellung angeboten und es gibt einen externen Ring. Wir benötigen keinen Konsens von Parachain-Validatoren. Jeder kann einen Block generieren und senden, und wenn dieser Knoten des Collators falsche Informationen an die Parachain-Validatoren im externen Ring sendet, wird der Validator auf dieser Ebene es ablehnen. Es wird nicht in den zentralen Teil gelangen. Aber sagen wir, der Block wurde korrekt vom Collator bereitgestellt. Unsere Transaktionen sind drin; der Collator hat sie berechnet, die Laufzeit angewendet, die in der Relay Chain gespeichert ist, alle Zustandsübergänge ausgeführt, einen Beweis für die Gültigkeit gesammelt - die Gültigkeit des zusammengestellten Blocks - und ihn an den externen Ring der Relay Chain weitergeleitet. Hier, in jeder Epoche, die auch Teil der Finalisierung ist, haben jede Epoche Validatoren aus der Relay Chain, die in Parachains abweichen. Einige von ihnen bleiben in der Mitte, und die anderen gehen zu Parachains. Ihre Anzahl reicht von 16 bis 64 Validatoren, und diese Zahl, glaube ich, wird sich in der Spezifikation ändern - an manchen Stellen mehr, an anderen weniger. Parachain-Validatoren überprüfen die Informationen aus einer ausgewählten Gruppe von Validatoren erneut, ob alles vom Collator kommende korrekt ist, ob die Arbeit gemäß der Laufzeit durchgeführt wurde und ob der Beweis für die Gültigkeit tatsächlich gültig ist. Das ausgewählte Segment der Relay Chain-Validatoren, die bereits etwas gesetzt haben, antworten oder besser gesagt, zwitschern untereinander. Sie antworten dem ausgewählten Hauptblockproduzenten der Parachain, sozusagen, und sagen,",
  "\"Yes, we agree. There are no problems. You can carry it through the entire external ring inside.\"": "\"Ja, wir stimmen zu. Es gibt keine Probleme. Sie können es durch den gesamten externen Ring innen tragen.\"",
  "And thus, almost all information formed on the parachain collators, with verification on the external ring, enters the internal one. The lower part, not that it's physically at the bottom, still constitutes the external ring—data availability. Data starts to be checked at this stage, meaning that on the external ring, not only the correctness of block assembly is verified, but the process of preparing for distribution within the Polkadot network begins, ensuring that the block information will not be lost in the future. Here, precisely, is what I mentioned in the second part about chunks, like CD RW. At this stage of block preparation for transfer to the internal ring, the data availability layer is formed as a service, something that is currently also attempted by some projects in Ethereum. Some projects put additional redundant information directly into smart contracts, necessary for checking what is happening on the L2 layer and, if necessary, slashing or punishing those who did it incorrectly. It's impossible to overcome the external ring without distributing block information and without rechecking dozens of nodes with stakes laid down on the assumption that the runtime must work correctly.": "Und so gelangt fast alle Informationen, die auf den Parachain-Kollatoren gebildet wurden, mit Überprüfung im externen Ring, in den internen Ring. Der untere Teil, nicht dass er physisch unten ist, bildet immer noch den externen Ring - Datenverfügbarkeit. Daten beginnen in diesem Stadium überprüft zu werden, was bedeutet, dass im externen Ring nicht nur die Korrektheit der Blockmontage überprüft wird, sondern auch der Prozess der Vorbereitung auf die Verteilung innerhalb des Polkadot-Netzwerks beginnt, um sicherzustellen, dass die Blockinformationen in Zukunft nicht verloren gehen. Hier ist genau das, was ich im zweiten Teil über Chunks erwähnt habe, wie CD RW. In diesem Stadium der Blockvorbereitung für die Übertragung in den internen Ring wird die Datensicherheitsschicht als Dienst gebildet, etwas, das derzeit auch von einigen Projekten in Ethereum versucht wird. Einige Projekte fügen zusätzliche redundante Informationen direkt in Smart Contracts ein, die für die Überprüfung dessen erforderlich sind, was auf der L2-Ebene passiert, und gegebenenfalls das Slashing oder Bestrafen derjenigen, die es falsch gemacht haben. Es ist unmöglich, den externen Ring zu überwinden, ohne Blockinformationen zu verteilen und ohne Dutzende von Knoten mit Einsätzen erneut zu überprüfen, die auf der Annahme beruhen, dass die Laufzeit korrekt funktionieren muss.",
  "Thus, information that has passed through the external ring is already quite trustworthy, probably yes, you can say that, and on the internal ring, work is mainly done not with parachain blocks, but their block headers are collected into one big header. That is, from many headers, one header of a relay chain block is assembled—a mechanism of linking in Shared Security, as mentioned in Polkadot, which ensures the security of parachains. One could say that parachains are validated and reach a state where the service exists in a distributed decentralized form on the external ring. In the internal ring, the information that has entered attempts to come together in one hyperblock, which should precisely link everything together. There are no calculations happening there; there is no recalculation of absolutely everything. The assembly of the final block takes place, so to speak, in the current iteration of the world computer, to put a point on the question of whether the transaction has passed in a particular parachain. We must assemble a hyperblock that contains not all the information from the parachains but gathers all the headers verified on the external ring of parachains into one large block. And thus, our world computer in Polkadot operates.": "Daher ist die Information, die den externen Ring passiert hat, bereits ziemlich vertrauenswürdig, wahrscheinlich ja, man kann das sagen, und im internen Ring wird hauptsächlich nicht mit Parachain-Blöcken gearbeitet, sondern ihre Blockheader werden zu einem großen Header zusammengefasst. Das heißt, aus vielen Headern wird ein Header eines Relay-Chain-Blocks zusammengebaut - ein Mechanismus des Verknüpfens in Shared Security, wie in Polkadot erwähnt, der die Sicherheit von Parachains gewährleistet. Man könnte sagen, dass Parachains validiert werden und einen Zustand erreichen, in dem der Service in einer verteilten dezentralen Form im externen Ring existiert. Im internen Ring versucht die eingetretene Information, sich in einem Hyperblock zusammenzufügen, der alles genau verknüpfen sollte. Es finden keine Berechnungen statt; es gibt keine Neuberechnung von absolut allem. Die Montage des endgültigen Blocks findet sozusagen in der aktuellen Iteration des Weltcomputers statt, um die Frage zu klären, ob die Transaktion in einem bestimmten Parachain stattgefunden hat. Wir müssen einen Hyperblock zusammenstellen, der nicht alle Informationen aus den Parachains enthält, sondern alle auf dem externen Ring der Parachains überprüften Header in einen großen Block zusammenführt. Und so funktioniert unser Weltcomputer in Polkadot.",
  "Let's take another look at these two schemes together: relay chain, beacon chain, runtime, secured by proof of stake, where someone stakes their funds to validate that they will always perform their work correctly. There's a virtual machine where you can also stake your funds, and if you perform any computation or state transition not in accordance with the Ethereum Virtual Machine's specification, you'll be penalized.": "Lassen Sie uns diese beiden Schemata noch einmal gemeinsam betrachten: Relay-Kette, Beacon-Kette, Laufzeit, abgesichert durch Proof of Stake, bei dem jemand seine Mittel einsetzt, um zu validieren, dass sie ihre Arbeit immer korrekt ausführen werden. Es gibt eine virtuelle Maschine, in der Sie auch Ihre Mittel einsetzen können, und wenn Sie eine Berechnung oder einen Zustandsübergang durchführen, der nicht mit der Spezifikation der Ethereum Virtual Machine übereinstimmt, werden Sie bestraft.",
  "In Polkadot, there's an additional external layer, which seems to be one of the main advantages, such pleasant perks of the engineering implementation that, in my opinion, should be present here. It should appear between L2 networks and the beacon chain, which exists in Ethereum. By the way, some say that the term \"beacon chain\" is dying out again and is misunderstood, but I really like to use it in analogy with the \"relay chain,\" a term from Ethereum's roadmap.": "Bei Polkadot gibt es eine zusätzliche externe Schicht, die anscheinend einer der Hauptvorteile ist, solche angenehmen Vorteile der technischen Umsetzung, die meiner Meinung nach hier vorhanden sein sollten. Sie sollte zwischen L2-Netzwerken und der Beacon-Kette erscheinen, die in Ethereum existiert. Übrigens sagen einige, dass der Begriff \"Beacon-Kette\" wieder ausstirbt und missverstanden wird, aber ich benutze ihn wirklich gerne in Analogie zur \"Relay-Kette\", einem Begriff aus dem Fahrplan von Ethereum.",
  "And perhaps one more interesting story in this part of the lecture: so far, we can hardly imagine proper cross-chain messages between L2 networks in Ethereum. Maybe I missed something in the papers, but when you don't have an external ring and issues like collators, paravalidators, and data availability services are not resolved, thinking about how two L2 layers can communicate is challenging. Yet, in Polkadot, it exists. Even horizontally, through the relay chain, meaning directly, one can send a transaction securely from one parachain to another, without trusting any bridges between these two parachains. This is another crucial functionality that will likely need to be implemented at the level of connecting L2 networks. Smart contracts in Ethereum communicate well. We have created many chains of linked smart contracts, where one triggers another. With this, there is no problem. But when we say that almost all applications are moving to the L2 layer in a heterogeneous network, I hear that if you live in a specific area, you won't be able to get out. That's not the case at the level of parachains and implementation in Polkadot. Both architectures are worth watching, as, in my opinion, the engineering implementation follows the mainstream path of becoming a global computer. They differ slightly, but there are many similarities. There's an enormous amount of engineering work everywhere. As we see, human civilization, in the form of a multitude of researchers, engineers, and growing developers with significant resources for further development, is moving roughly in the same direction from the smallest early stage to probably some future establishment of the world's computer, all on the same tracks.": "Und vielleicht noch eine interessante Geschichte in diesem Teil der Vorlesung: Bisher können wir uns kaum vorstellen, dass es ordentliche Cross-Chain-Nachrichten zwischen L2-Netzwerken in Ethereum gibt. Vielleicht habe ich etwas in den Papieren übersehen, aber wenn man keinen externen Ring hat und Probleme wie Collators, Paravalidatoren und Datenverfügbarkeitsdienste nicht gelöst sind, ist es herausfordernd, darüber nachzudenken, wie zwei L2-Schichten kommunizieren können. Doch in Polkadot existiert das. Selbst horizontal, über die Relay-Kette, was bedeutet, dass man sicher eine Transaktion von einer Parachain zur anderen senden kann, ohne Brücken zwischen diesen beiden Parachains zu vertrauen. Dies ist eine weitere wichtige Funktionalität, die wahrscheinlich auf der Ebene der Verbindung von L2-Netzwerken implementiert werden muss. Smart Contracts in Ethereum kommunizieren gut. Wir haben viele Ketten von verknüpften Smart Contracts erstellt, bei denen einer den anderen auslöst. Dabei gibt es kein Problem. Aber wenn wir sagen, dass fast alle Anwendungen in ein heterogenes Netzwerk auf die L2-Ebene umziehen, höre ich, dass man, wenn man in einem bestimmten Bereich lebt, nicht herauskommen kann. Das ist nicht der Fall auf der Ebene der Parachains und der Implementierung in Polkadot. Beide Architekturen sind es wert, beobachtet zu werden, da meiner Meinung nach die technische Umsetzung dem Mainstream-Pfad folgt, ein globales Computer zu werden. Sie unterscheiden sich leicht, aber es gibt viele Ähnlichkeiten. Überall gibt es eine enorme Menge an Ingenieursarbeit. Wie wir sehen, bewegt sich die menschliche Zivilisation in Form einer Vielzahl von Forschern, Ingenieuren und wachsenden Entwicklern mit erheblichen Ressourcen für die weitere Entwicklung grob in die gleiche Richtung von der kleinsten Frühphase bis wahrscheinlich zur zukünftigen Einrichtung des Weltcomputers, alles auf den gleichen Gleisen.",
  "Part 1: The Idea of a World Computer": "Teil 1: Die Idee eines Weltcomputers",
  "This is the first part of a four-part lecture titled \"World Computer in Your Home.\" In the first part, titled \"The Idea of a World Computer,\" I want to analyze and share my own reflections that have, in a broader historical context, gathered around the hashtag \"world computer.\"": "Dies ist der erste Teil einer vierstündigen Vorlesung mit dem Titel \"Weltcomputer in Ihrem Zuhause\". Im ersten Teil mit dem Titel \"Die Idee eines Weltcomputers\" möchte ich meine eigenen Überlegungen analysieren und teilen, die sich im weiteren historischen Kontext um den Hashtag \"Weltcomputer\" gesammelt haben.",
  "To begin with, let's try to gather a generalized understanding of what a world computer is, without delving into terminology or specific technical details. If you take your mobile phone in hand and look at the icons, you can notice that practically every application on the phone has two major segments or areas of operation.": "Lassen Sie uns zunächst versuchen, ein allgemeines Verständnis dafür zu gewinnen, was ein Weltcomputer ist, ohne uns in Terminologie oder spezifische technische Details zu vertiefen. Wenn Sie Ihr Mobiltelefon in die Hand nehmen und sich die Symbole ansehen, können Sie feststellen, dass praktisch jede Anwendung auf dem Telefon zwei Hauptsegmente oder Betriebsbereiche hat.",
  "The first is the local part, meaning, for example, your calculator or notes application. This is a completely local application that requires almost no external communication. Although even applications like the notes app on an iPhone are a bit more than that, let's focus on the more austere Open Source side of applications for Android phones, so to speak.": "Der erste ist der lokale Teil, das bedeutet zum Beispiel Ihre Taschenrechner- oder Notizenanwendung. Dies ist eine vollständig lokale Anwendung, die praktisch keine externe Kommunikation erfordert. Obwohl sogar Anwendungen wie die Notizen-App auf einem iPhone etwas mehr sind, als das, wollen wir uns auf die strengere Open-Source-Seite von Anwendungen für Android-Telefone konzentrieren, sozusagen.",
  "The second part requires cloud infrastructure, and here, when the question of cloud infrastructure arises, a multitude of quite complex stories begins: who owns this cloud infrastructure, what capabilities do developers have to add features to an application, and in general, how does the user own this application? What capabilities and responsibilities does the user have when dealing with an application that exists not only on their phone but also in some infrastructure beyond their pocket or palm? The world computer is precisely one example of how the developer community responds to these obvious questions. Obvious questions about creating higher-quality applications for your mobile phone, laptop, server, and any other smart device that needs to connect to the network and obtain knowledge from there.": "Der zweite Teil erfordert Cloud-Infrastruktur, und hier, wenn die Frage nach der Cloud-Infrastruktur aufkommt, beginnen eine Vielzahl von ziemlich komplexen Geschichten: Wer besitzt diese Cloud-Infrastruktur, welche Möglichkeiten haben Entwickler, Funktionen zu einer Anwendung hinzuzufügen, und im Allgemeinen, wie besitzt der Benutzer diese Anwendung? Welche Möglichkeiten und Verantwortlichkeiten hat der Benutzer, wenn er mit einer Anwendung umgeht, die nicht nur auf seinem Telefon existiert, sondern auch in einer Infrastruktur jenseits seiner Tasche oder Handfläche? Der Weltcomputer ist genau ein Beispiel dafür, wie die Entwicklergemeinschaft auf diese offensichtlichen Fragen reagiert. Offensichtliche Fragen zur Schaffung von qualitativ hochwertigeren Anwendungen für Ihr Mobiltelefon, Laptop, Server und jedes andere intelligente Gerät, das eine Verbindung zum Netzwerk herstellen und Wissen von dort beziehen muss.",
  "The world computer is, accordingly, the same cloud, the same infrastructure that exists on the internet, with which developers can interact and publish their applications. As a user, you can install, download, and run them on your PC. However, with one interesting, crucial feature: no one actually owns the infrastructure or cloud of the world computer. There is no specific company, jurisdiction, or individual on Earth who can determine and say whether you can publish your application there or not, whether you have the right to access this world computer infrastructure to receive the provided service. Therefore, the world computer is a cloud in which any developer can place their application, and any user with access solely to the internet network and not to a specific IP address behind a firewall can use the application by paying for computations from their pocket.": "Der Weltcomputer ist demnach die gleiche Cloud, die gleiche Infrastruktur, die im Internet existiert, mit der Entwickler interagieren und ihre Anwendungen veröffentlichen können. Als Benutzer können Sie sie auf Ihrem PC installieren, herunterladen und ausführen. Allerdings mit einem interessanten, entscheidenden Merkmal: Niemand besitzt tatsächlich die Infrastruktur oder Cloud des Weltcomputers. Es gibt kein spezifisches Unternehmen, keine Gerichtsbarkeit oder Einzelperson auf der Erde, die bestimmen und sagen kann, ob Sie Ihre Anwendung dort veröffentlichen können oder nicht, ob Sie das Recht haben, auf diese Weltcomputerinfrastruktur zuzugreifen, um den bereitgestellten Service zu erhalten. Daher ist der Weltcomputer eine Cloud, in der jeder Entwickler seine Anwendung platzieren kann, und jeder Benutzer mit Zugang ausschließlich zum Internetnetzwerk und nicht zu einer spezifischen IP-Adresse hinter einer Firewall die Anwendung nutzen kann, indem er für Berechnungen aus der eigenen Tasche bezahlt.",
  "Here's the story in a generalized format. There is no mention of \"blockchain,\" no mention of \"smart contracts,\" but these concepts are underneath. Let's still acknowledge: a world computer is a cloud infrastructure that is sovereign, owned by no one, allowing each developer to avoid censorship from platform owners offering app downloads. It also prevents users from being in a situation where they don't understand how an app works on their phone. In my opinion, these are important and cool features deserving respect and attention from those who want to create more futuristic, cooler applications. This is precisely what my team and I have been doing for eight years, choosing perhaps the most challenging area - creating services for robotics on the world computer, which seems to be right outside your door, quietly scraping and saying, \"I want to come into your home.\"": "Hier ist die Geschichte in einem verallgemeinerten Format. Es wird nicht von \"Blockchain\" oder \"Smart Contracts\" gesprochen, aber diese Konzepte liegen darunter. Lassen Sie uns dennoch anerkennen: Ein Weltcomputer ist eine Cloud-Infrastruktur, die souverän ist, niemandem gehört und es jedem Entwickler ermöglicht, Zensur von Plattformbesitzern zu vermeiden, die App-Downloads anbieten. Es verhindert auch, dass Benutzer in die Situation geraten, dass sie nicht verstehen, wie eine App auf ihrem Telefon funktioniert. Meiner Meinung nach sind dies wichtige und coole Funktionen, die Respekt und Aufmerksamkeit verdienen von denen, die futuristischere, coolere Anwendungen erstellen möchten. Genau das ist es, was mein Team und ich seit acht Jahren tun, indem wir vielleicht den anspruchsvollsten Bereich wählen - die Erstellung von Diensten für Robotik auf dem Weltcomputer, der direkt vor Ihrer Tür zu stehen scheint und leise sagt: \"Ich möchte in Ihr Zuhause kommen.\"",
  "Now, let's move on to a timeline and look through my personal experience at how the concept of the world computer evolved. First, let's go back to 2012. This year is notable because Bitcoin already exists as a global internet service, accessible to everyone, not owned by anyone specific. By 2012, besides Bitcoin, its so-called forks start appearing. One of the most well-known is Litecoin.": "Nun, lassen Sie uns einen Zeitplan erstellen und durch meine persönliche Erfahrung betrachten, wie sich das Konzept des Weltcomputers entwickelt hat. Zuerst gehen wir zurück ins Jahr 2012. Dieses Jahr ist bemerkenswert, weil Bitcoin bereits als globaler Internetdienst existiert, der für jeden zugänglich ist und niemandem spezifisch gehört. Bis 2012 beginnen neben Bitcoin auch seine sogenannten Forks aufzutauchen. Einer der bekanntesten ist Litecoin.",
  "Litecoin is notable because its developer did the most important work for the entire community. He collected the most crucial configurable variables or constants from different parts of Bitcoin's code after the protocol was launched. This allowed specifying block generation time, block reward, and, statistically, Litecoin is more frequently forked than Bitcoin. When we say \"fork of Bitcoin,\" I can confidently say that, in most cases, it will be a fork of Litecoin.": "Litecoin ist bemerkenswert, weil sein Entwickler die wichtigste Arbeit für die gesamte Community geleistet hat. Er sammelte die wichtigsten konfigurierbaren Variablen oder Konstanten aus verschiedenen Teilen des Bitcoin-Codes, nachdem das Protokoll gestartet wurde. Dies ermöglichte die Spezifizierung der Blockgenerierungszeit, der Blockbelohnung, und statistisch gesehen wird Litecoin häufiger geforkt als Bitcoin. Wenn wir von einem \"Fork von Bitcoin\" sprechen, kann ich mit Zuversicht sagen, dass es sich in den meisten Fällen um einen Fork von Litecoin handeln wird.",
  "Namecoin is also a fork of Bitcoin, and if memory serves me right, it was initially a direct fork from Bitcoin, and then Litecoin appeared a few months later in 2011. However, Namecoin turned out to be a bit different, paving the way for many developers mentally on where ideas underlying Bitcoin's internet service could evolve. Namecoin went beyond being just a coin; it could store identity as a database and allow an internet service to place your domain name. This was the first example where an internet service spawned from Bitcoin could have a different nature, not just like Litecoin with fast transactions but the ability to pay for storing certain information with its internal currency, an internal token. For example, the name in the .bit domain zone.": "Namecoin ist auch ein Fork von Bitcoin, und wenn mich meine Erinnerung nicht täuscht, war es ursprünglich ein direkter Fork von Bitcoin, und dann erschien Litecoin ein paar Monate später im Jahr 2011. Namecoin stellte sich jedoch als etwas anders heraus und ebnete vielen Entwicklern den Weg, wo die Ideen, die dem Internetdienst von Bitcoin zugrunde liegen, sich entwickeln könnten. Namecoin ging über das bloße Sein einer Münze hinaus; es konnte Identität als Datenbank speichern und einem Internetdienst ermöglichen, Ihren Domainnamen zu platzieren. Dies war das erste Beispiel, bei dem ein Internetdienst, der aus Bitcoin entstanden ist, eine andere Natur haben könnte, nicht nur wie Litecoin mit schnellen Transaktionen, sondern auch die Möglichkeit, bestimmte Informationen mit seiner internen Währung, einem internen Token, zu speichern. Zum Beispiel der Name in der .bit-Domänenzone.",
  "Developers worldwide were experimenting with Bitcoin, mostly creating forks, making them faster, cheaper electronic cash. Alongside this, the first services appeared, seeing opportunities not only in financial applications but also in cross-industrial applications in other areas like Namecoin. Namecoin provided the first globally accessible and unowned internet service through which you could launch your website without being under the jurisdiction of a specific organization but within a distributed globally accessible network. This moment is crucial for us to move on to the early precursors of the world computer's ideas.": "Entwickler auf der ganzen Welt experimentierten mit Bitcoin, hauptsächlich durch die Erstellung von Forks, um sie zu schnelleren, günstigeren elektronischen Zahlungsmitteln zu machen. Nebenbei entstanden die ersten Dienste, die Chancen nicht nur in finanziellen Anwendungen sahen, sondern auch in branchenübergreifenden Anwendungen in anderen Bereichen wie Namecoin. Namecoin bot den ersten weltweit zugänglichen und nicht im Besitz befindlichen Internetdienst an, über den Sie Ihre Website starten konnten, ohne unter die Gerichtsbarkeit einer bestimmten Organisation zu fallen, sondern innerhalb eines verteilten weltweit zugänglichen Netzwerks. Dieser Moment ist entscheidend für uns, um zu den frühen Vorläufern der Ideen des Weltcomputers überzugehen.",
  "The first practical ideas of the world computer emerged in 2014, two years after the appearance of the first wave of Bitcoin forks and the creation of meaningful services dedicated not only to electronic cash but also exploring broader themes. We encounter ideas that precede the launch of Ethereum.": "Die ersten praktischen Ideen des Weltcomputers tauchten 2014 auf, zwei Jahre nach dem Erscheinen der ersten Welle von Bitcoin-Forks und der Schaffung bedeutungsvoller Dienste, die sich nicht nur auf elektronisches Bargeld konzentrierten, sondern auch breitere Themen erforschten. Wir begegnen Ideen, die der Einführung von Ethereum vorausgehen.",
  "In 2014, at several meetups worldwide, in Miami and, I believe, in Europe, Vitalik Buterin articulated sensible ideas. He suggests that we can develop not just a set of internet services that essentially function as a Swiss army knife, right? We can develop a virtual machine. Those with an education in Computer Science probably remember what an infinite tape is in Turing machines, and if we go back to the theory of computational machines, we probably recall the theoretical origins of creating our personal computers, essentially the server infrastructure we have today. It's interesting that, fifty years after the development of von Neumann architecture and the complete Turing machine theory, and with the dawn of internet technologies only by 2014, and only after experiments with Bitcoin, the first idea emerges on our planet of creating a fully virtual computational machine based on the same theory that has been tested in the computer science industry for the past 50 years. The mechanics are the same as when creating any personal computer or server in a data center, but based more on achievements in internet technologies and the achievements of the world that will later be called Web3.": "Im Jahr 2014, bei mehreren Treffen weltweit, in Miami und, glaube ich, in Europa, äußerte Vitalik Buterin vernünftige Ideen. Er schlägt vor, dass wir nicht nur eine Reihe von Internetdiensten entwickeln können, die im Wesentlichen als Schweizer Taschenmesser fungieren, oder? Wir können eine virtuelle Maschine entwickeln. Diejenigen mit einer Ausbildung in Informatik erinnern sich wahrscheinlich daran, was ein unendliches Band in Turing-Maschinen ist, und wenn wir zur Theorie der Rechenmaschinen zurückkehren, erinnern wir uns wahrscheinlich an die theoretischen Ursprünge der Schaffung unserer persönlichen Computer, im Wesentlichen der Serverinfrastruktur, die wir heute haben. Es ist interessant, dass, fünfzig Jahre nach der Entwicklung der von-Neumann-Architektur und der vollständigen Turing-Maschinen-Theorie und mit dem Aufkommen von Internettechnologien erst 2014 und nur nach Experimenten mit Bitcoin die erste Idee auf unserem Planeten entsteht, eine vollständig virtuelle Rechenmaschine zu schaffen, die auf derselben Theorie basiert, die in der Informatikindustrie in den letzten 50 Jahren getestet wurde. Die Mechanik ist die gleiche wie bei der Erstellung eines beliebigen persönlichen Computers oder Servers in einem Rechenzentrum, basierend jedoch mehr auf den Errungenschaften in den Internettechnologien und den Errungenschaften der Welt, die später als Web3 bezeichnet werden.",
  "Ethereum itself is not a Swiss army knife, not a set of specific internet services. It is, in the direct sense, a cloud, a computational machine. What lies at its core, I will tell you in the next lecture. Here, the most important thing for us is to focus on where the idea of Ethereum began. It started with the realization that, in two years, dozens of different internet services were invented that were interesting because they were globally accessible, available without censorship for developers to deploy. Users could use them only with an internal currency. However, what was not liked in all these concepts was that almost every interesting service required its own massive distributed infrastructure. Unlike familiar internet services, you couldn't just launch your globally accessible infrastructure if you were a very small person or a small team because such a network would be vulnerable, and the service itself would become unsafe. To overcome the problems that were side effects or negative externalities of creating your own globally accessible sovereign internet service, the concept of Ethereum emerged. Ethereum, as a full-fledged cloud capable of handling any formalized computation, allows you to write your program code, a complete program essentially, and run it in the same blockchain alongside hundreds of other applications. This possibility, sounding from the small stages of 2014, naturally captivated the minds of many and seemed absolutely logical for someone with a basic education in Computer Science. If you could understand what Turing completeness was by 2014, if you could envision the historical theory of creating a personal computer, you would definitely not overlook the Ethereum whitepaper and would say that this is exactly what the entire developer community needs.": "Ethereum selbst ist kein Schweizer Taschenmesser, kein Satz spezifischer Internetdienste. Es ist im direkten Sinne eine Cloud, eine Rechenmaschine. Was sich im Kern befindet, werde ich Ihnen in der nächsten Vorlesung erzählen. Hier ist das Wichtigste für uns, uns darauf zu konzentrieren, wo die Idee von Ethereum begann. Es begann mit der Erkenntnis, dass in zwei Jahren Dutzende verschiedener Internetdienste erfunden wurden, die interessant waren, weil sie global zugänglich waren, ohne Zensur für Entwickler bereitzustellen. Benutzer konnten sie nur mit einer internen Währung verwenden. Was jedoch in all diesen Konzepten nicht mochte, war, dass fast jeder interessante Dienst seine eigene massive verteilte Infrastruktur erforderte. Im Gegensatz zu vertrauten Internetdiensten konnten Sie nicht einfach Ihre global zugängliche Infrastruktur starten, wenn Sie eine sehr kleine Person oder ein kleines Team waren, da ein solches Netzwerk anfällig wäre und der Dienst selbst unsicher würde. Um die Probleme zu überwinden, die Nebenwirkungen oder negative Externalitäten der Schaffung Ihres eigenen global zugänglichen souveränen Internetdienstes waren, entstand das Konzept von Ethereum. Ethereum, als vollwertige Cloud, die in der Lage ist, jede formalisierte Berechnung zu bewältigen, ermöglicht es Ihnen, Ihren Programmcode zu schreiben, im Wesentlichen ein vollständiges Programm, und es im selben Blockchain neben Hunderten anderer Anwendungen auszuführen. Diese Möglichkeit, die von den kleinen Stufen des Jahres 2014 klingt, fesselte natürlich die Köpfe vieler und schien für jemanden mit einer grundlegenden Ausbildung in Informatik absolut logisch. Wenn Sie bis 2014 verstehen konnten, was Turing-Vollständigkeit war, wenn Sie sich die historische Theorie der Schaffung eines persönlichen Computers vorstellen konnten, würden Sie definitiv nicht das Ethereum-Whitepaper übersehen und sagen, dass dies genau das ist, was die gesamte Entwicklergemeinschaft braucht.",
  "I believe the year 2014 and Ethereum mark the first, though not explicitly named, instances of the concept of a global computer. It started with the idea that we don't need a Swiss knife; instead, we need infrastructure or a universal cloud that addresses global-level security challenges. Developers, at a low cost, should be able to deploy their applications there without concerning themselves with issues like securing the network or creating a network of providers for this computer or your specific internet service.": "Ich glaube, das Jahr 2014 und Ethereum markieren die ersten, wenn auch nicht explizit benannten, Beispiele für das Konzept eines globalen Computers. Es begann mit der Idee, dass wir kein Schweizer Messer brauchen; stattdessen brauchen wir Infrastruktur oder eine universelle Cloud, die globale Sicherheitsherausforderungen angeht. Entwickler sollten dort ihre Anwendungen zu geringen Kosten bereitstellen können, ohne sich mit Problemen wie der Sicherung des Netzwerks oder der Schaffung eines Netzwerks von Anbietern für diesen Computer oder Ihren spezifischen Internetdienst befassen zu müssen.",
  "In 2015, Ethereum was effectively launched. From that moment onwards, even until 2020, I haven't encountered significant counterarguments against the idea of creating not just specific internet services but embracing and developing the concept of a virtual computer, virtual server, cloud, or a global computer, as I prefer to call it.": "Im Jahr 2015 wurde Ethereum effektiv gestartet. Von diesem Moment an, auch bis 2020, bin ich auf keine bedeutenden Gegenargumente gegen die Idee gestoßen, nicht nur spezifische Internetdienste zu schaffen, sondern das Konzept eines virtuellen Computers, virtuellen Servers, einer Cloud oder eines globalen Computers zu umarmen und zu entwickeln, wie ich es bevorzuge, ihn zu nennen.",
  "Various variations emerge, perhaps some remember the then-popular EOS suggesting a slightly different consumption paradigm. Despite my personal aversion to that project, with its 21st validator and all, it seemed sufficient for many. But it introduced the idea that owning tokens grants you a portion of bandwidth, which, in the realm of Robonomics architecture, remains interesting to me to this day.": "Verschiedene Variationen tauchen auf, vielleicht erinnern sich einige an das damals beliebte EOS, das einen etwas anderen Verbrauchsparadigma vorschlug. Trotz meiner persönlichen Abneigung gegen dieses Projekt mit seinen 21 Validatoren schien es vielen ausreichend. Aber es führte die Idee ein, dass der Besitz von Token Ihnen einen Teil der Bandbreite gewährt, was im Bereich der Robonomics-Architektur für mich bis heute interessant bleibt.",
  "Simultaneously, other ideas on how to modernize the Ethereum network arise. Projects like Definity, Solana, and others come into play. Around the same time, Gavin Wood introduces Polkadot, who assisted Vitalik in creating Ethereum. From a multitude of technological projects between 2015 and 2020, we move from a race to create individual internet service variants to witnessing, on a communication protocol level, the emergence of something like Ethereum killers. Many projects started under this slogan, taking the idea of a unified cloud for multiple internet services and modifying some aspects. For instance, EOS proposed an alternative utilization scheme, where only token-backed ownership allowed access to bandwidth. There were projects where the programming language for writing code was more interesting. For example, during a hackathon for BMW, when we won with an implementation on Ethereum, the automaker immediately stated that we wouldn't go any further unless we had formally verified contracts, which was impossible to achieve on Ethereum at that time.": "Gleichzeitig entstehen andere Ideen, wie man das Ethereum-Netzwerk modernisieren kann. Projekte wie Definity, Solana und andere kommen ins Spiel. Zur gleichen Zeit stellt Gavin Wood Polkadot vor, der Vitalik bei der Schaffung von Ethereum geholfen hat. Aus einer Vielzahl von technologischen Projekten zwischen 2015 und 2020 bewegen wir uns von einem Wettlauf zur Schaffung einzelner Internetdienstvarianten hin zu der Beobachtung, auf einer Kommunikationsprotokollebene das Aufkommen von etwas Ähnlichem wie Ethereum-Killer zu erleben. Viele Projekte starteten unter diesem Slogan und nahmen die Idee einer vereinheitlichten Cloud für mehrere Internetdienste auf und modifizierten einige Aspekte. Zum Beispiel schlug EOS ein alternatives Nutzungsmodell vor, bei dem nur tokenbasiertes Eigentum den Zugang zur Bandbreite ermöglichte. Es gab Projekte, bei denen die Programmiersprache zum Schreiben von Code interessanter war. Zum Beispiel, während eines Hackathons für BMW, als wir mit einer Implementierung auf Ethereum gewannen, erklärte der Automobilhersteller sofort, dass wir nicht weiterkommen würden, es sei denn, wir hätten formell verifizierte Verträge, was zu dieser Zeit auf Ethereum unmöglich war.",
  "At this moment, as you read about the ideas of Eternity and other networks, you may think, \"I should try working with them too.\" Service developers understood this, as did, as I mentioned, projects like Definity, which recently launched the World Computer and is gaining traction. Simultaneously, the idea of Polkadot emerges as a heterogeneous multi-chain framework. Ethereum, around the mid-2010s, also received a roadmap for scalability and development. By 2024, almost all concepts converge on the idea of having not just one database or blockchain but a multitude. Various transaction processing methods, two-layer consensus algorithms, optimistic majority approaches, and a plethora of technical implementation variations emerge, all aiming at the same global computer concept.": "In diesem Moment, während Sie über die Ideen von Eternity und anderen Netzwerken lesen, könnten Sie denken: \"Ich sollte auch versuchen, mit ihnen zu arbeiten.\" Dienstentwickler haben dies verstanden, ebenso wie, wie ich erwähnte, Projekte wie Definity, die kürzlich den World Computer gestartet haben und an Fahrt gewinnen. Gleichzeitig entsteht die Idee von Polkadot als heterogenes Multi-Chain-Framework. Ethereum erhielt um die Mitte der 2010er Jahre auch einen Fahrplan für Skalierbarkeit und Entwicklung. Bis 2024 konvergieren fast alle Konzepte auf die Idee, nicht nur eine Datenbank oder Blockchain zu haben, sondern eine Vielzahl. Verschiedene Transaktionsverarbeitungsmethoden, Zwei-Schichten-Konsensalgorithmen, optimistische Mehrheitsansätze und eine Vielzahl von technischen Implementationsvariationen entstehen, die alle auf dasselbe globale Computerkonzept abzielen.",
  "Let's now go through a timeline snapshot:": "Lassen Sie uns nun einen Zeitstrahl-Schnappschuss durchgehen:",
  "**2009-2012**: Emergence of the first globally accessible internet service for electronic cash - Bitcoin.": "**2009-2012**: Entstehung des ersten global zugänglichen Internetdienstes für elektronisches Bargeld - Bitcoin.",
  "**Early 2012**: The first fork war occurs, with projects emerging to replicate similar services. Some multi-billion projects create their forks. Simultaneously, projects like Namecoin propose interesting ideas.": "**Frühes Jahr 2012**: Der erste Fork-Krieg findet statt, bei dem Projekte entstehen, um ähnliche Dienste zu replizieren. Einige Milliardenprojekte erstellen ihre Forks. Gleichzeitig schlagen Projekte wie Namecoin interessante Ideen vor.",
  "**2014**: The concept of a world computer emerges, requiring a deep understanding of computer science theory and immersion in Bitcoin's development.": "**2014**: Das Konzept eines Weltcomputers entsteht, das ein tiefes Verständnis der Informatiktheorie und eine Vertiefung in die Entwicklung von Bitcoin erfordert.",
  "**2015-2020**: The concept moves from theory to practice. Modifications and variations of Ethereum arise, introducing different ideas with varying degrees of quality. The term \"World Computer\" became established.": "**2015-2020**: Das Konzept geht von der Theorie zur Praxis über. Modifikationen und Variationen von Ethereum entstehen, die verschiedene Ideen mit unterschiedlicher Qualität einführen. Der Begriff \"Weltcomputer\" etablierte sich.",
  "**2024**: We reach the World Computer, a term now well-established, marking the transition from a simple calculator on your phone to a globally accessible institution. The idea of the World Computer encompasses future money, programming money, storage for identification records, and important documents.": "**2024**: Wir erreichen den Weltcomputer, ein Begriff, der mittlerweile gut etabliert ist und den Übergang von einem einfachen Taschenrechner auf Ihrem Telefon zu einer global zugänglichen Institution markiert. Die Idee des Weltcomputers umfasst zukünftiges Geld, Programmierungsgeld, Speicherung für Identifikationsunterlagen und wichtige Dokumente.",
  "In conclusion, from a simple calculator to a globally accessible institution, the idea of the World Computer has evolved. It's seen as a place for the future of money and the storage of vital records. The concept of a World Computer has progressed from theoretical discussions to practical engineering implementations. In the next lecture, the discussion will delve into what a World Computer actually represents. It is fundamentally a state transition function, a concept to be explored further in the upcoming lecture, emphasizing its importance and the need to safeguard it.": "Zusammenfassend hat sich die Idee des Weltcomputers von einem einfachen Taschenrechner zu einer global zugänglichen Institution entwickelt. Er wird als Ort für die Zukunft des Geldes und die Speicherung wichtiger Unterlagen angesehen. Das Konzept eines Weltcomputers hat sich von theoretischen Diskussionen zu praktischen technischen Umsetzungen entwickelt. In der nächsten Vorlesung wird die Diskussion darüber vertieft, was ein Weltcomputer tatsächlich repräsentiert. Es handelt sich im Wesentlichen um eine Zustandsübergangsfunktion, ein Konzept, das in der kommenden Vorlesung weiter erkundet werden soll, wobei seine Bedeutung und die Notwendigkeit, sie zu schützen, betont werden.",
  "Part 2: The Heart of the World Computer": "Teil 2: Das Herz des Weltcomputers",
  "What lies at the core of projects like Ethereum or Polkadot, or any other web3 project claiming the title of the world computer, and why does the comparison with the heart in the human body fit so well into the abstract architecture of the world computer?": "Was liegt im Kern von Projekten wie Ethereum oder Polkadot oder jedem anderen Web3-Projekt, das den Titel des Weltcomputers beansprucht, und warum passt der Vergleich mit dem Herzen im menschlichen Körper so gut in die abstrakte Architektur des Weltcomputers?",
  "Let's try to understand these questions in this part of the lecture, and to begin with, we'll have to break the chains of Bitcoin maximalists a bit. Most likely, you've already read one or several popular science articles dedicated to Bitcoin in your life, and the main thing that is practically noted everywhere is the three main advantages of Bitcoin as electronic cash:": "Lassen Sie uns in diesem Teil des Vortrags versuchen, diese Fragen zu verstehen, und um anzufangen, müssen wir die Ketten der Bitcoin-Maximalisten ein wenig brechen. Wahrscheinlich haben Sie bereits einen oder mehrere populärwissenschaftliche Artikel über Bitcoin in Ihrem Leben gelesen, und das Hauptthema, das praktisch überall festgestellt wird, sind die drei Hauptvorteile von Bitcoin als elektronisches Bargeld:",
  "Censorship resistance": "Zensurresistenz",
  "Immutability of data stored in the Bitcoin blockchain": "Unveränderlichkeit der in der Bitcoin-Blockchain gespeicherten Daten",
  "Transparency of transactions": "Transparenz von Transaktionen",
  "Let's quickly go through each of these properties, and most importantly, at the end, we'll need to step back a bit from them, as the world computer inherits them as some kind of successor to Bitcoin.": "Lassen Sie uns schnell jede dieser Eigenschaften durchgehen, und vor allem müssen wir am Ende ein wenig davon zurücktreten, da der Weltcomputer sie als eine Art Nachfolger von Bitcoin erbt.",
  "**Firstly**, immutability of data. Of course, this property, from the perspective of electronic cash, has significant advantages and importance. After you send a transaction or receive bitcoins, after one or two blocks, you gradually begin to feel the immutability of data in the blockchain. In the first 15 minutes, you can observe, using a blockchain explorer, how the transaction should settle. You already see it in the network, but it is not finalized, meaning these bitcoins are not yet in your account. However, after several blocks, there is confidence that these funds will not disappear from your account. As time passes, the probability of values being somehow overwritten from your account becomes almost negligible, practically reducing to zero. This is our property of data immutability. How cool it is when you can share information with the recipient, send them a link to the blockchain explorer, and you don't need to obtain any paper or document from the bank stating that you sent a payment on a certain date and time - this is the second advantage of Bitcoin that is very helpful in practice and is probably the most pleasant perk when comparing a bank transfer and a Bitcoin transfer.": "**Erstens**, Unveränderlichkeit von Daten. Natürlich hat diese Eigenschaft aus der Perspektive von elektronischem Bargeld erhebliche Vorteile und Bedeutung. Nachdem Sie eine Transaktion gesendet oder Bitcoins erhalten haben, beginnen Sie nach einem oder zwei Blöcken allmählich die Unveränderlichkeit der Daten in der Blockchain zu spüren. In den ersten 15 Minuten können Sie mit einem Blockchain-Explorer beobachten, wie die Transaktion abgewickelt werden soll. Sie sehen es bereits im Netzwerk, aber es ist noch nicht abgeschlossen, was bedeutet, dass diese Bitcoins noch nicht auf Ihrem Konto sind. Nach mehreren Blöcken besteht jedoch die Gewissheit, dass diese Mittel nicht von Ihrem Konto verschwinden werden. Mit der Zeit wird die Wahrscheinlichkeit, dass Werte irgendwie von Ihrem Konto überschrieben werden, praktisch vernachlässigbar, fast auf null reduziert. Dies ist unsere Eigenschaft der Datenunveränderlichkeit. Wie cool ist es, wenn Sie Informationen mit dem Empfänger teilen können, ihnen einen Link zum Blockchain-Explorer senden können und keine Papiere oder Dokumente von der Bank benötigen, die besagen, dass Sie eine Zahlung an einem bestimmten Datum und zu einer bestimmten Zeit gesendet haben - dies ist der zweite Vorteil von Bitcoin, der in der Praxis sehr hilfreich ist und wahrscheinlich der angenehmste Bonus ist, wenn man eine Banküberweisung und eine Bitcoin-Überweisung vergleicht.",
  "**Secondly**, transparency of transactions. There is practically no fear when using Bitcoin that you will find yourself in a region of the world or connected to an internet provider through which you cannot perform operations with the Bitcoin network. There are practically no options other than locking you in a dark room without internet access so that you cannot use the Bitcoin network.": "**Zweitens**, Transparenz von Transaktionen. Es besteht praktisch keine Angst, wenn Sie Bitcoin verwenden, dass Sie sich in einer Region der Welt befinden oder mit einem Internetanbieter verbunden sind, über den Sie keine Operationen mit dem Bitcoin-Netzwerk durchführen können. Es gibt praktisch keine Optionen außerhalb davon, Sie in einem dunklen Raum ohne Internetzugang einzusperren, damit Sie das Bitcoin-Netzwerk nicht nutzen können.",
  "These three properties are, of course, very important. Now, in order to understand the question \"What is at the heart of the world computer,\" we will need to step back from them, abstract ourselves, and make a small leap of faith, a jump, approximately, 100 years back to the 1930s.": "Diese drei Eigenschaften sind natürlich sehr wichtig. Um die Frage \"Was ist das Herz des Weltcomputers\" zu verstehen, müssen wir uns von ihnen abstrahieren, einen kleinen Glaubenssprung machen, ungefähr 100 Jahre zurück in die 1930er Jahre.",
  "In 1936, Alan Turing made a proposal to the scientific community to solve the formalization problem and, in fact, a more qualitative description of such a concept as an algorithm. Interestingly, from Alan Turing's proposal, the architecture and development of all computer science in the future emerged, but he in no way pursued the idea of creating a personal computer, and he knew nothing about data centers or clouds. His task was to provide a way to define an algorithm in the context of the tasks faced by mathematicians. It's a fascinating picture over the span of a century that the achievement of computer science turns out to be a by-product of a rather mundane problem among mathematicians.": "Im Jahr 1936 machte Alan Turing einen Vorschlag an die wissenschaftliche Gemeinschaft, um das Formalisierungsproblem zu lösen und tatsächlich eine qualitativere Beschreibung eines solchen Konzepts wie eines Algorithmus zu liefern. Interessanterweise entstand aus Alan Turings Vorschlag die Architektur und Entwicklung aller Informatik in der Zukunft, aber er verfolgte keineswegs die Idee, einen Personalcomputer zu schaffen, und wusste nichts über Rechenzentren oder Clouds. Seine Aufgabe bestand darin, einen Weg zu finden, einen Algorithmus im Kontext der Aufgaben, denen sich Mathematiker gegenübersahen, zu definieren. Es ist ein faszinierendes Bild über die Spanne eines Jahrhunderts, dass die Errungenschaft der Informatik sich als Nebenprodukt eines eher banalen Problems unter Mathematikern herausstellt.",
  "Let's delve into what Alan Turing proposed, without delving too deeply into algorithm theory and the purpose for which he suggested it. Alan Turing proposed the Turing machine, which represents an infinite tape (we can call it memory cells to make it easier), traversed by a reading and writing head. This head, positioned over a certain cell, can read data, apply some simple operations to them, and write new values.": "Lassen Sie uns in das eintauchen, was Alan Turing vorgeschlagen hat, ohne zu tief in die Algorithmustheorie und den Zweck einzutauchen, für den er es vorgeschlagen hat. Alan Turing schlug die Turing-Maschine vor, die ein unendliches Band darstellt (wir können es Speicherzellen nennen, um es einfacher zu machen), das von einem Lese- und Schreibkopf durchlaufen wird. Dieser Kopf, der über einer bestimmten Zelle positioniert ist, kann Daten lesen, einige einfache Operationen auf sie anwenden und neue Werte schreiben.",
  "Today, when you hear phrases like this, it might seem to you: \"Well, yes, it's a hard drive, a computer, or something like that.\" That's absolutely correct. This description gave rise to the first computer architecture. However, the main task of the Turing machine was to provide a means of representing a system or entity capable of performing any formalized computations. One can imagine a box or room, even filled with lamps, into which you insert your punch card, card, or transmit a Bluetooth signal, and the machine starts working, performing simple operations that ultimately solve your problem. Thus, the Turing machine is a universal computational mechanism that primarily solves the universal and essential task of providing a mechanism through which any simple computation or, more accurately, any formalized computation can be performed—computations that can be decomposed into the language of mathematics": "Heutzutage, wenn Sie Sätze wie diesen hören, mag es Ihnen so erscheinen: \"Nun ja, es ist eine Festplatte, ein Computer oder so etwas.\" Das ist absolut korrekt. Diese Beschreibung gab Anlass zur ersten Computerarchitektur. Die Hauptaufgabe der Turing-Maschine bestand jedoch darin, ein Mittel zur Darstellung eines Systems oder einer Entität bereitzustellen, die in der Lage ist, jede formalisierte Berechnung durchzuführen. Man kann sich eine Box oder einen Raum vorstellen, sogar gefüllt mit Lampen, in die Sie Ihre Lochkarte einlegen, Karte oder ein Bluetooth-Signal übertragen, und die Maschine beginnt zu arbeiten, führt einfache Operationen durch, die letztendlich Ihr Problem lösen. Somit ist die Turing-Maschine ein universeller Berechnungsmechanismus, der in erster Linie die universelle und wesentliche Aufgabe löst, einen Mechanismus bereitzustellen, durch den jede einfache Berechnung oder genauer gesagt, jede formalisierte Berechnung durchgeführt werden kann - Berechnungen, die in die Sprache der Mathematik zerlegt werden können",
  "In essence, the task of the last 100 years, after finding some solution in the field of mathematics, was precisely to give it a physical form, to find the set of transistors that could be placed on a board, learn how to solder them all, reduce the processes of the computing processor, and so on. No wonder that the theory from 1936 finds application in 2014 for the ideas of the world computer. These 100 years were occupied, in general, in another area—the field of physically implementing this computer.": "Im Wesentlichen bestand die Aufgabe der letzten 100 Jahre darin, nachdem eine Lösung im Bereich der Mathematik gefunden wurde, genau diese in eine physische Form zu bringen, den Satz von Transistoren zu finden, die auf einer Platine platziert werden konnten, zu lernen, wie man sie alle löten kann, die Prozesse des Rechenprozessors zu reduzieren und so weiter. Kein Wunder, dass die Theorie von 1936 im Jahr 2014 für die Ideen des Weltcomputers Anwendung findet. Diese 100 Jahre waren im Allgemeinen in einem anderen Bereich beschäftigt - dem Bereich der physischen Implementierung dieses Computers.",
  "When the planet became saturated, and we had personal computers, computational machines even inside smart devices, and when data centers started growing on the planet, the question shifted from the hardware solution to how the computational machine might look not at the physical or mathematically abstract level but at some non-physical, perhaps metaphysical, level relative to the entire planet. However, the foundation remains the same: the state transition function and nothing else.": "Als der Planet gesättigt war und wir persönliche Computer hatten, sogar Rechenmaschinen in intelligenten Geräten, und als Rechenzentren auf dem Planeten zu wachsen begannen, verlagerte sich die Frage von der Hardwarelösung darauf, wie die Rechenmaschine nicht auf physischer oder mathematisch abstrakter Ebene, sondern auf einer nicht-physischen, vielleicht metaphysischen Ebene im Verhältnis zum gesamten Planeten aussehen könnte. Die Grundlage bleibt jedoch die gleiche: die Zustandsübergangsfunktion und nichts anderes.",
  "As an addition to what has been said, so that we don't only dwell on the theory of 1936 and don't just break the shackles of Bitcoin maximalists, open the Ethereum white paper. There you will find the crucial phrase \"Turing complete machine\"—this is the main definition of Ethereum. A Turing complete machine means that Ethereum can handle any simple operations described in a formal language, operations that are possible. This is not some set of operations that Ethereum can provide as a calculator or a sophisticated calculator for scientists. Instead, it is an abstraction inside which it is possible to load any possible variations, manipulations with variables, constants, additions, calculations with any states, and so on. You won't find anything different from what Turing proposed in the 1930s in the Ethereum concept. You will find an engineering implementation of how to do it. If we move on and open the Polkadot wiki, it's a bit more challenging to find. For this, you should use the search, enter \"State transition,\" and in the search results, find several mentions that Polkadot guarantees nothing else but the state transition. Neither the storage of data in the Polkadot blockchain nor any additional services—only the purest change of state caused by incoming transactions and processed by Polkadot validators. Now, let's try to delve more into this.": "Als Ergänzung zu dem Gesagten, damit wir uns nicht nur auf die Theorie von 1936 konzentrieren und nicht nur die Fesseln der Bitcoin-Maximalisten brechen, öffnen Sie das Ethereum-Whitepaper. Dort finden Sie den entscheidenden Satz \"Turing-vollständige Maschine\" - dies ist die Hauptdefinition von Ethereum. Eine Turing-vollständige Maschine bedeutet, dass Ethereum alle einfachen Operationen verarbeiten kann, die in einer formalen Sprache beschrieben sind, Operationen, die möglich sind. Dies ist nicht eine Reihe von Operationen, die Ethereum als Rechner oder als ausgefeilten Rechner für Wissenschaftler bereitstellen kann. Stattdessen handelt es sich um eine Abstraktion, innerhalb derer es möglich ist, alle möglichen Variationen, Manipulationen mit Variablen, Konstanten, Additionen, Berechnungen mit beliebigen Zuständen und so weiter zu laden. Sie werden nichts anderes finden als das, was Turing in den 1930er Jahren vorgeschlagen hat, im Ethereum-Konzept. Sie werden eine technische Umsetzung finden, wie es gemacht wird. Wenn wir weitermachen und das Polkadot-Wiki öffnen, ist es etwas schwieriger zu finden. Dafür sollten Sie die Suche verwenden, \"Zustandsübergang\" eingeben und in den Suchergebnissen mehrere Erwähnungen finden, dass Polkadot nichts anderes als den Zustandsübergang garantiert. Weder die Speicherung von Daten in der Polkadot-Blockchain noch irgendwelche zusätzlichen Dienste - nur die reinste Änderung des Zustands, verursacht durch eingehende Transaktionen und von Polkadot-Validatoren verarbeitet. Lassen Sie uns nun versuchen, tiefer in dieses Thema einzutauchen.",
  "Now, let's add a bit to this linear diagram to move from the theory of the 1930s to today's realities, where we describe the abstract picture of the world computer. To do this, let's consider an example with Alice and Bob. Alice, being in the office, wants to start Bob's home vacuum robot for cleaning. If we look at today's concepts of how the link between Alice's mobile application and the robot vacuum at home is implemented, you will see roughly the following picture: Alice's mobile application generates a transaction in some cloud where calculations take place, and the output of these calculations is the output values that effectively turn into a command to start the vacuum robot. It would be useful for us, from the field of robotics and Robonomics as concepts in the world of web3, to understand that in the cloud, there is a digital twin of this robot, and its state is changed. We can, in general, not go that far and stop at the fact that Alice sends a transaction to the cloud, and the cloud, having performed all the necessary calculations and manipulations, generates a command to start Bob's vacuum robot.": "Nun fügen wir ein wenig zu diesem linearen Diagramm hinzu, um von der Theorie der 1930er Jahre zu den heutigen Realitäten zu gelangen, in denen wir das abstrakte Bild des Weltcomputers beschreiben. Um dies zu tun, betrachten wir ein Beispiel mit Alice und Bob. Alice, die im Büro ist, möchte Bobs Staubsaugerroboter zu Hause zur Reinigung starten. Wenn wir uns die heutigen Konzepte ansehen, wie die Verbindung zwischen Alice' mobiler Anwendung und dem Staubsaugerroboter zu Hause implementiert ist, sehen Sie ungefähr folgendes Bild: Alice' mobile Anwendung generiert eine Transaktion in irgendeiner Cloud, wo Berechnungen stattfinden, und das Ergebnis dieser Berechnungen sind die Ausgabewerte, die effektiv zu einem Befehl werden, um den Staubsaugerroboter zu starten. Es wäre für uns aus dem Bereich der Robotik und Robonomics als Konzepte in der Welt von Web3 nützlich zu verstehen, dass es in der Cloud ein digitales Zwilling dieses Roboters gibt und sein Zustand sich ändert. Wir können im Allgemeinen nicht so weit gehen und annehmen, dass Alice eine Transaktion an die Cloud sendet und die Cloud, nachdem alle notwendigen Berechnungen und Manipulationen durchgeführt wurden, einen Befehl zum Starten von Bobs Staubsaugerroboter generiert.",
  "In this scheme today, there are several main questions: if you were interacting with a physical computer in front of you or were in a room with the vacuum robot, you would approach, press a physical button, and set it in motion. What changes when instead of arrows, there is not a manual drive but a communication layer, the internet? A multitude of questions arises about how we can safely connect Alice and this cloud, how we can be sure that Alice has access to this cloud. The question of the communication network arises—how we can protect Alice from someone else addressing her vacuum robot, requesting, for example, to make a video of her entire apartment instead of cleaning, and a similar aspect arises: why would the vacuum robot listen to this cloud with such honor and integrity? Why would the robot fully trust this cloud?": "In diesem Schema gibt es heute mehrere Hauptfragen: Wenn Sie mit einem physischen Computer vor Ihnen interagieren oder sich in einem Raum mit dem Staubsaugerroboter befinden würden, würden Sie sich nähern, einen physischen Knopf drücken und ihn in Bewegung setzen. Was ändert sich, wenn anstelle von Pfeilen kein manueller Antrieb vorhanden ist, sondern eine Kommunikationsschicht, das Internet? Eine Vielzahl von Fragen entsteht darüber, wie wir Alice sicher mit dieser Cloud verbinden können, wie wir sicherstellen können, dass Alice Zugriff auf diese Cloud hat. Die Frage des Kommunikationsnetzwerks entsteht - wie können wir Alice vor jemand anderem schützen, der sich an ihren Staubsaugerroboter wendet und beispielsweise anfordert, ein Video von ihrer gesamten Wohnung anstelle von Reinigung zu machen, und ein ähnlicher Aspekt entsteht: Warum sollte der Staubsaugerroboter dieser Cloud mit solcher Ehre und Integrität zuhören? Warum sollte der Roboter dieser Cloud vollständig vertrauen?",
  "Today's approach with the architecture of cloud solutions that connect your mobile phone, or rather, the application on your mobile phone, and some technology on the other side, smart devices, is based on the significant achievements in building physical computers. Computers in data centers today are something extraordinary—the level of technical processes is simply amazing. However, from the perspective of communication technologies, when you already have some experience working with internet applications, it seems that somewhere there, at the level of a technical school or college, or maybe not right next to how developers, architects of Intel processors are solving their tasks now. Almost all questions about connecting Alice to Bob boil down solely to outputting a specific access certificate on a specific IP address from both sides, linking them together, and the cloud will own and do anything. The most important thing in this scheme is to do anything, meaning to perform state transitions or operations that occur without any guarantees that for Alice, for Bob, these will be executed according to the same logic. No one can say anything about how the cloud is arranged. It is a black box where computations are not formalized, and neither Alice nor Bob knows how the computation is performed.": "Der heutige Ansatz mit der Architektur von Cloud-Lösungen, die Ihr Mobiltelefon verbinden oder genauer gesagt die Anwendung auf Ihrem Mobiltelefon und einige Technologien auf der anderen Seite, intelligente Geräte, basiert auf den bedeutenden Errungenschaften beim Bau physischer Computer. Computer in Rechenzentren sind heute etwas Außergewöhnliches - das Niveau der technischen Prozesse ist einfach erstaunlich. Aus der Perspektive der Kommunikationstechnologien, wenn Sie bereits Erfahrung mit Internetanwendungen haben, scheint es, dass irgendwo dort, auf der Ebene einer technischen Schule oder eines Colleges, oder vielleicht nicht direkt nebenan, wie Entwickler, Architekten von Intel-Prozessoren ihre Aufgaben jetzt lösen. Fast alle Fragen zur Verbindung von Alice mit Bob reduzieren sich ausschließlich darauf, einen bestimmten Zugriffsnachweis auf eine bestimmte IP-Adresse von beiden Seiten auszugeben, sie miteinander zu verknüpfen, und die Cloud wird besitzen und alles tun. Das Wichtigste in diesem Schema ist, alles zu tun, was bedeutet, Zustandsübergänge oder Operationen auszuführen, die ohne Garantie erfolgen, dass diese für Alice, für Bob nach derselben Logik ausgeführt werden. Niemand kann etwas darüber sagen, wie die Cloud angeordnet ist. Es ist eine Blackbox, in der Berechnungen nicht formalisiert sind, und weder Alice noch Bob wissen, wie die Berechnung durchgeführt wird.",
  "The place where you must fully trust—relying on the reputation of the company that owns these data centers, and you must completely trust the network access providers who issue a certificate and verify the security of your connection. In fact, if we talk about the boom of internet applications, this is a huge problem. The problem is that there are actually some citadels located in specific jurisdictions that operate on a relatively simple technology stack to connect you as easily as possible to the cloud, which represents a black box. Dissatisfaction with this approach actually arouses interest in the world computer because it will arrange things a bit differently. And how? Let's try to supplement the scheme we drew with blue color right now.": "Der Ort, an dem Sie vollständig vertrauen müssen - basierend auf dem Ruf des Unternehmens, das diese Rechenzentren besitzt, und Sie müssen den Netzwerkzugriffsanbietern vollständig vertrauen, die ein Zertifikat ausstellen und die Sicherheit Ihrer Verbindung überprüfen. Tatsächlich, wenn wir über den Boom von Internetanwendungen sprechen, ist dies ein großes Problem. Das Problem besteht darin, dass es tatsächlich einige Zitadellen in bestimmten Gerichtsbarkeiten gibt, die auf einem relativ einfachen Technologiestapel basieren, um Sie so einfach wie möglich mit der Cloud zu verbinden, die eine Blackbox darstellt. Die Unzufriedenheit mit diesem Ansatz weckt tatsächlich Interesse an dem Weltcomputer, weil er die Dinge etwas anders arrangieren wird. Und wie? Lassen Sie uns versuchen, das Schema, das wir gerade mit blauer Farbe gezeichnet haben, zu ergänzen.",
  "So, to supplement our linear graph, our linear diagram from both sides, let's take a look at the discoveries that have significance in computer science and that are directly or indirectly related to achievements from the world of web3.": "Um unseren linearen Graph, unser lineares Diagramm von beiden Seiten zu ergänzen, werfen wir einen Blick auf die Entdeckungen, die in der Informatik von Bedeutung sind und die direkt oder indirekt mit den Errungenschaften aus der Welt von Web3 zusammenhängen.",
  "Let's start with Leslie Lamport in 1976. Those who attended my presentations, lectures from 2015-2020, probably remember how often I liked to mention that before the invention of Bitcoin, problems related to creating a decentralized network were well described by Leslie Lamport in 1976 in the Byzantine Generals problem. The solution to the Byzantine Generals problem is at the core of Tendermint PBFT algorithms and all synchronous algorithms used from Telegram Open Network to Tendermint, to Cosmos, and other blockchain projects that, accordingly, followed the path of Byzantine Generals.": "Beginnen wir mit Leslie Lamport im Jahr 1976. Diejenigen, die meine Präsentationen, Vorträge von 2015-2020 besucht haben, erinnern sich wahrscheinlich daran, wie oft ich gerne erwähnte, dass vor der Erfindung von Bitcoin Probleme im Zusammenhang mit der Schaffung eines dezentralen Netzwerks von Leslie Lamport im Jahr 1976 im Byzantinischen Generäle-Problem gut beschrieben wurden. Die Lösung des Byzantinischen Generäle-Problems steht im Mittelpunkt der Tendermint PBFT-Algorithmen und aller synchronen Algorithmen, die von Telegram Open Network bis Tendermint, Cosmos und anderen Blockchain-Projekten verwendet werden, die entsprechend dem Weg der Byzantinischen Generäle folgten.",
  "The second interesting achievement in internet technologies is torrent trackers. We don't have any specific, already erased, cloud or a black box that stores files. Still, users worldwide, by exchanging torrent files, can download exactly the file they were looking for, and this works without data substitution. No one uploads any viruses to you by replacing the file. There might sometimes be a virus embedded in the file, but the idea of receiving a link to download and actually downloading something other than what you were offered to download using torrent technology is impossible. Similar processes exist in the IPFS network, a hash-oriented storage - a way of connecting various participants with trust in the information you convey without using a black box, precisely.": "Die zweite interessante Errungenschaft in den Internet-Technologien sind Torrent-Tracker. Wir haben keine spezifische, bereits gelöschte Cloud oder eine Blackbox, die Dateien speichert. Dennoch können Benutzer weltweit, indem sie Torrent-Dateien austauschen, genau die Datei herunterladen, nach der sie gesucht haben, und dies funktioniert ohne Datenersatz. Niemand lädt Viren hoch, indem er die Datei ersetzt. Es könnte manchmal ein Virus in der Datei eingebettet sein, aber die Idee, einen Link zum Herunterladen zu erhalten und tatsächlich etwas anderes herunterzuladen als das, was Ihnen angeboten wurde, ist mit der Torrent-Technologie unmöglich. Ähnliche Prozesse existieren im IPFS-Netzwerk, einer hashorientierten Speicherung - eine Möglichkeit, verschiedene Teilnehmer mit Vertrauen in die von Ihnen übermittelten Informationen zu verbinden, ohne eine Blackbox zu verwenden, genau.",
  "And of course, Bitcoin. Bitcoin, as a more collective example, I'm sure Satoshi Nakamoto was well aware of Leslie Lamport's solution to the Byzantine Generals problem and, of course, observed how the idea of torrent trackers was developing. If we don't emphasize the properties that the Bitcoin blockchain obtained, such as immutability, transparency of transactions, and, to some extent, censorship resistance, then Bitcoin is an internet service that performs state transition, some changes in state based on transactions without a central node. It is an example of a collective construction of a global network in which there is a constantly functioning state transition function that we can trust, and to ensure trust, neither jurisdictions nor specific IP addresses nor the most primitive technologies used and still used today in building cloud services are used. The collective image of Bitcoin allowed overlaying the general concept from the 1930s of a Turing-complete machine on the existence of a universal abstract function for everything.": "Und natürlich Bitcoin. Bitcoin, als ein kollektives Beispiel, bin ich sicher, dass Satoshi Nakamoto sich der Lösung des Byzantinischen Generalsproblems von Leslie Lamport bewusst war und natürlich beobachtete, wie sich die Idee der Torrent-Tracker entwickelte. Wenn wir nicht die Eigenschaften betonen, die die Bitcoin-Blockchain erlangt hat, wie Unveränderlichkeit, Transparenz von Transaktionen und, bis zu einem gewissen Grad, Zensurresistenz, dann ist Bitcoin ein Internetdienst, der Zustandsübergänge durchführt, einige Änderungen im Zustand basierend auf Transaktionen ohne zentrale Knoten. Es ist ein Beispiel für den kollektiven Aufbau eines globalen Netzwerks, in dem eine ständig funktionierende Zustandsübergangsfunktion existiert, der wir vertrauen können, und um Vertrauen zu gewährleisten, werden weder Rechtsprechungen noch spezifische IP-Adressen noch die primitivsten Technologien verwendet, die heute beim Aufbau von Cloud-Diensten verwendet werden. Das kollektive Bild von Bitcoin ermöglichte es, das allgemeine Konzept aus den 1930er Jahren einer Turing-vollständigen Maschine auf die Existenz einer universellen abstrakten Funktion für alles zu überlagern.",
  "So, what do we need to add to this scheme to envision a global computer? From the bottom, we provide consensus validators or, in general, validators. It can be said that the \"Data availability layer\" is probably a phrase many have heard around Ethereum this year, and it has become an advantage of Bitcoin as well. However, in the organization scheme of the global computer, this is one piece of the puzzle and, as I mentioned, it complements the main function that lies at the heart of the global computer—the function of universal state transition. Going back to the very beginning, the analogy of the heart in the human body is interesting here. It's not a thinking thing, indeed. Yes, it doesn't generate, you could say, the brain is much more important. Still, life is impossible without the heart. It simply pumps blood. Similarly, at the core of the global computer, all transactions are pumped through the state transition function, resulting in outputs. But to organize this in a distributed internet network without the need to trust some citadel, we need to supplement the picture with two components.": "Also, was müssen wir diesem Schema hinzufügen, um einen globalen Computer zu entwerfen? Von unten her bieten wir Konsensvalidatoren oder im Allgemeinen Validatoren. Man könnte sagen, dass die \"Datenverfügbarkeitsschicht\" wahrscheinlich ein Begriff ist, den viele in diesem Jahr um Ethereum herum gehört haben und der auch zu einem Vorteil von Bitcoin geworden ist. In der Organisationsstruktur des globalen Computers ist dies jedoch nur ein Teil des Puzzles und, wie ich erwähnte, ergänzt es die Hauptfunktion, die im Herzen des globalen Computers liegt - die Funktion des universellen Zustandsübergangs. Wenn wir zurückgehen zum Anfang, ist die Analogie des Herzens im menschlichen Körper hier interessant. Es ist kein denkendes Ding, in der Tat. Ja, es erzeugt nicht, man könnte sagen, das Gehirn ist viel wichtiger. Dennoch ist das Leben ohne das Herz unmöglich. Es pumpt einfach Blut. Ähnlich werden im Kern des globalen Computers alle Transaktionen durch die Zustandsübergangsfunktion gepumpt, was zu Ausgaben führt. Aber um dies in einem verteilten Internetnetzwerk zu organisieren, ohne der Notwendigkeit zu vertrauen, einer Zitadelle, müssen wir das Bild mit zwei Komponenten ergänzen.",
  "The first component is a set of computers or nodes that are ready to execute the state transition. When you send transactions, they don't just go here; they go to the validators. Validators perform computations, recalling what I've already mentioned in this ongoing conversation. They take your transaction, retrieve information from the blockchain about how to process that transaction, apply that processing, and then coordinate with other validators the fact that they correctly executed the state transition. The core of the global computer, in terms of protection against situations where Bob, the vacuum cleaner robot, receives a correct command from Alice in the office, is not based on trust but on cross-verification by a multitude of network participants based on available information from the blockchain. Not only from the blockchain, by the way. It's complex, and we won't delve into it right now, but essentially, a multitude of validators take turns watching and have incentives, some internal incentives within the protocol, to prevent the universal and capable-of-calculating-anything machine from executing this operation incorrectly. A validator effectively processes transactions that come into the global computer, and other validators help prevent situations where one of the validators performed an incorrect calculation. The better the consensus algorithms of the validators, the better protection we have for the state transition function or, in other words, the heart of our global computer.": "Der erste Bestandteil ist eine Gruppe von Computern oder Knoten, die bereit sind, den Zustandsübergang auszuführen. Wenn Sie Transaktionen senden, gehen sie nicht einfach hierhin; sie gehen zu den Validatoren. Validatoren führen Berechnungen durch, erinnern sich an das, was ich bereits in diesem laufenden Gespräch erwähnt habe. Sie nehmen Ihre Transaktion, rufen Informationen aus der Blockchain darüber ab, wie diese Transaktion verarbeitet werden soll, wenden diese Verarbeitung an und koordinieren dann mit anderen Validatoren die Tatsache, dass sie den Zustandsübergang korrekt ausgeführt haben. Der Kern des globalen Computers, in Bezug auf den Schutz vor Situationen, in denen Bob, der Staubsaugerroboter, einen korrekten Befehl von Alice im Büro erhält, beruht nicht auf Vertrauen, sondern auf der gegenseitigen Überprüfung durch eine Vielzahl von Netzwerkteilnehmern auf der Grundlage verfügbarer Informationen aus der Blockchain. Übrigens nicht nur aus der Blockchain. Es ist komplex, und wir werden jetzt nicht näher darauf eingehen, aber im Wesentlichen überwachen eine Vielzahl von Validatoren abwechselnd und haben Anreize, einige interne Anreize innerhalb des Protokolls, um zu verhindern, dass die universelle und alles berechnende Maschine diese Operation falsch ausführt. Ein Validator verarbeitet effektiv Transaktionen, die in den globalen Computer gelangen, und andere Validatoren helfen dabei, Situationen zu verhindern, in denen einer der Validatoren eine falsche Berechnung durchgeführt hat. Je besser die Konsensalgorithmen der Validatoren sind, desto besser ist der Schutz, den wir für die Zustandsübergangsfunktion oder, mit anderen Worten, das Herz unseres globalen Computers haben.",
  "The second part of this scheme is the data availability service—what we've always called the database in Bitcoin or Ethereum. In fact, we'll have to abandon that concept because there's a fundamental change in the architecture of all projects, and for those specifically targeting the global computer, this change is most crucial. For a simple present-day example: there are various implementations of Layer 2 networks on top of Ethereum—such as Arbitrum, Optimism, and others. If you start looking into their main differences and how they operate, you'll find that, in some cases, an L2 network in Ethereum sends a larger amount of data, solely from the first-layer blockchain, i.e., from the Ethereum blockchain. All the necessary puzzle pieces to confirm that the computation on the L2 layer was correct can be found in the first-layer Ethereum blockchain. On the other hand, other approaches suggest that beyond the first layer of Ethereum, something else is stored that needs to be found to prove the correctness of transactions. So, right now, before our eyes, there is again a question of improvement, but specifically of such an architecture where transactions go on the left, in the middle, we have the heart in the form of the state transition function, validators, and their consensus allows for the correct execution of this state transition. But there is also a question of data availability, which is necessary to ensure both cross-verification and, essentially, the existence of the service itself. Some approaches and patterns for creating L2 on top of Ethereum today ask the question: \"What if a certain L2 layer loses the data it doesn't store within the main Ethereum blockchain?\"": "Der zweite Teil dieses Schemas ist der Datenverfügbarkeitsdienst – das, was wir in Bitcoin oder Ethereum immer als Datenbank bezeichnet haben. Tatsächlich werden wir dieses Konzept aufgeben müssen, da es eine grundlegende Änderung in der Architektur aller Projekte gibt, und für diejenigen, die speziell auf den globalen Computer abzielen, ist diese Änderung am wichtigsten. Als einfaches Beispiel von heute: Es gibt verschiedene Implementierungen von Layer 2-Netzwerken auf Ethereum – wie Arbitrum, Optimism und andere. Wenn Sie anfangen, sich ihre Hauptunterschiede und ihre Funktionsweise anzusehen, werden Sie feststellen, dass in einigen Fällen ein L2-Netzwerk in Ethereum eine größere Datenmenge sendet, ausschließlich von der Blockchain der ersten Schicht, d.h. von der Ethereum-Blockchain. Alle notwendigen Puzzlestücke zur Bestätigung, dass die Berechnung auf der L2-Ebene korrekt war, finden sich in der Ethereum-Blockchain der ersten Schicht. Andererseits legen andere Ansätze nahe, dass jenseits der ersten Schicht von Ethereum etwas anderes gespeichert ist, das gefunden werden muss, um die Korrektheit von Transaktionen zu beweisen. Also, gerade jetzt, vor unseren Augen, gibt es wieder eine Frage der Verbesserung, aber speziell einer solchen Architektur, in der Transaktionen links stattfinden, in der Mitte haben wir das Herz in Form der Zustandsübergangsfunktion, der Validatoren und ihr Konsens ermöglicht die korrekte Ausführung dieses Zustandsübergangs. Aber es gibt auch eine Frage der Datenverfügbarkeit, die notwendig ist, um sowohl die gegenseitige Überprüfung als auch im Wesentlichen die Existenz des Dienstes selbst sicherzustellen. Einige Ansätze und Muster zur Erstellung von L2 auf Ethereum heute stellen die Frage: „Was passiert, wenn eine bestimmte L2-Schicht die Daten verliert, die sie nicht innerhalb der Haupt-Ethereum-Blockchain speichert?\"",
  "Let's complement this picture with how Polkadot is structured. Polkadot has two consensus mechanisms: the \"babe\" consensus, responsible for the parachain-level consensus and is fast, and the \"grandpa\" consensus, which is slower and verifies everything afterward. So, if you delve into the wiki article titled \"The Path of a Block in the Polkadot Network,\" you will encounter interesting abbreviations. After achieving the \"babe\" consensus at the parachain level, the \"grandpa\" consensus introduces the concept of \"proof of validity and data availability.\" Going deeper, you'll find the term \"chunk\" of redundant pieces of information, inspired by CD RW technologies from the 90s and 2000s. This addresses the question of how to preserve information when absolute trust in a specific entity in the network is not feasible. The concept of \"chunk\" of redundant information is one of these patterns.": "Lassen Sie uns dieses Bild ergänzen, wie Polkadot strukturiert ist. Polkadot hat zwei Konsensmechanismen: der „babe“-Konsens, der für den Konsens auf der Parachain-Ebene verantwortlich ist und schnell ist, und der „grandpa“-Konsens, der langsamer ist und alles danach überprüft. Wenn Sie sich in den Wiki-Artikel mit dem Titel „Der Weg eines Blocks im Polkadot-Netzwerk“ vertiefen, werden Sie interessante Abkürzungen finden. Nach Erreichen des „babe“-Konsenses auf der Parachain-Ebene führt der „grandpa“-Konsens das Konzept des „Beweises der Gültigkeit und Datenverfügbarkeit“ ein. Wenn Sie tiefer gehen, werden Sie den Begriff „Chunk“ redundanter Informationsstücke finden, inspiriert von CD RW-Technologien aus den 90er und 2000er Jahren. Dies beantwortet die Frage, wie Informationen erhalten bleiben, wenn absolutes Vertrauen in eine bestimmte Entität im Netzwerk nicht möglich ist. Das Konzept des „Chunks“ redundanter Informationen ist eines dieser Muster.",
  "Summing up, at the core lies an abstract function that enables any computation and was described by Alan Turing in the 1930s. The personal computer, essentially a side effect of a mathematical problem, emerged from Turing's work. The technologies first applied in Bitcoin, such as consensus that allows the network to exist without a specific data center or entity responsible for data correctness, form a functioning mechanism. It goes beyond providing a specific service for electronic cash transfers; it allows us to audit and control any computation in the network. Additionally, we face the challenge of ensuring data availability, as it's not the primary concern of the world computer. The world computer's task lies at its core, executing computation, managing state transitions, and performing calculations, while the data in this scheme serves as a puzzle piece that is more necessary to support the lower part. Thus, this overall scheme can be seen as an abstract and generalized illustration of the world computer's structure, where the state transition function is at its core.": "Zusammenfassend liegt im Kern eine abstrakte Funktion, die jede Berechnung ermöglicht und von Alan Turing in den 1930er Jahren beschrieben wurde. Der Personalcomputer, im Wesentlichen eine Nebenwirkung eines mathematischen Problems, entstand aus Turings Arbeit. Die Technologien, die zuerst in Bitcoin angewendet wurden, wie der Konsens, der es dem Netzwerk ermöglicht, ohne ein spezifisches Rechenzentrum oder eine Entität, die für die Korrektheit der Daten verantwortlich ist, zu existieren, bilden einen funktionierenden Mechanismus. Es geht über die Bereitstellung eines spezifischen Dienstes für elektronische Geldtransfers hinaus; es ermöglicht uns, jede Berechnung im Netzwerk zu überprüfen und zu kontrollieren. Darüber hinaus stehen wir vor der Herausforderung, die Datenverfügbarkeit sicherzustellen, da dies nicht das Hauptanliegen des Weltcomputers ist. Die Aufgabe des Weltcomputers liegt im Kern darin, Berechnungen auszuführen, Zustandsübergänge zu verwalten und Berechnungen durchzuführen, während die Daten in diesem Schema als ein Puzzlestück dienen, das mehr notwendig ist, um den unteren Teil zu unterstützen. Somit kann dieses Gesamtschema als eine abstrakte und verallgemeinerte Darstellung der Struktur des Weltcomputers betrachtet werden, bei der die Zustandsübergangsfunktion im Mittelpunkt steht.",
  "Part 4: The Path of a New Block of Information in the World Computer": "Teil 4: Der Weg eines neuen Informationsblocks im Weltcomputer",
  "The fourth and final part of our lecture is \"The World Computer in Your Home.\" After this, I will begin recording screencasts for the practical part of the sessions.": "Der vierte und letzte Teil unserer Vorlesung ist \"Der Weltcomputer in Ihrem Zuhause.\" Danach werde ich mit der Aufzeichnung von Screencasts für den praktischen Teil der Sitzungen beginnen.",
  "Now we will try to summarize almost all the theory we have covered so far in terms of one process. The process that describes the path of an information block in the world computer. Let's start again by returning to the theme of web3 and the concept of blockchain. The phrase \"block\" or \"information block\" can be considered identical when stepping away from the last 10 years and taking a more general theory, as explored in the previous parts of the lectures. The concept of a \"block of information\" aligns with web3, but not necessarily with blockchain. Even without any crypto projects, we need to understand that when forming the theory of the world computer without referencing the formation of information blocks, it's currently challenging to envision other models. So, we will consider the path of an information block throughout the entire world computer, not because it is blockchain, but because, for now, there are no other ways to conceptualize the existence of the world computer other than by processing information in specific portions.": "Jetzt werden wir versuchen, fast die gesamte Theorie, die wir bisher behandelt haben, in Bezug auf einen Prozess zusammenzufassen. Der Prozess, der den Weg eines Informationsblocks im Weltcomputer beschreibt. Lassen Sie uns erneut damit beginnen, zum Thema Web3 und dem Konzept der Blockchain zurückzukehren. Der Begriff \"Block\" oder \"Informationsblock\" kann als identisch angesehen werden, wenn man sich von den letzten 10 Jahren entfernt und eine allgemeinere Theorie betrachtet, wie sie in den vorherigen Teilen der Vorlesungen erkundet wurde. Das Konzept eines \"Informationsblocks\" stimmt mit Web3 überein, aber nicht unbedingt mit der Blockchain. Selbst ohne Kryptoprojekte müssen wir verstehen, dass es derzeit schwierig ist, sich andere Modelle vorzustellen, wenn man die Theorie des Weltcomputers ohne Bezugnahme auf die Bildung von Informationsblöcken bildet. Daher werden wir den Weg eines Informationsblocks im gesamten Weltcomputer betrachten, nicht weil es sich um Blockchain handelt, sondern weil es derzeit keine anderen Möglichkeiten gibt, die Existenz des Weltcomputers anders als durch die Verarbeitung von Informationen in spezifischen Teilen zu konzeptualisieren.",
  "Block of information = block in web3, but without blockchain and without any crypto project influence. We must currently consider the formation of information blocks when discussing the theory of the world computer. Now, let's move on to the first point. I tried to find close analogies from everyday life to help illustrate the path of an information block in the world computer. The analogy I've chosen is the movement of a bus on a route. Our first meeting point is the bus station.": "Informationsblock = Block in Web3, aber ohne Blockchain und ohne Einfluss von Kryptoprojekten. Wir müssen derzeit die Bildung von Informationsblöcken in Betracht ziehen, wenn wir die Theorie des Weltcomputers diskutieren. Nun gehen wir zum ersten Punkt über. Ich habe versucht, nahe Analogien aus dem täglichen Leben zu finden, um den Weg eines Informationsblocks im Weltcomputer zu veranschaulichen. Die von mir gewählte Analogie ist die Bewegung eines Busses auf einer Route. Unser erster Treffpunkt ist die Bushaltestelle.",
  "I marked transactions in pink as small dots. Let's imagine a typical bus stop where people gather, waiting for a bus that operates on a schedule. If we don't consider the hustle and bustle of large cities, where buses are always late, everyone in the world generally knows that the train from village A to village B always arrives around 7:15 am. Transactions that users want to send to the world computer gather at a certain bus stop and wait for the bus to arrive.": "Ich habe Transaktionen in Pink als kleine Punkte markiert. Stellen Sie sich eine typische Bushaltestelle vor, an der Menschen sich versammeln und auf einen Bus warten, der nach einem Fahrplan fährt. Wenn wir das Gedränge großer Städte außer Acht lassen, wo Busse immer zu spät kommen, weiß im Allgemeinen jeder auf der Welt, dass der Zug von Dorf A nach Dorf B immer gegen 7:15 Uhr ankommt. Transaktionen, die Benutzer an den Weltcomputer senden möchten, sammeln sich an einer bestimmten Bushaltestelle und warten darauf, dass der Bus ankommt.",
  "This is how our block is formed. Imagine: the bus arrives, and each person starts boarding one by one, taking their seats. The bus then follows its route. In our case, the block of information overcomes the first frontier. Our transactions, in some form, have settled into the bus and overcome the initial barrier. I will be using terminology primarily from Polkadot, and the third part should have better explained the concept of the world computer in the comparison between Ethereum and Polkadot. My personal opinion, and probably the majority of engineers today would agree, is that the representation of a heterogeneous multicentric world computer is better implemented in Polkadot. However, we will still go through the terms inherited from Ethereum, but towards the end of this part of the lecture.": "So wird unser Block gebildet. Stellen Sie sich vor: Der Bus kommt an, und jede Person steigt nacheinander ein und nimmt ihren Platz ein. Der Bus folgt dann seiner Route. In unserem Fall überwindet der Informationsblock die erste Grenze. Unsere Transaktionen haben sich in gewisser Weise in den Bus eingelebt und die anfängliche Barriere überwunden. Ich werde hauptsächlich Begriffe aus Polkadot verwenden, und der dritte Teil sollte das Konzept des Weltcomputers im Vergleich zwischen Ethereum und Polkadot besser erklärt haben. Meine persönliche Meinung, und wahrscheinlich würden die meisten Ingenieure heute zustimmen, ist, dass die Darstellung eines heterogenen multizentrischen Weltcomputers in Polkadot besser umgesetzt ist. Wir werden jedoch immer noch die Begriffe durchgehen, die von Ethereum übernommen wurden, aber gegen Ende dieses Teils der Vorlesung.",
  "What is the line that separates the bus stop from the bus's further movement? This line represents the collators of the network – participants in the network nodes who collect transactions. You can think of a collator not as a bus driver but as a controller who stays at the bus stop. In other words, this controller checks whether you have a ticket when you enter the bus. It doesn't recheck in the database how valid the ticket is but looks at the basic parameters of the ticket and checks if everything seems fine. In reality, collators perform almost all the calculations required, verifying the ticket number and other data, but they are not required to guarantee that the check is done correctly. Therefore, collators are controllers who remain at the bus stop, primarily ensuring passenger boarding, seating, and sending the bus further along the route.": "Was ist die Linie, die die Bushaltestelle von der weiteren Bewegung des Busses trennt? Diese Linie repräsentiert die Collators des Netzwerks - Teilnehmer an den Netzwerkknoten, die Transaktionen sammeln. Sie können sich einen Collator nicht als Busfahrer, sondern als Kontrolleur vorstellen, der an der Bushaltestelle bleibt. Mit anderen Worten, dieser Kontrolleur überprüft, ob Sie ein Ticket haben, wenn Sie in den Bus einsteigen. Er überprüft nicht erneut in der Datenbank, wie gültig das Ticket ist, sondern betrachtet die grundlegenden Parameter des Tickets und prüft, ob alles in Ordnung zu sein scheint. In der Realität führen Collators fast alle erforderlichen Berechnungen durch, überprüfen die Ticketnummer und andere Daten, sind jedoch nicht verpflichtet, zu garantieren, dass die Überprüfung korrekt durchgeführt wird. Daher sind Collators Kontrolleure, die an der Bushaltestelle bleiben und hauptsächlich das Einsteigen der Passagiere, das Platznehmen und das Weiterfahren des Busses entlang der Route sicherstellen.",
  "Beyond the drawn border, we enter the first validation area where paravalidators are located. These are validators of the entire ecosystem, the entire network, specifically assigned for a certain time to check each transaction and thus perform actual computations in the world computer. Our not-yet-fully-formed block of information is marked with a dashed line. It is still a candidate block of information since it has not undergone any actual verification. The collator, who collected the block of information and checked the transactions at the entrance, does not participate in any way in securing the cybersecurity of the computations conducted. Its task is only to seat all transactions and form the first block. At this stage, the transformation from a candidate to a real block of information begins.": "Jenseits der gezogenen Grenze betreten wir den ersten Validierungsbereich, in dem sich Paravalidatoren befinden. Dies sind Validatoren des gesamten Ökosystems, des gesamten Netzwerks, die speziell für eine bestimmte Zeit damit beauftragt sind, jede Transaktion zu überprüfen und somit tatsächliche Berechnungen im Weltcomputer durchzuführen. Unser noch nicht vollständig geformter Informationsblock ist mit einer gestrichelten Linie markiert. Es handelt sich immer noch um einen Kandidaten-Informationsblock, da er noch keiner tatsächlichen Überprüfung unterzogen wurde. Der Collator, der den Informationsblock gesammelt und die Transaktionen am Eingang überprüft hat, beteiligt sich in keiner Weise an der Sicherung der Cybersicherheit der durchgeführten Berechnungen. Seine Aufgabe besteht nur darin, alle Transaktionen zu platzieren und den ersten Block zu bilden. In diesem Stadium beginnt die Transformation von einem Kandidaten zu einem echten Informationsblock.",
  "I have divided it into three parts, but forgot one more. Let's consider four parts of this candidate block. The top part, known to users of various web3 applications as the header or block header, is the quintessence, the most popular piece of information circulating and reflected from the block explorer to the console clients of all nodes mining, staking, and so on. The header is a key element of the block, but it is practically formed at the last stage at this point.": "Ich habe es in drei Teile unterteilt, aber einen vergessen. Lassen Sie uns vier Teile dieses Kandidatenblocks betrachten. Der obere Teil, bekannt bei Benutzern verschiedener Web3-Anwendungen als Header oder Block-Header, ist die Quintessenz, das beliebteste Stück Information, das im Block Explorer zirkuliert und von den Konsolenclients aller Knoten, die Mining, Staking usw. betreiben, reflektiert wird. Der Header ist ein Schlüsselelement des Blocks, wird aber praktisch erst in der letzten Phase an diesem Punkt gebildet.",
  "Firstly, we have our actual requests for state transitions or computations. There is a list of changes that need to be made: convert A to A', B to B', C to C', applying a set of algorithms to them. For this, we will now build another boundary immediately and go beyond it to perform this part of the work, and then only proceed beyond it. Already at the block preparation stage, we have to cross the second boundary within the world computer to go for the algorithms that need to be applied to prepare the block. As I mentioned before, theoretically, the controller at the bus stop here does the same, but I wouldn't pay much attention to that. The block preparation stage, especially when we talk about examples simultaneously from Polkadot and Ethereum as a world computer, they differ slightly and show us the insignificance of checks at this stage because it is precisely on the second step, after passing the first boundary and receiving the block of information from collators, that the attention-worthy calculations of this world computer begin.": "Zunächst haben wir unsere tatsächlichen Anfragen für Zustandsübergänge oder Berechnungen. Es gibt eine Liste von Änderungen, die vorgenommen werden müssen: A in A', B in B', C in C', wobei eine Reihe von Algorithmen auf sie angewendet werden müssen. Dafür werden wir jetzt sofort eine weitere Grenze ziehen und sie überschreiten, um diesen Teil der Arbeit zu erledigen, und dann erst weitergehen. Schon in der Blockvorbereitungsphase müssen wir die zweite Grenze innerhalb des Weltcomputers überschreiten, um die Algorithmen anzuwenden, die zur Vorbereitung des Blocks erforderlich sind. Wie ich bereits erwähnt habe, führt der Kontrolleur an der Bushaltestelle theoretisch dasselbe durch, aber ich würde dem nicht viel Aufmerksamkeit schenken. Die Blockvorbereitungsphase, insbesondere wenn wir gleichzeitig Beispiele von Polkadot und Ethereum als Weltcomputer betrachten, unterscheiden sich geringfügig und zeigen uns die Bedeutungslosigkeit von Überprüfungen in diesem Stadium, da es genau im zweiten Schritt, nachdem die erste Grenze überschritten und der Informationsblock von den Collators erhalten wurde, beginnen die beachtenswerten Berechnungen dieses Weltcomputers.",
  "To perform these calculations, the validator, at this stage, can only do so by turning to the relay chain, the central database, and taking from there the algorithms from the runtime. In the case of Ethereum, it was the same virtual machines in the previous architectural concept, which could be applied, so there was no need to go anywhere. Almost every node had a complete copy of the algorithms that could be applied. But in terms of a heterogeneous network, where each segment or each individual chain may have its own set of algorithms, a validator, before actually executing all the transitions, calculations obtained in the form of a block candidate from the collator, must consult. It must consult the relay chain, consult the main blockchain in the network and take from there the necessary algorithms, apply them, and perform state transitions.": "Um diese Berechnungen durchzuführen, kann der Validator in diesem Stadium nur auf die Relay-Kette, die zentrale Datenbank, zugreifen und von dort die Algorithmen aus der Laufzeit übernehmen. Im Fall von Ethereum waren es die gleichen virtuellen Maschinen im vorherigen architektonischen Konzept, die angewendet werden konnten, daher war es nicht notwendig, irgendwohin zu gehen. Fast jeder Knoten hatte eine vollständige Kopie der anwendbaren Algorithmen. Aber in Bezug auf ein heterogenes Netzwerk, in dem jedes Segment oder jede einzelne Kette über einen eigenen Satz von Algorithmen verfügen kann, muss ein Validator, bevor tatsächlich alle Übergänge ausgeführt werden, die in Form eines Blockkandidaten vom Collator erhaltenen Berechnungen konsultieren. Er muss die Relay-Kette konsultieren, die Haupt-Blockchain im Netzwerk konsultieren und von dort die notwendigen Algorithmen übernehmen, anwenden und Zustandsübergänge durchführen.",
  "During the execution of calculations, a Merkle tree is simultaneously formed, and we won't dwell on it because Merkle trees are not that complicated from the perspective of computer science. Still, I notice that to understand how to apply them in engineering and in the architecture of a project, how they are applied, not just by reading on Wikipedia, you need to break your head a bit, imagine examples. In this example, we won't delve too much into it, but I think for those who are already familiar with some basic definitions, have read about Merkle trees, it will become a bit clearer about how and at what moments another Merkle tree is assembled. The Merkle tree is formed when we actually perform calculations and output values appear. These output values are packed into a binary tree format, then the addition is performed between them in computer science language, and the top node reaches the header. Let's denote it with a big letter \"H.\" It's a small and pleasant aspect of considering such schemes.": "Während der Ausführung von Berechnungen wird gleichzeitig ein Merkle-Baum gebildet, und wir werden nicht näher darauf eingehen, da Merkle-Bäume aus der Perspektive der Informatik nicht so kompliziert sind. Dennoch bemerke ich, dass man, um zu verstehen, wie man sie in der Technik und in der Architektur eines Projekts anwendet, wie sie angewendet werden, nicht nur durch Lesen auf Wikipedia, ein wenig nachdenken und Beispiele vorstellen muss. In diesem Beispiel werden wir nicht allzu sehr darauf eingehen, aber ich denke, für diejenigen, die bereits mit einigen grundlegenden Definitionen vertraut sind, über Merkle-Bäume gelesen haben, wird es etwas klarer, wie und zu welchen Zeitpunkten ein weiterer Merkle-Baum zusammengesetzt wird. Der Merkle-Baum wird gebildet, wenn wir tatsächlich Berechnungen durchführen und Ausgabewerte erscheinen. Diese Ausgabewerte werden in einem binären Baumformat verpackt, dann wird die Addition zwischen ihnen in der Sprache der Informatik durchgeführt, und der oberste Knoten erreicht den Header. Lassen Sie uns ihn mit einem großen Buchstaben \"H\" bezeichnen. Es ist ein kleiner und angenehmer Aspekt, solche Schemata zu betrachten.",
  "In this scheme, we can note how the block header is actually related to the computations performed inside. Let's look again - our block candidate came from the collator. There is a set of transactions that need to be executed, perform calculations. The validator went through another internal boundary, one more, behind the algorithms, applied them, and recorded all the results at the lowest level of the Merkle tree. The other nodes are essentially systemic. They do not come from any data; they don't come from anywhere. At the second level, the node does not come from any information. It is obtained by summing values in these two leaves, and when we go up with you, we get only the root of this tree, which is enough to protect all output values. We won't get the same header if we change any of these calculations. And this is one of the magical and simple features, like hash-oriented storage, of how we can protect a whole block of information by talking only about one header. Therefore, headers are so important and play a cornerstone role even in architectures when we transition from one chain or one virtual machine to many combined in the network. It is enough for us to ensure the security of storing headers to be sure that all transactions that were executed at the block preparation stage were executed correctly, and they cannot be replaced.": "In diesem Schema können wir feststellen, wie der Blockheader tatsächlich mit den innerhalb durchgeführten Berechnungen zusammenhängt. Schauen wir noch einmal - unser Blockkandidat kam vom Collator. Es gibt eine Reihe von Transaktionen, die ausgeführt werden müssen, Berechnungen durchführen. Der Validator ging durch eine weitere interne Grenze, eine weitere, hinter den angewendeten Algorithmen, wandte sie an und protokollierte alle Ergebnisse auf der untersten Ebene des Merkle-Baums. Die anderen Knoten sind im Wesentlichen systemisch. Sie stammen nicht von Daten ab; sie kommen nicht von irgendwoher. Auf der zweiten Ebene stammt der Knoten nicht von Informationen ab. Er wird erhalten, indem Werte in diesen beiden Blättern summiert werden, und wenn wir mit Ihnen nach oben gehen, erhalten wir nur die Wurzel dieses Baums, die ausreicht, um alle Ausgabewerte zu schützen. Wenn wir eine dieser Berechnungen ändern, erhalten wir nicht denselben Header. Und dies ist eine der magischen und einfachen Funktionen, wie die hashorientierte Speicherung, wie wir einen ganzen Block von Informationen schützen können, indem wir nur über einen Header sprechen. Daher sind Header so wichtig und spielen selbst in Architekturen eine Schlüsselrolle, wenn wir von einer Kette oder einer virtuellen Maschine zu vielen kombinierten im Netzwerk übergehen. Es reicht aus, die Sicherheit der Speicherung von Headern zu gewährleisten, um sicherzustellen, dass alle Transaktionen, die in der Blockvorbereitungsphase ausgeführt wurden, korrekt ausgeführt wurden und nicht ersetzt werden können.",
  "And one field is still left unfilled. In the process of preparing the block of information, it is the author's field, that is, the validator who actually performed all the changes, prepared the Merkle tree, and recorded the header. Since we are considering an example with the bus moving along the route from the stop, let's call the validator a \"controller\" who goes right inside the bus, passes each seat, approaches each person, checks for real what is written on their tickets, makes some mark, validates it, and, accordingly, puts their signature. The controller, for example, number 134, meaning, naturally, each validator has some unique identifier, their address, and we also somehow uniquely renamed it here.": "Und ein Feld ist immer noch leer. Im Prozess der Vorbereitung des Informationsblocks ist es das Feld des Autors, das heißt des Validierers, der tatsächlich alle Änderungen vorgenommen, den Merkle-Baum vorbereitet und den Header aufgezeichnet hat. Da wir ein Beispiel mit dem Bus betrachten, der entlang der Route von der Haltestelle fährt, nennen wir den Validierer einen \"Controller\", der direkt in den Bus steigt, jeden Sitzplatz passiert, sich jedem nähert Person, überprüft, was auf ihren Tickets steht, macht eine Markierung, validiert es und setzt entsprechend ihre Unterschrift. Der Controller, zum Beispiel Nummer 134, bedeutet natürlich, dass jeder Validierer eine eindeutige Kennung hat, ihre Adresse, und wir haben sie auch hier irgendwie eindeutig umbenannt.",
  "And it seems that at this point, we could have shaded and made our block boundaries bolder, but no, and this is one of the interesting changes that have occurred in the last 5 years in terms of decentralized ecosystems, namely the shift from proof of work. When validators of the network, at that time miners, never had to coordinate anything with each other. You produced a block and sent it to the network and moved on. In fact, it was not a consensus of agreed consent. It was a consensus of obvious agreement with the fact that had occurred. What is interesting changes when the architecture becomes more complex, and we have come closer from a simple calculator like Bitcoin with a ledger towards an actual virtual computer, is that at each stage, the connectivity of participants who ensure security and block production has increased. Because, in fact, no one who risks their stake, the one who ensures this security and wants to earn by processing your transactions, has something to lose, unlike proof of work. In proof of work, you bought the equipment, yes, you put money into it, you spend electricity, but there is actually no protection against the fact that you can attack the network with your power, the same 51% attack, where someone with a lot of miners can try to rewrite the chain.": "Und es scheint, dass wir zu diesem Zeitpunkt unsere Blockgrenzen schattiert und fett gedruckt haben könnten, aber nein, und dies ist eine der interessanten Änderungen, die sich in den letzten 5 Jahren in Bezug auf dezentrale Ökosysteme ergeben haben, nämlich der Wechsel von Proof of Work. Als die Validierer des Netzwerks, damals Bergleute, nie etwas miteinander koordinieren mussten. Sie haben einen Block produziert und ihn an das Netzwerk gesendet und sind weitergezogen. Tatsächlich war es kein Konsens über vereinbarte Zustimmung. Es war ein Konsens über offensichtliche Zustimmung zu dem, was passiert war. Was interessante Änderungen sind, wenn die Architektur komplexer wird und wir uns von einem einfachen Taschenrechner wie Bitcoin mit einem Hauptbuch zu einem tatsächlichen virtuellen Computer nähern, ist, dass in jedem Stadium die Konnektivität der Teilnehmer, die Sicherheit und Blockproduktion gewährleisten, zugenommen hat. Denn tatsächlich hat niemand, der sein Risiko eingegangen ist, derjenige, der diese Sicherheit gewährleistet und durch die Verarbeitung Ihrer Transaktionen verdienen möchte, etwas zu verlieren, im Gegensatz zu Proof of Work. Bei Proof of Work haben Sie die Ausrüstung gekauft, ja, Sie haben Geld investiert, Sie haben Strom verbraucht, aber es gibt tatsächlich keinen Schutz dagegen, dass Sie das Netzwerk mit Ihrer Leistung angreifen können, derselbe 51%-Angriff, bei dem jemand mit vielen Minern versuchen kann, die Kette neu zu schreiben.",
  "Now we are talking about proof of stake, where a deposit is already made, and if you do something wrong, a part will be withdrawn from it, as a penalty. All nodes, absolutely, in all architectures that I currently observe, mechanisms for messaging between validators began to appear quickly at the block preparation stage. In Polkadot, it is no different. Any validator of a separate parachain that collects a block knows the addresses or already has established contact with another 15-63 validators who are with you on this epoch, on some temporary period, as validators, and each of them randomly becomes a block producer at some point. But being appointed as a producer does not negate a very important component of this process. You do not stop interacting with the other participants. There is always a pool of validators assigned to a specific epoch, to a certain time slot, for validating a particular parachain or segment of the world computer. Regardless of whether you are a validator-controller specifically assigned to produce the next block in the world computer of this segment, you still stay in touch with the other validators, and you have constant contact with them.": "Jetzt sprechen wir über den Nachweis des Einsatzes, bei dem bereits eine Einzahlung erfolgt ist, und wenn Sie etwas falsch machen, wird ein Teil davon abgezogen, als Strafe. Alle Knoten, absolut, in allen Architekturen, die ich derzeit beobachte, begannen Mechanismen für die Kommunikation zwischen Validatoren schnell in der Blockvorbereitungsphase zu erscheinen. Bei Polkadot ist es nicht anders. Jeder Validator einer separaten Parachain, der einen Block sammelt, kennt die Adressen oder hat bereits Kontakt zu weiteren 15-63 Validatoren, die mit Ihnen in diesem Zeitalter, für einen bestimmten Zeitraum, als Validatoren sind, und jeder von ihnen wird zufällig zu einem Blockproduzenten zu einem bestimmten Zeitpunkt. Aber die Ernennung zum Produzenten hebt nicht eine sehr wichtige Komponente dieses Prozesses auf. Sie hören nicht auf, mit den anderen Teilnehmern zu interagieren. Es gibt immer eine Gruppe von Validatoren, die einem bestimmten Zeitalter, einem bestimmten Zeitschlitz, zur Validierung einer bestimmten Parachain oder eines Segments des Weltcomputers zugewiesen sind. Unabhängig davon, ob Sie ein Validator-Controller sind, der speziell damit beauftragt ist, den nächsten Block im Weltcomputer dieses Segments zu produzieren, bleiben Sie dennoch in Kontakt mit den anderen Validatoren und haben ständigen Kontakt zu ihnen.",
  "Why is this constant contact necessary? It turns out to be quite simple. We do not want, when we move into the inner part, to be afraid or worry that we performed any of the operations incorrectly. As surprising as it may seem, it is beneficial for any validator, before moving on, to first turn to their colleagues assigned to validation and ask them to double-check the calculations. This check is informal, so even if we do not use any logging into an immutable database of requests for verification and the results of this verification, the appointed controller, after talking to the pool of validators, still collects additional responses from all validators assigned to this parachain or network segment. Together with additional confirmations, the controller moves on to the next stage. But even here, it's not quite as simple. At this stage, another process has to be performed. It is important to note that at this stage, our block of information is still a candidate block, and settlement of information is already taking place in the storage. Neither at the very end, nor after we have created and sealed the block and attached it with an archiver in the final part, namely here, in this middle part where all the calculations are actually performed, does the information get saved in the storage. Therefore, our controller, in addition to talking to their colleagues, also ensures the storage of data in some storage, which is also quite metaphysical because the moment you communicate with other validators, this storage gets filled. How is this checked? We will need to move on to the next stage.": "Warum ist dieser ständige Kontakt notwendig? Es stellt sich heraus, dass es ziemlich einfach ist. Wir möchten nicht, wenn wir in den inneren Teil übergehen, Angst haben oder uns Sorgen machen, dass wir eine der Operationen falsch ausgeführt haben. So überraschend es auch sein mag, es ist für jeden Validator vorteilhaft, bevor er weitergeht, sich zuerst an seine Kollegen zu wenden, die mit der Validierung beauftragt sind, und sie zu bitten, die Berechnungen zu überprüfen. Diese Überprüfung ist informell, daher sammelt der beauftragte Controller nach dem Gespräch mit dem Pool der Validator zusätzliche Antworten von allen Validatoren, die dieser Parachain oder diesem Netzwerksegment zugewiesen sind. Zusammen mit zusätzlichen Bestätigungen geht der Controller zur nächsten Stufe über. Aber auch hier ist es nicht ganz so einfach. In diesem Stadium muss ein weiterer Prozess durchgeführt werden. Es ist wichtig zu beachten, dass in diesem Stadium unser Informationsblock immer noch ein Kandidatenblock ist und die Abwicklung von Informationen bereits im Speicher stattfindet. Weder am Ende noch nachdem wir den Block erstellt und versiegelt und ihn mit einem Archivar im letzten Teil verbunden haben, nämlich hier, in diesem mittleren Teil, wo alle Berechnungen tatsächlich durchgeführt werden, werden die Informationen im Speicher gespeichert. Daher stellt unser Controller neben dem Gespräch mit seinen Kollegen auch die Speicherung von Daten in einem Speicher sicher, was auch ziemlich metaphysisch ist, denn in dem Moment, in dem Sie mit anderen Validatoren kommunizieren, wird dieser Speicher gefüllt. Wie wird das überprüft? Wir müssen zur nächsten Stufe übergehen.",
  "In summary, to complete the middle part, let's look again. We still have only a candidate block at the very beginning. Yes, all transactions are roughly calculated somewhere at the bus stop, everyone has taken their seats according to their tickets. We have passed the first boundary, which is essentially direct established contact between validators and block collators. In Ethereum and Polkadot, these are slightly different schemes now. But everything that happens on the left side at the very beginning does not provide cybersecurity for data and calculations. It's just preparation. Once we have passed and entered the environment of the validators' attention, work with the block of information in the world computer begins. A randomly selected validator, in our case, with a bus route - a controller, actually goes through each of the seats, checks the ticket, checks and performs all the calculations that were made, gathers all the information into a tree. The resulting root node of this tree becomes the header of the proposed block. The validator who actually performs all the calculations with this block of information communicates with the other participants who perform a similar function for the same route in an undefined time slot. And while communicating with them and asking them to verify all the calculations, we are actually filling a certain storage of data in the network. It is not a specific physical storage; there is no specific IP address, no specific hard drive onto which they all load through some VPN or login and password scheme, of course not. In the process of communicating with other validators, data remains on their local machines, and this data will further participate in the transformation of this candidate into a new block of information. In essence, the sealed block that will be settled in the relay chain is collected. We have assembled a block. All the metadata around the calculations is already filled, which means we can try to move on to the next frontier.": "Zusammenfassend, um den mittleren Teil abzuschließen, schauen wir noch einmal. Wir haben immer noch nur einen Kandidatenblock ganz am Anfang. Ja, alle Transaktionen werden irgendwo an der Bushaltestelle grob berechnet, jeder hat gemäß seiner Tickets seinen Platz eingenommen. Wir haben die erste Grenze überschritten, die im Wesentlichen den direkten Kontakt zwischen Validatoren und Blockcollators herstellt. In Ethereum und Polkadot sind dies jetzt leicht unterschiedliche Schemata. Aber alles, was am Anfang auf der linken Seite passiert, bietet keine Cybersicherheit für Daten und Berechnungen. Es ist nur Vorbereitung. Sobald wir die Aufmerksamkeit der Validatoren erlangt haben und in die Umgebung eingetreten sind, beginnt die Arbeit mit dem Block von Informationen im Weltcomputer. Ein zufällig ausgewählter Validator, in unserem Fall mit einer Busroute - ein Controller, geht tatsächlich durch jeden der Sitze, überprüft das Ticket, überprüft und führt alle Berechnungen durch, sammelt alle Informationen in einem Baum. Der resultierende Wurzelknoten dieses Baums wird zum Header des vorgeschlagenen Blocks. Der Validator, der tatsächlich alle Berechnungen mit diesem Block von Informationen durchführt, kommuniziert mit den anderen Teilnehmern, die eine ähnliche Funktion für dieselbe Route in einem undefinierten Zeitschlitz ausführen. Und während der Kommunikation mit ihnen und der Aufforderung, alle Berechnungen zu überprüfen, füllen wir tatsächlich einen bestimmten Datenspeicher im Netzwerk. Es handelt sich nicht um einen spezifischen physischen Speicher; es gibt keine spezifische IP-Adresse, keine spezifische Festplatte, auf die sie alle über ein VPN oder ein Login- und Passwortschema laden, natürlich nicht. Im Prozess der Kommunikation mit anderen Validatoren verbleiben die Daten auf ihren lokalen Maschinen, und diese Daten werden weiterhin an der Transformation dieses Kandidaten zu einem neuen Block von Informationen teilnehmen. Im Wesentlichen wird der versiegelte Block, der sich im Relay-Chain niederlassen wird, gesammelt. Wir haben einen Block zusammengestellt. Alle Metadaten rund um die Berechnungen sind bereits ausgefüllt, was bedeutet, dass wir versuchen können, zur nächsten Grenze überzugehen.",
  "At this moment, let's delve into the passage of the next boundary. The most crucial aspect at the final stage becomes the block header. We are less concerned with the execution of computations; we can simplify our perspective here, as computations may vary based on the architecture, whether it's Ethereum or Polkadot. The key point is that, on the intermediate stage, from what I observe in the theory and practice of implementing the world computer concept, most computations happen at an intermediate level. The last level remains only to execute essential checks. Almost all these checks in a multi-chain architecture are related to the concatenation or merging of block headers into one block.": "In diesem Moment wollen wir uns in die Passage der nächsten Grenze vertiefen. Der entscheidendste Aspekt in der Endphase wird der Blockheader. Wir machen uns weniger Sorgen um die Ausführung von Berechnungen; wir können hier unsere Perspektive vereinfachen, da sich die Berechnungen je nach Architektur, ob Ethereum oder Polkadot, unterscheiden können. Der Schlüsselpunkt ist, dass in der Zwischenphase, basierend auf dem, was ich in der Theorie und Praxis bei der Implementierung des Weltcomputerkonzepts beobachte, die meisten Berechnungen auf einer Zwischenebene stattfinden. Die letzte Ebene dient nur zur Ausführung wesentlicher Überprüfungen. Fast alle diese Überprüfungen in einer Multi-Chain-Architektur beziehen sich auf die Verkettung oder Zusammenführung von Blockheadern zu einem Block.",
  "In the final part of our journey, the most important element in the world computer's information block becomes the cornerstone – the header. The second component is more about meta-information. If the header is the actual result of all computations, the additional meta-information being transmitted consists of receipts and signatures of the validators who participated in the intermediate stage of this process. At the final stage, we can visualize the whole picture solely as the assembly of the same tree, not as a list of transactions. In the relay chain's final part, the crucial aspect is the assembly of headers from many similar processes, but linked to different segments of the world computer, different parachains.": "Im letzten Teil unserer Reise wird das wichtigste Element im Informationsblock des Weltcomputers der Eckpfeiler – der Header. Die zweite Komponente dreht sich mehr um Meta-Informationen. Wenn der Header das tatsächliche Ergebnis aller Berechnungen ist, besteht die zusätzliche übertragene Meta-Information aus Quittungen und Signaturen der Validatoren, die an der Zwischenphase dieses Prozesses teilgenommen haben. In der Endphase können wir das Gesamtbild allein als die Montage des gleichen Baums visualisieren, nicht als Liste von Transaktionen. Im letzten Teil der Relay-Chain ist der entscheidende Aspekt die Montage von Headern aus vielen ähnlichen Prozessen, die jedoch mit verschiedenen Segmenten des Weltcomputers, verschiedenen Parachains, verbunden sind.",
  "Each parachain, each set of validators – we've discussed one example, but in reality, such block preparations for parachains happen 30-40 times. The number of parachain slots or the number of L2 networks in Ethereum will result in a similar number of processes with a similar architecture. However, in the final stage, we will see an approximately identical picture everywhere – how the block header will be formed from a multitude of headers from other blocks. In this process, we need to introduce one more entity and jump back across the boundary to the second stage.": "Jede Parachain, jede Gruppe von Validatoren – wir haben ein Beispiel besprochen, aber in Wirklichkeit geschehen solche Blockvorbereitungen für Parachains 30-40 Mal. Die Anzahl der Parachain-Slots oder die Anzahl der L2-Netzwerke in Ethereum wird zu einer ähnlichen Anzahl von Prozessen mit einer ähnlichen Architektur führen. In der Endphase werden wir jedoch überall ein annähernd identisches Bild sehen – wie der Blockheader aus einer Vielzahl von Headern aus anderen Blöcken gebildet wird. In diesem Prozess müssen wir eine weitere Entität einführen und über die Grenze zur zweiten Phase zurückkehren.",
  "Finalizers. In fact, they are also validators, but relay chain validators. In the Polkadot architecture, we have a thousand validators divided into two groups. The first, a very small group, is responsible only for forming the block header and a new block consisting of the headers of the State of the States blocks. The second group – parachain validators – is further divided into many subgroups, but this group is called parachain validators. In L2 networks above Ethereum, this story will eventually gain more understanding, more denominators. For now, let's focus on the Polkadot architecture. Finalizers, besides checking an additional set of meta-information and rechecking a validator with a specific ID, randomly chosen to generate this block of all blocks, also help recheck meta-information, check, and assemble all headers into one. It's a bit complex, yes, if we look at it from the perspective of tree assembly.": "Finalisierer. Tatsächlich sind sie auch Validatoren, aber Relay-Chain-Validatoren. In der Polkadot-Architektur haben wir tausend Validatoren, die in zwei Gruppen unterteilt sind. Die erste, eine sehr kleine Gruppe, ist nur für die Bildung des Blockheaders und eines neuen Blocks zuständig, der aus den Headern der Zustandsblöcke besteht. Die zweite Gruppe – Parachain-Validatoren – ist weiter in viele Untergruppen unterteilt, aber diese Gruppe wird Parachain-Validatoren genannt. In L2-Netzwerken über Ethereum wird diese Geschichte letztendlich mehr Verständnis, mehr Nenner gewinnen. Lassen Sie uns uns vorerst auf die Polkadot-Architektur konzentrieren. Finalisierer helfen neben der Überprüfung eines zusätzlichen Satzes von Meta-Informationen und der erneuten Überprüfung eines Validierers mit einer spezifischen ID, der zufällig ausgewählt wurde, um diesen Block aus allen Blöcken zu generieren, auch bei der erneuten Überprüfung von Meta-Informationen, der Überprüfung und Montage aller Header zu einem. Es ist etwas komplex, ja, wenn wir es aus der Perspektive der Baummontage betrachten.",
  "In addition to this, in the Polkadot architecture and in Ethereum with the latest changes, a data availability check takes place. For this, finalizers visit parachain validators and try to request actual information about each block stored in the network. If they receive data from at least 1/3 of the validators, using technology that allows redundant storage of information, and subsequently, if someone loses it, one or two or three validators can still restore it, there is a critical threshold at 1/3. If 1/3 of the nodes respond and say that we have data about the block being produced, finalizers tell the block that it is already a fully formed information block, that all computations have been done correctly, that we have already taken the header of this block and combined it with someone else's headers from other segments of the network. We have already formed the main header of the entire network. After that, finalizers place many checkmarks on the final block, which combines all performed computations.": "Zusätzlich dazu findet in der Polkadot-Architektur und in Ethereum mit den neuesten Änderungen eine Datenverfügbarkeitsprüfung statt. Dafür besuchen Finalisierer Parachain-Validatoren und versuchen, tatsächliche Informationen über jeden im Netzwerk gespeicherten Block anzufordern. Wenn sie Daten von mindestens 1/3 der Validatoren erhalten, die Technologie verwenden, die redundante Speicherung von Informationen ermöglicht, und anschließend, wenn jemand sie verliert, können ein, zwei oder drei Validatoren sie immer noch wiederherstellen, gibt es einen kritischen Schwellenwert von 1/3. Wenn 1/3 der Knoten antworten und sagen, dass wir Daten über den produzierten Block haben, teilen die Finalisierer dem Block mit, dass es sich bereits um einen vollständig geformten Informationsblock handelt, dass alle Berechnungen korrekt durchgeführt wurden, dass wir bereits den Header dieses Blocks genommen und mit den Headern anderer Segmente des Netzwerks kombiniert haben. Wir haben bereits den Hauptheader des gesamten Netzwerks gebildet. Danach setzen die Finalisierer viele Häkchen auf den endgültigen Block, der alle durchgeführten Berechnungen kombiniert.",
  "Currently, this is the situation from the perspective of the most engineering-implemented multi-chain heterogeneous ecosystem, which is Polkadot. It is the most engineering-implemented multi-chain heterogeneous ecosystem, not too far from Ethereum. I would like to focus on the comparison, and if someone is interested in understanding how information blocks flow in Ethereum with L2 networks, you can try to do that now. I will return to this question when some elements of Ethereum, in terms of heterogeneity and multi-chain aspects, are completed. It might take 1-2 years, and then we can build such a picture. Nevertheless, we can generally accept a scheme with three main stages:": "Derzeit ist dies die Situation aus der Perspektive des am meisten ingenieurtechnisch umgesetzten Multi-Chain-heterogenen Ökosystems, das Polkadot ist. Es ist das am meisten ingenieurtechnisch umgesetzte Multi-Chain-heterogene Ökosystem, nicht allzu weit von Ethereum entfernt. Ich möchte mich auf den Vergleich konzentrieren, und wenn jemand daran interessiert ist zu verstehen, wie Informationsblöcke in Ethereum mit L2-Netzwerken fließen, kann er das jetzt versuchen. Ich werde zu dieser Frage zurückkehren, wenn einige Elemente von Ethereum in Bezug auf Heterogenität und Multi-Chain-Aspekte abgeschlossen sind. Es könnte 1-2 Jahre dauern, und dann können wir ein solches Bild erstellen. Dennoch können wir im Allgemeinen ein Schema mit drei Hauptstufen akzeptieren:",
  "**1. Formation of a candidate for the information block:**": "**1. Bildung eines Kandidaten für den Informationsblock:**",
  "In this stage, the initial candidate for the information block is formed.": "In diesem Stadium wird der anfängliche Kandidat für den Informationsblock gebildet.",
  "**2. Execution of all computations, data storage, data availability, rechecking with other nodes, ensuring that all state transitions are performed correctly according to specific algorithms, and storing these algorithms in the main citadel:**": "**2. Ausführung aller Berechnungen, Datenspeicherung, Datenverfügbarkeit, Überprüfung mit anderen Knoten, Sicherstellung, dass alle Zustandsübergänge gemäß spezifischer Algorithmen korrekt durchgeführt werden, und Speicherung dieser Algorithmen in der Hauptzitadelle:**",
  "This stage involves the actual execution of computations, saving data to certain layers, ensuring data availability, rechecking with other nodes to confirm that all state transitions are in accordance with algorithms stored somewhere in the main citadel.": "In diesem Stadium erfolgt die tatsächliche Ausführung der Berechnungen, das Speichern von Daten in bestimmten Schichten, die Sicherstellung der Datenverfügbarkeit, die Überprüfung mit anderen Knoten, um zu bestätigen, dass alle Zustandsübergänge gemäß Algorithmen erfolgen, die irgendwo in der Hauptzitadelle gespeichert sind.",
  "**3. Finalization, which will not recheck the computations but will verify the meta-information, how this meta-information is stored. It will then assemble the final block, which is the state of the states, and release it as a common information block for the entire segmented multi-chain network:**": "**3. Finalisierung, die die Berechnungen nicht erneut überprüfen wird, sondern die Meta-Informationen überprüfen wird, wie diese Meta-Informationen gespeichert sind. Es wird dann den endgültigen Block zusammenstellen, der der Zustand der Zustände ist, und ihn als gemeinsamen Informationsblock für das gesamte segmentierte Multi-Chain-Netzwerk veröffentlichen:**",
  "The final stage involves checking the meta-information, verifying how this meta-information is stored, assembling the final block (state of the states), and releasing it as a common information block for the entire segmented multi-chain network.": "Das abschließende Stadium beinhaltet die Überprüfung der Meta-Informationen, die Überprüfung, wie diese Meta-Informationen gespeichert sind, das Zusammenstellen des endgültigen Blocks (Zustand der Zustände) und das Veröffentlichen als gemeinsamen Informationsblock für das gesamte segmentierte Multi-Chain-Netzwerk.",
  "At this point, we can say that our information is saved. It has passed through the heart, the heart has executed its data transfer correctly, and we can already use the output values. Some will use them to open a smart-contract-purchased apartment with a smart lock, while others might show off their NFT, just received for 10 ethers.": "An diesem Punkt können wir sagen, dass unsere Informationen gespeichert sind. Sie sind durch das Herz gegangen, das Herz hat seinen Datentransfer korrekt ausgeführt, und wir können bereits die Ausgabewerte verwenden. Einige werden sie verwenden, um eine mit einem intelligenten Schloss gekaufte Wohnung zu öffnen, während andere vielleicht ihr gerade für 10 Ether erhaltenes NFT präsentieren.",
  "In general, this is approximately how it works. This concludes the theoretical part. I think it took about 2 hours, and ahead of us are practical sessions that I will be recording over the next few months. They will help us understand the observed data from the console window, decentralized applications, block explorers, where we will gradually understand how all these theoretical numbers and letters actually look in implementation using Polkadot as an example. I will also start getting hands-on with implementations at the L2 level using one of the well-known frameworks for building L2. Thank you to everyone who has been watching.": "Im Allgemeinen funktioniert es ungefähr so. Damit endet der theoretische Teil. Ich denke, es hat etwa 2 Stunden gedauert, und vor uns liegen praktische Sitzungen, die ich in den nächsten Monaten aufzeichnen werde. Sie werden uns helfen, die beobachteten Daten aus dem Konsolenfenster, dezentralen Anwendungen, Block-Explorern zu verstehen, wo wir nach und nach verstehen werden, wie all diese theoretischen Zahlen und Buchstaben tatsächlich in der Implementierung unter Verwendung von Polkadot als Beispiel aussehen. Ich werde auch damit beginnen, praktische Erfahrungen mit Implementierungen auf der L2-Ebene zu sammeln, indem ich eines der bekannten Frameworks für den Aufbau von L2 verwende. Vielen Dank an alle, die zugeschaut haben."
}