{
  "Part 3: Emergence of the World Computer": "Parte 3: Emergência do Computador Mundial",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.\"": "Na terceira parte intitulada \"Emergência do Computador Mundial,\" tentaremos, camada por camada, recriar a implementação de engenharia do computador mundial usando exemplos do Ethereum e Polkadot, como antes.",
  "Learn": "Aprenda",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.": "Na terceira parte intitulada \"Emergência do Computador Mundial,\" tentaremos, camada por camada, recriar a implementação de engenharia do computador mundial usando exemplos do Ethereum e Polkadot, como antes.",
  "Let's start with Ethereum. Ethereum began in 2015 with a state that can be characterized as a combination of the proof-of-work consensus algorithm, enabling the world computer to exist in a decentralized state (as discussed in Part 2). Additionally, the Ethereum Virtual Machine (EVM) was introduced, serving as a Turing-complete computational machine. Together, these two elements formed the first version of the world computer, sometimes referred to as a precursor. Within this context, decentralized applications, or smart contracts, began to emerge.": "Vamos começar com o Ethereum. O Ethereum começou em 2015 com um estado que pode ser caracterizado como uma combinação do algoritmo de consenso de prova de trabalho, permitindo que o computador mundial exista em um estado descentralizado (como discutido na Parte 2). Além disso, a Máquina Virtual Ethereum (EVM) foi introduzida, servindo como uma máquina computacional completa de Turing. Juntos, esses dois elementos formaram a primeira versão do computador mundial, às vezes referido como um precursor. Dentro deste contexto, aplicativos descentralizados, ou contratos inteligentes, começaram a surgir.",
  "Over the next 5 years, Ethereum lived a relatively unchanged life, undergoing some engineering tunings, such as a continuous increase in gas limits, with the exception of events like the Shanghai fork. Notably, during the second DEFCON held in Shanghai, a denial-of-service attack exploited a function in the virtual machine that consumed minimal gas but triggered significant computations on the Ethereum network. This led to memory overflow, effectively disrupting an entire Ethereum node. This incident highlights the intricate details that arise when dealing with a large and abstract solution like creating a virtual machine.": "Nos próximos 5 anos, o Ethereum viveu uma vida relativamente inalterada, passando por alguns ajustes de engenharia, como um aumento contínuo nos limites de gás, com exceção de eventos como o fork de Xangai. Notavelmente, durante o segundo DEFCON realizado em Xangai, um ataque de negação de serviço explorou uma função na máquina virtual que consumia gás mínimo, mas acionava cálculos significativos na rede Ethereum. Isso levou a um estouro de memória, interrompendo efetivamente um nó Ethereum inteiro. Este incidente destaca os detalhes intrincados que surgem ao lidar com uma solução grande e abstrata como a criação de uma máquina virtual.",
  "Moving forward, a significant shift occurred around the end of the decade, particularly in 2020, with the advent of Ethereum 2.0. However, Ethereum 2.0 has now been deprecated, and I would characterize the real breakthrough as starting around 2019-2020. During this period, there was a true technological breakthrough in Ethereum, moving towards the concept of Ethereum 2.0. The moment of engineering change in Ethereum's architecture can be considered the event known as \"the merge,\" where the functionalities of the beacon chain were combined. The merge marked a significant shift in the paradigm of Ethereum, transitioning it into a slightly different state than what was on the board. The actual engineering change in Ethereum's architecture can be associated with \"the merge,\" where the functionalities of the beacon chain were integrated. For a detailed history of this, you can refer to the ethereum.org website, which provides an excellent article on the coexistence of the traditional Ethereum blockchain with the parallel blockchain launched in 2015 and the Ethereum Virtual Machine.": "Avançando, ocorreu uma mudança significativa por volta do final da década, particularmente em 2020, com o advento do Ethereum 2.0. No entanto, o Ethereum 2.0 agora foi descontinuado, e eu caracterizaria a verdadeira inovação como começando por volta de 2019-2020. Durante este período, houve uma verdadeira inovação tecnológica no Ethereum, avançando para o conceito de Ethereum 2.0. O momento da mudança de engenharia na arquitetura do Ethereum pode ser considerado o evento conhecido como \"a fusão,\" onde as funcionalidades da cadeia de beacons foram combinadas. A fusão marcou uma mudança significativa no paradigma do Ethereum, transicionando para um estado ligeiramente diferente do que estava no quadro. A mudança real de engenharia na arquitetura do Ethereum pode ser associada à \"fusão,\" onde as funcionalidades da cadeia de beacons foram integradas. Para uma história detalhada disso, você pode consultar o site ethereum.org, que fornece um excelente artigo sobre a coexistência do blockchain tradicional do Ethereum com o blockchain paralelo lançado em 2015 e a Máquina Virtual Ethereum.",
  "When the merge occurred, we witnessed a new architectural representation, both at the network level and for individual nodes interacting with the Ethereum network. What was the actual change? For many, the merge signifies the transition from proof-of-work to proof-of-stake, which is indeed significant. It implies increased efficiency and fine-tuning, but it's still a tuning relative to one of the parameters. However, the more noteworthy internal engineering change for each network client was the split. There was no longer a single specific network client or a monolithic architecture. Instead, we got two components of a single node interacting with the Ethereum network.": "Quando ocorreu a fusão, testemunhamos uma nova representação arquitetônica, tanto no nível da rede quanto para os nós individuais interagindo com a rede Ethereum. Qual foi a mudança real? Para muitos, a fusão significa a transição do proof-of-work para o proof-of-stake, o que é de fato significativo. Isso implica em aumento de eficiência e ajustes finos, mas ainda é um ajuste relativo a um dos parâmetros. No entanto, a mudança de engenharia interna mais notável para cada cliente de rede foi a divisão. Não havia mais um cliente de rede específico ou uma arquitetura monolítica. Em vez disso, obtivemos dois componentes de um único nó interagindo com a rede Ethereum.",
  "The first part, which I labeled \"beacon chain\" on the diagram, essentially represents a collective image of all the innovations that came into the Ethereum client at the moment of the merge. The second part is the preserved virtual machine. Nevertheless, it's worth adding something here too. Dialogues truly began about replacing the virtual machine, which was exclusively tailored to work with smart contracts and smart contracts in a specific language—Solidity. This is because, by 2015, there were practically no interpreters left for smart contracts in languages other than Solidity, and the architecture appeared somewhat one-sided from the perspective of an Ethereum programmer. You learn a snippet of JavaScript in the form of Solidity, write smart contract code on it, and get your DApp, like Uniswap, for example.": "A primeira parte, que eu rotulei como \"cadeia de faróis\" no diagrama, representa essencialmente uma imagem coletiva de todas as inovações que entraram no cliente Ethereum no momento da fusão. A segunda parte é a máquina virtual preservada. No entanto, vale a pena acrescentar algo aqui também. Os diálogos realmente começaram sobre a substituição da máquina virtual, que foi exclusivamente projetada para trabalhar com contratos inteligentes e contratos inteligentes em uma linguagem específica - Solidity. Isso ocorre porque, em 2015, praticamente não havia mais intérpretes para contratos inteligentes em idiomas diferentes de Solidity, e a arquitetura parecia um tanto unilateral do ponto de vista de um programador Ethereum. Você aprende um trecho de JavaScript na forma de Solidity, escreve código de contrato inteligente nele e obtém seu DApp, como Uniswap, por exemplo.",
  "Since the emergence of a more complex Ethereum architecture, discussions have revolved around the idea that the virtual machine, which existed as a somewhat monolithic element from 2015, can also be replaced in the new architecture. The conversation shifted towards replacing it with something like WebAssembly (Wasm) or a more interesting solution from the perspective of writing code for the world computer. You could say, \"Wasm with a question mark.\"": "Desde o surgimento de uma arquitetura Ethereum mais complexa, as discussões giraram em torno da ideia de que a máquina virtual, que existia como um elemento um tanto monolítico desde 2015, também pode ser substituída na nova arquitetura. A conversa mudou para substituí-la por algo como WebAssembly (Wasm) ou uma solução mais interessante do ponto de vista da escrita de código para o computador mundial. Você poderia dizer, \"Wasm com um ponto de interrogação.\"",
  "From the perspective of the Beacon Chain, it indeed operates on proof-of-stake, but what's more interesting is the inclusion of Gasper. This represents a modification of the original ideas about Casper. Casper, often referred to as the friendly ghost finality gadget, was introduced, perhaps even as early as Defcon 3 or 4, and maybe even discussed at Defcon 2—I don't recall precisely. But at the EthCC conference in Paris, which definitely took place in 2018, Vlad Zamfir and Vitalik, from different rooms, were discussing the emergence of Casper as a friendly ghost, overseeing participants in proof-of-stake and coming to the aid of the network when a node misbehaves. From this idea of Casper, Gasper emerges. Without delving into terminology too much, the consensus algorithm undergoes a shift, changing not only in terms of simplicity but also becoming more complex, similar to Polkadot. As I mentioned earlier, Polkadot has two consensus algorithms, Babe and Grandpa. Similarly, with Ethereum's Beacon Chain functionality, achieving consensus and finality is not as instantaneous. It involves epochs, and the network operates on a more complex scenario, reaching a state that is already somewhat dynamic, not frozen, and is essentially carved in stone.": "Do ponto de vista da Beacon Chain, ela realmente opera no proof-of-stake, mas o que é mais interessante é a inclusão do Gasper. Isso representa uma modificação das ideias originais sobre Casper. Casper, frequentemente referido como o dispositivo de finalidade do fantasma amigável, foi introduzido, talvez até mesmo tão cedo quanto Defcon 3 ou 4, e talvez até mesmo discutido em Defcon 2 - não me lembro exatamente. Mas na conferência EthCC em Paris, que definitivamente ocorreu em 2018, Vlad Zamfir e Vitalik, de salas diferentes, estavam discutindo o surgimento de Casper como um fantasma amigável, supervisionando os participantes no proof-of-stake e vindo em auxílio da rede quando um nó se comporta mal. A partir dessa ideia de Casper, surge o Gasper. Sem entrar muito na terminologia, o algoritmo de consenso passa por uma mudança, mudando não apenas em termos de simplicidade, mas também se tornando mais complexo, semelhante ao Polkadot. Como mencionei anteriormente, o Polkadot tem dois algoritmos de consenso, Babe e Grandpa. Da mesma forma, com a funcionalidade da Beacon Chain do Ethereum, alcançar consenso e finalidade não é tão instantâneo. Envolve épocas, e a rede opera em um cenário mais complexo, alcançando um estado que já é um tanto dinâmico, não congelado, e essencialmente esculpido em pedra.",
  "What can be added in relation to 2024? For me, it was a prolonged observation and an attempt to understand whether Ethereum would eventually implement sharding or not. Sharding is the ability to exist not with a single blockchain but with multiple blockchains within one network. As I observed the merge and the simultaneous rise of Layer 2 (L2) networks, questions arose in my mind about whether sharding would indeed materialize. Sharding seemed interesting to me due to its homogeneity—having multiple chains that are almost identical, lacking any specific characteristics. It appeared to be an interesting approach, but not as flexible as a heterogeneous approach. In L2 networks, even several years ago, I could see the heterogeneity of Ethereum, its ability to work with various types of more specific blockchains. I was curious about the direction it would take—whether sharding, with its homogeneity, would displace L2 solutions or whether L2 solutions with a heterogeneous approach would saturate the Beacon Chain and the main nodes of the Ethereum network.": "O que pode ser adicionado em relação a 2024? Para mim, foi uma observação prolongada e uma tentativa de entender se o Ethereum eventualmente implementaria ou não o sharding. Sharding é a capacidade de existir não com uma única blockchain, mas com várias blockchains dentro de uma rede. Enquanto observava a fusão e o surgimento simultâneo das redes de Camada 2 (L2), surgiram perguntas em minha mente sobre se o sharding realmente se materializaria. O sharding me pareceu interessante devido à sua homogeneidade - ter várias cadeias que são quase idênticas, sem características específicas. Parecia ser uma abordagem interessante, mas não tão flexível quanto uma abordagem heterogênea. Nas redes L2, mesmo há vários anos, eu podia ver a heterogeneidade do Ethereum, sua capacidade de trabalhar com vários tipos de blockchains mais específicas. Eu estava curioso sobre a direção que tomaria - se o sharding, com sua homogeneidade, deslocaria as soluções L2 ou se as soluções L2 com uma abordagem heterogênea saturariam a Beacon Chain e os principais nós da rede Ethereum.",
  "Today, in 2024, based on articles on ethereum.org, it seems that sharding as a concept has been pushed back, and the focus is on helping various L2 networks integrate with the Beacon Chain and align with the main chain's functionality, which is now divided into two elements in the Ethereum network's architecture.": "Hoje, em 2024, com base em artigos em ethereum.org, parece que o sharding como conceito foi adiado, e o foco está em ajudar várias redes L2 a se integrarem com a Beacon Chain e se alinharem com a funcionalidade da cadeia principal, que agora está dividida em dois elementos na arquitetura da rede Ethereum.",
  "Therefore, without delving into the details of how L2 networks are structured—although we'll touch upon that when we fill in the second part of the board—we should imagine that Ethereum is now a kind of Beacon Chain, a beacon, a guiding star for numerous L2 networks. These L2 networks can have more specific functionality, executing their logic according to a set of individual functions. This is somewhat in line with the idea of a Swiss Army knife—not making Ethereum a Swiss Army knife, but L2 networks are starting to differentiate in architecture. They duplicate the functionality of the abstract computing machine of Ethereum but perform it with lower gas costs or within their specific segment. Some are already thinking about tuning and making their L2 layer more efficient, focusing on specific functional capabilities. Thus, in my opinion, we are witnessing the emergence of heterogeneity in the world computer that aimed to be homogeneous. Also, it's essential not to forget that decentralized applications (dApps) still exist within the main blockchain, within that same blockchain that started in 2015. This means that during the merge, during the transition to the new architectural state, there was no wipeout, no erasure of the previous history. All decentralized applications and smart contracts underlying these applications continued to exist, and they continue to exist today, and probably tomorrow. This is a question that we will explore using Polkadot as an example, but there is still a feeling that it will be possible to settle a decentralized application in the Beacon Chain—dApps.": "Portanto, sem aprofundar nos detalhes de como as redes L2 são estruturadas - embora vamos abordar isso quando preenchemos a segunda parte do quadro - devemos imaginar que o Ethereum é agora uma espécie de Beacon Chain, um farol, uma estrela guia para inúmeras redes L2. Essas redes L2 podem ter funcionalidades mais específicas, executando sua lógica de acordo com um conjunto de funções individuais. Isso está um pouco alinhado com a ideia de um canivete suíço - não tornando o Ethereum um canivete suíço, mas as redes L2 estão começando a se diferenciar em arquitetura. Elas duplicam a funcionalidade da máquina de computação abstrata do Ethereum, mas a executam com custos de gás mais baixos ou dentro de seu segmento específico. Alguns já estão pensando em ajustar e tornar sua camada L2 mais eficiente, focando em capacidades funcionais específicas. Assim, na minha opinião, estamos testemunhando o surgimento da heterogeneidade no computador mundial que visava ser homogêneo. Além disso, é essencial não esquecer que as aplicações descentralizadas (dApps) ainda existem dentro da blockchain principal, dentro da mesma blockchain que começou em 2015. Isso significa que durante a fusão, durante a transição para o novo estado arquitet��nico, não houve eliminação, não houve apagamento da história anterior. Todas as aplicações descentralizadas e contratos inteligentes subjacentes a essas aplicações continuaram a existir, e continuam a existir hoje, e provavelmente amanhã. Esta é uma questão que exploraremos usando o Polkadot como exemplo, mas ainda há a sensação de que será possível estabelecer uma aplicação descentralizada na Beacon Chain - dApps.",
  "In summary, let's imagine the engineering implementation of today's Ethereum as a world computer. We have each network node consisting of two parts. The first layer is responsible for the Ethereum Virtual Machine (EVM), the actual functionality of the virtual machine or Turing complete machine, if we talk in theoretical terms. Perhaps we will see the emergence of alternatives to the virtual machine designed in 2015. These alternatives will likely surpass it in terms of more abstract programming possibilities than writing smart contracts in Solidity. Meanwhile, smart contracts in Solidity continue to feel comfortable. If you want to write functionality for the Ethereum main chain without creating any infrastructure on top of Ethereum, without offloading any calculations to make them cheaper, and so on, decentralized applications that you can write as smart contracts can still be housed in Ethereum's main blockchain. At the same time, Beacon Chain functionality has emerged, separating the consensus logic between validators from the main protocol of the computing machine. This allows for additional flexibility in how consensus should work and how it should be further modified without affecting the virtual machine itself. The example of Shanghai and Defcon 2, where a small opcode error caused a shutdown of part of the infrastructure, hints that it would be good to have such complex functionalities separated into two parts.": "Em resumo, vamos imaginar a implementação de engenharia do Ethereum de hoje como um computador mundial. Temos cada nó de rede consistindo em duas partes. A primeira camada é responsável pela Máquina Virtual Ethereum (EVM), a funcionalidade real da máquina virtual ou máquina completa de Turing, se falarmos em termos teóricos. Talvez vejamos o surgimento de alternativas à máquina virtual projetada em 2015. Essas alternativas provavelmente a superarão em termos de possibilidades de programação mais abstratas do que escrever contratos inteligentes em Solidity. Enquanto isso, os contratos inteligentes em Solidity continuam a se sentir confortáveis. Se você deseja escrever funcionalidades para a cadeia principal do Ethereum sem criar qualquer infraestrutura em cima do Ethereum, sem descarregar quaisquer cálculos para torná-los mais baratos, e assim por diante, as aplicações descentralizadas que voc�� pode escrever como contratos inteligentes ainda podem ser hospedadas na blockchain principal do Ethereum. Ao mesmo tempo, a funcionalidade da Beacon Chain surgiu, separando a lógica de consenso entre validadores do protocolo principal da máquina de computação. Isso permite flexibilidade adicional em como o consenso deve funcionar e como deve ser modificado sem afetar a própria máquina virtual. O exemplo de Xangai e Defcon 2, onde um pequeno erro de opcode causou o desligamento de parte da infraestrutura, sugere que seria bom ter tais funcionalidades complexas separadas em duas partes.",
  "What's interesting about the Beacon Chain? It is a more complex, comprehensive algorithm for achieving network synchronicity and finalization with the introduction of concepts such as \"epoch,\" and the presence of a ghost living within the network.": "O que é interessante sobre a Beacon Chain? É um algoritmo mais complexo e abrangente para alcançar a sincronização e finalização da rede com a introdução de conceitos como \"época,\" e a presença de um fantasma vivendo dentro da rede.",
  "Lastly, what is important to consider now is that Ethereum is effectively putting an end to homogeneity, to the idea of getting a hundred identical blockchains working with the same virtual machine, where smart contracts written in Solidity can reside. Instead, various projects are proposing their own architectures or the same virtual machine taken beyond the main blockchain's limits. Alternatively, they are trying to build their more specific application, which, at the level of the Beacon Chain's main chain, is a smart contract written in Solidity. This is the current representation of Ethereum, which did not become Ethereum 2.0. It remains the same Ethereum—a project that once started with proof of work + Turing complete machine, transforming into this architecture.": "Por último, o que é importante considerar agora é que o Ethereum está efetivamente colocando um fim à homogeneidade, à ideia de ter cem blockchains idênticas trabalhando com a mesma máquina virtual, onde contratos inteligentes escritos em Solidity podem residir. Em vez disso, vários projetos estão propondo suas próprias arquiteturas ou a mesma máquina virtual levada além dos limites da blockchain principal. Alternativamente, estão tentando construir sua aplicação mais específica, que, no nível da cadeia principal da Beacon Chain, é um contrato inteligente escrito em Solidity. Esta é a representação atual do Ethereum, que não se tornou Ethereum 2.0. Continua sendo o mesmo Ethereum - um projeto que uma vez começou com prova de trabalho + máquina completa de Turing, transformando-se nesta arquitetura.",
  "Now, let's take a look at how Polkadot emerged and evolved over the last 5 years. Polkadot came into existence five years after Ethereum, born out of the team that developed one of the best clients for Ethereum—Parity. Many might remember their web client, which, compared to Geth and other implementations, was probably much more pleasant to work with, at least from personal experience and the experience of colleagues.": "Agora, vamos dar uma olhada em como o Polkadot surgiu e evoluiu nos últimos 5 anos. O Polkadot surgiu cinco anos após o Ethereum, nascido da equipe que desenvolveu um dos melhores clientes para o Ethereum - Parity. Muitos podem se lembrar de seu cliente web, que, comparado ao Geth e outras implementações, provavelmente era muito mais agradável de trabalhar, pelo menos pela experiência pessoal e a experiência dos colegas.",
  "In the end, after a couple of months of the relay chain's existence without any decentralized application functionality, without the ability to connect your parachain or L2 network, without user capabilities, the network transitioned from an authority state to proof of stake. This gave developers the ability to upload their runtimes.": "No final, após alguns meses da existência da cadeia de retransmissão sem nenhuma funcionalidade de aplicativo descentralizado, sem a capacidade de conectar sua parachain ou rede L2, sem capacidades de usuário, a rede fez a transição de um estado de autoridade para prova de participação. Isso deu aos desenvolvedores a capacidade de fazer upload de seus runtimes.",
  "At this point, it's also interesting to discuss the differences between today's Ethereum and how the central part of Polkadot is structured. From the perspective of the heart, which we've already discussed, the picture will be absolutely the same not only for Ethereum and Polkadot but for any project that wants to be presented as an abstract computing machine. However, from an engineering and architectural standpoint, it's fascinating to observe Beacon Chain & Relay Chain. Here, we have a virtual machine, which has been inherited since 2015, but alternatives are being proposed. In the relay chain, there's the ability to upload your runtime. The runtime is, in fact, your virtual machine. For example, some parachains completely emulate the Ethereum Virtual Machine. It's written as a runtime, meaning you can essentially upload an Ethereum Virtual Machine analog to the parachain level in Polkadot or write more specific logic that works with four or five functions. Recall part one about the ideas— you can write your Swiss Army knife, but it won't require creating the entire infrastructure. You can implement specific functionality with certain functions at the runtime level, put it into the Polkadot relay chain, and the immutability of this runtime will be ensured by Polkadot validators.": "Neste ponto, também é interessante discutir as diferenças entre o Ethereum de hoje e como a parte central do Polkadot é estruturada. Do ponto de vista do coração, que já discutimos, a imagem será absolutamente a mesma não apenas para o Ethereum e o Polkadot, mas para qualquer projeto que queira ser apresentado como uma máquina de computação abstrata. No entanto, do ponto de vista de engenharia e arquitetura, é fascinante observar a Beacon Chain & Relay Chain. Aqui, temos uma máquina virtual, que foi herdada desde 2015, mas estão sendo propostas alternativas. Na cadeia de retransmissão, há a capacidade de fazer upload do seu runtime. O runtime é, na verdade, sua máquina virtual. Por exemplo, algumas parachains emulam completamente a Máquina Virtual Ethereum. É escrito como um runtime, o que significa que você pode essencialmente fazer upload de um análogo da Máquina Virtual Ethereum para o nível de parachain no Polkadot ou escrever lógica mais específica que funcione com quatro ou cinco funções. Lembre-se da parte um sobre as ideias - você pode escrever sua canivete suíço, mas não será necessário criar toda a infraestrutura. Você pode implementar funcionalidades específicas com certas funções no nível de runtime, colocá-las na cadeia de retransmissão do Polkadot e a imutabilidade deste runtime será garantida pelos validadores do Polkadot.",
  "What happens next? Over the course of about a year, a layer of parachains begins to form around the relay chain. In terms of Ethereum implementation, you could say that L2 networks are quite similar to parachains. However, there's one interesting cross-network distinction that I find fascinating in Polkadot, and I'm trying to further understand how it will develop—namely, the second layer of validation and data availability checks. After a couple of years, Polkadot takes a shape like this. It's not just a relay chain where proof-of-stake validators protect the runtime of future parachains; an additional and crucial layer of data validation and availability checking emerges from parachains.": "O que acontece a seguir? Ao longo de cerca de um ano, uma camada de parachains começa a se formar em torno da cadeia de retransmissão. Em termos de implementação do Ethereum, você poderia dizer que as redes L2 são bastante semelhantes às parachains. No entanto, há uma distinção interessante entre redes cruzadas que eu acho fascinante no Polkadot, e estou tentando entender melhor como isso se desenvolverá - ou seja, a segunda camada de validação e verificações de disponibilidade de dados. Após alguns anos, o Polkadot assume uma forma como esta. Não é apenas uma cadeia de retransmissão onde os validadores de prova de participação protegem o tempo de execução das futuras parachains; uma camada adicional e crucial de validação de dados e verificações de disponibilidade emerge das parachains.",
  "As you look at this diagram, try to notice the analogies that arise and the differences in engineering implementation details. So, what does this represent, and how does this scheme compare with Ethereum? We have an L2 project, in this case, with Polkadot, it's a parachain. A parachain also generates information blocks, which then go to the relay chain to be combined and release a relay chain block as the sum of all headers, headers, and more headers. The parachain collects transactions in a block using collators, which are not involved in validation. They don't stake anything in the relay chain; they only use the runtime, which is in the relay chain. They fetch it, apply it to transactions, perform necessary state transitions, form a block, and, crucially, provide proof of validity—a stamp containing cryptographic proofs that the collator correctly assembled the block. This information goes to the external validation ring of the relay chain. In this ring, there are internal validators of Polkadot—parachain collators. Again, they don't stake anything directly from the relay chain's point of view. Parachain implementations sometimes introduce their consensus among collators, and some don't. For example, in Robonomics, implementing a parachain, we find this paradigm more interesting, less burdensome, and it makes the network simpler while still remaining functionally substantial. Any collator, without reaching consensus with anyone—verified by us—can propose a block and some proof to the external layer. This is precisely why blocks are proposed, proofs of block assembly validity are offered, and there's an external ring. We don't need any consensus from parachain validators. Anyone can generate a block and send it, and if this node of the collator sends incorrect information to the parachain validators on the external ring, the validator at this level will reject it. It won't pass into the central part. But let's say the block was provided correctly by the collator. Our transactions got in; the collator calculated them, applying the runtime stored in the relay chain, executed all state transitions, gathered some proof of validity—validity of the assembled block—and passed it to the external ring of the relay chain. Here, every epoch, which is also part of the finalization, every epoch has validators from the relay chain diverging into parachains. Some of them stay in the center, and the others go to parachains. Their number ranges from 16 to 64 validators, and this figure, I believe, will change in the specification—somewhere more, somewhere less. However, parachain validators re-verify the information from one selected group of validators about everything coming from the collator being correct, that work has been done in accordance with the runtime, and that the proof of validity is indeed valid. The selected segment of relay chain validators who already have something staked respond, or rather, chirp among themselves. They respond to the chosen main block producer of the parachain, so to speak, saying,": "Ao olhar para este diagrama, tente notar as analogias que surgem e as diferenças nos detalhes de implementação de engenharia. Então, o que isso representa e como esse esquema se compara com o Ethereum? Temos um projeto L2, neste caso, com o Polkadot, é uma parachain. Uma parachain também gera blocos de informações, que então vão para a cadeia de retransmissão para serem combinados e liberar um bloco de cadeia de retransmissão como a soma de todos os cabeçalhos, cabeçalhos e mais cabeçalhos. A parachain coleta transações em um bloco usando coletores, que não estão envolvidos na validação. Eles não apostam nada na cadeia de retransmissão; eles apenas usam o tempo de execução, que está na cadeia de retransmissão. Eles o buscam, aplicam às transações, realizam transições de estado necessárias, formam um bloco e, crucialmente, fornecem prova de validade - um carimbo contendo provas criptográficas de que o coletor montou corretamente o bloco. Essas informações vão para o anel de validação externo da cadeia de retransmissão. Neste anel, existem validadores internos do Polkadot - coletores de parachain. Novamente, eles não apostam nada diretamente do ponto de vista da cadeia de retransmissão. As implementações de parachain às vezes introduzem seu consenso entre coletores, e algumas não. Por exemplo, no Robonomics, implementando uma parachain, encontramos esse paradigma mais interessante, menos oneroso, e torna a rede mais simples, mantendo-se funcionalmente substancial. Qualquer coletor, sem chegar a um consenso com ninguém - verificado por nós - pode propor um bloco e alguma prova para a camada externa. É exatamente por isso que os blocos são propostos, as provas de validade da montagem do bloco são oferecidas, e há um anel externo. Não precisamos de nenhum consenso dos validadores de parachain. Qualquer um pode gerar um bloco e enviá-lo, e se este nó do coletor enviar informações incorretas para os validadores de parachain no anel externo, o validador neste nível o rejeitará. Não passará para a parte central. Mas digamos que o bloco tenha sido fornecido corretamente pelo coletor. Nossas transações entraram; o coletor as calculou, aplicando o tempo de execução armazenado na cadeia de retransmissão, executou todas as transições de estado, reuniu alguma prova de validade - validade do bloco montado - e passou para o anel externo da cadeia de retransmissão. Aqui, a cada época, que também faz parte da finalização, cada época tem validadores da cadeia de retransmissão divergindo para as parachains. Alguns deles permanecem no centro, e os outros vão para as parachains. Seu número varia de 16 a 64 validadores, e essa figura, acredito, mudará na especificação - em alguns lugares mais, em outros menos. No entanto, os validadores de parachain re-verificam as informações de um grupo selecionado de validadores sobre tudo o que vem do coletor estar correto, que o trabalho foi feito de acordo com o tempo de execução, e que a prova de validade é realmente válida. O segmento selecionado de validadores da cadeia de retransmissão que já têm algo apostado responde, ou melhor, chilreiam entre si. Eles respondem ao produtor principal de bloco escolhido da parachain, por assim dizer, dizendo,",
  "\"Yes, we agree. There are no problems. You can carry it through the entire external ring inside.\"": "\"Sim, concordamos. Não há problemas. Você pode levá-lo por todo o anel externo internamente.\"",
  "And thus, almost all information formed on the parachain collators, with verification on the external ring, enters the internal one. The lower part, not that it's physically at the bottom, still constitutes the external ring—data availability. Data starts to be checked at this stage, meaning that on the external ring, not only the correctness of block assembly is verified, but the process of preparing for distribution within the Polkadot network begins, ensuring that the block information will not be lost in the future. Here, precisely, is what I mentioned in the second part about chunks, like CD RW. At this stage of block preparation for transfer to the internal ring, the data availability layer is formed as a service, something that is currently also attempted by some projects in Ethereum. Some projects put additional redundant information directly into smart contracts, necessary for checking what is happening on the L2 layer and, if necessary, slashing or punishing those who did it incorrectly. It's impossible to overcome the external ring without distributing block information and without rechecking dozens of nodes with stakes laid down on the assumption that the runtime must work correctly.": "E assim, quase todas as informações formadas nos coletores de parachain, com verificação no anel externo, entram no interno. A parte inferior, não que esteja fisicamente no fundo, ainda constitui o anel externo - disponibilidade de dados. Os dados começam a ser verificados nesta fase, o que significa que no anel externo, não apenas a correção da montagem do bloco é verificada, mas o processo de preparação para distribuição dentro da rede Polkadot começa, garantindo que as informações do bloco não sejam perdidas no futuro. Aqui, precisamente, é o que mencionei na segunda parte sobre chunks, como CD RW. Nesta fase de preparação do bloco para transferência para o anel interno, a camada de disponibilidade de dados é formada como um serviço, algo que atualmente também é tentado por alguns projetos no Ethereum. Alguns projetos colocam informações redundantes adicionais diretamente em contratos inteligentes, necessárias para verificar o que está acontecendo na camada L2 e, se necessário, punir ou penalizar aqueles que fizeram incorretamente. É impossível superar o anel externo sem distribuir informações de bloco e sem rechecar dezenas de nós com apostas feitas com base na suposição de que o tempo de execução deve funcionar corretamente.",
  "Thus, information that has passed through the external ring is already quite trustworthy, probably yes, you can say that, and on the internal ring, work is mainly done not with parachain blocks, but their block headers are collected into one big header. That is, from many headers, one header of a relay chain block is assembled—a mechanism of linking in Shared Security, as mentioned in Polkadot, which ensures the security of parachains. One could say that parachains are validated and reach a state where the service exists in a distributed decentralized form on the external ring. In the internal ring, the information that has entered attempts to come together in one hyperblock, which should precisely link everything together. There are no calculations happening there; there is no recalculation of absolutely everything. The assembly of the final block takes place, so to speak, in the current iteration of the world computer, to put a point on the question of whether the transaction has passed in a particular parachain. We must assemble a hyperblock that contains not all the information from the parachains but gathers all the headers verified on the external ring of parachains into one large block. And thus, our world computer in Polkadot operates.": "Assim, as informações que passaram pelo anel externo já são bastante confiáveis, provavelmente sim, você pode dizer isso, e no anel interno, o trabalho é feito principalmente não com blocos de parachain, mas seus cabeçalhos de bloco são coletados em um grande cabeçalho. Ou seja, de muitos cabeçalhos, um cabeçalho de um bloco de cadeia de retransmissão é montado - um mecanismo de ligação em Shared Security, como mencionado no Polkadot, que garante a segurança das parachains. Poderíamos dizer que as parachains são validadas e alcançam um estado em que o serviço existe de forma distribuída descentralizada no anel externo. No anel interno, as informações que entraram tentam se unir em um hiperbloco, que deve ligar tudo precisamente. Não há cálculos acontecendo lá; não há recalculo de absolutamente tudo. A montagem do bloco final acontece, por assim dizer, na iteração atual do computador mundial, para colocar um ponto na questão de se a transação passou em uma parachain específica. Devemos montar um hiperbloco que contenha não todas as informações das parachains, mas reúna todos os cabeçalhos verificados no anel externo das parachains em um grande bloco. E assim, nosso computador mundial no Polkadot opera.",
  "Let's take another look at these two schemes together: relay chain, beacon chain, runtime, secured by proof of stake, where someone stakes their funds to validate that they will always perform their work correctly. There's a virtual machine where you can also stake your funds, and if you perform any computation or state transition not in accordance with the Ethereum Virtual Machine's specification, you'll be penalized.": "Vamos dar mais uma olhada nesses dois esquemas juntos: cadeia de retransmissão, cadeia de farol, tempo de execução, garantido por prova de participação, onde alguém aposta seus fundos para validar que sempre executarão seu trabalho corretamente. Existe uma máquina virtual onde você também pode apostar seus fundos e, se você realizar qualquer computação ou transição de estado que não esteja de acordo com a especificação da Máquina Virtual Ethereum, você será penalizado.",
  "In Polkadot, there's an additional external layer, which seems to be one of the main advantages, such pleasant perks of the engineering implementation that, in my opinion, should be present here. It should appear between L2 networks and the beacon chain, which exists in Ethereum. By the way, some say that the term \"beacon chain\" is dying out again and is misunderstood, but I really like to use it in analogy with the \"relay chain,\" a term from Ethereum's roadmap.": "No Polkadot, há uma camada externa adicional, que parece ser uma das principais vantagens, tais benefícios agradáveis da implementação de engenharia que, na minha opinião, deveriam estar presentes aqui. Deveria aparecer entre as redes L2 e a cadeia de farol, que existe no Ethereum. A propósito, alguns dizem que o termo \"cadeia de farol\" está caindo em desuso novamente e é mal compreendido, mas eu realmente gosto de usá-lo em analogia com a \"cadeia de retransmissão\", um termo do roteiro do Ethereum.",
  "And perhaps one more interesting story in this part of the lecture: so far, we can hardly imagine proper cross-chain messages between L2 networks in Ethereum. Maybe I missed something in the papers, but when you don't have an external ring and issues like collators, paravalidators, and data availability services are not resolved, thinking about how two L2 layers can communicate is challenging. Yet, in Polkadot, it exists. Even horizontally, through the relay chain, meaning directly, one can send a transaction securely from one parachain to another, without trusting any bridges between these two parachains. This is another crucial functionality that will likely need to be implemented at the level of connecting L2 networks. Smart contracts in Ethereum communicate well. We have created many chains of linked smart contracts, where one triggers another. With this, there is no problem. But when we say that almost all applications are moving to the L2 layer in a heterogeneous network, I hear that if you live in a specific area, you won't be able to get out. That's not the case at the level of parachains and implementation in Polkadot. Both architectures are worth watching, as, in my opinion, the engineering implementation follows the mainstream path of becoming a global computer. They differ slightly, but there are many similarities. There's an enormous amount of engineering work everywhere. As we see, human civilization, in the form of a multitude of researchers, engineers, and growing developers with significant resources for further development, is moving roughly in the same direction from the smallest early stage to probably some future establishment of the world's computer, all on the same tracks.": "E talvez mais uma história interessante nesta parte da palestra: até agora, mal podemos imaginar mensagens apropriadas entre redes L2 na Ethereum. Talvez eu tenha perdido algo nos artigos, mas quando não se tem um anel externo e questões como coletores, paravalidadores e serviços de disponibilidade de dados não estão resolvidas, pensar em como duas camadas L2 podem se comunicar é desafiador. No entanto, no Polkadot, isso existe. Mesmo horizontalmente, através da cadeia de retransmissão, ou seja, diretamente, alguém pode enviar uma transação com segurança de uma paracadeia para outra, sem confiar em pontes entre essas duas paracadeias. Esta é outra funcionalidade crucial que provavelmente precisará ser implementada no nível de conexão de redes L2. Os contratos inteligentes na Ethereum se comunicam bem. Criamos muitas cadeias de contratos inteligentes vinculados, onde um aciona o outro. Com isso, não há problema. Mas quando dizemos que quase todas as aplicações estão migrando para a camada L2 em uma rede heterogênea, ouço dizer que se você mora em uma área específica, não conseguirá sair. Isso não acontece no nível das paracadeias e na implementação no Polkadot. Ambas as arquiteturas valem a pena ser observadas, pois, na minha opinião, a implementação de engenharia segue o caminho principal de se tornar um computador global. Elas diferem ligeiramente, mas há muitas semelhanças. Há uma enorme quantidade de trabalho de engenharia em todos os lugares. Como vemos, a civilização humana, na forma de uma multidão de pesquisadores, engenheiros e desenvolvedores em crescimento com recursos significativos para o desenvolvimento futuro, está se movendo aproximadamente na mesma direção desde o menor estágio inicial até provavelmente algum futuro estabelecimento do computador mundial, todos nos mesmos trilhos.",
  "Part 1: The Idea of a World Computer": "Parte 1: A Ideia de um Computador Mundial",
  "This is the first part of a four-part lecture titled \"World Computer in Your Home.\" In the first part, titled \"The Idea of a World Computer,\" I want to analyze and share my own reflections that have, in a broader historical context, gathered around the hashtag \"world computer.\"": "Esta é a primeira parte de uma palestra em quatro partes intitulada \"Computador Mundial em Sua Casa.\" Na primeira parte, intitulada \"A Ideia de um Computador Mundial,\" quero analisar e compartilhar minhas próprias reflexões que, em um contexto histórico mais amplo, se reuniram em torno da hashtag \"computador mundial.\"",
  "To begin with, let's try to gather a generalized understanding of what a world computer is, without delving into terminology or specific technical details. If you take your mobile phone in hand and look at the icons, you can notice that practically every application on the phone has two major segments or areas of operation.": "Para começar, vamos tentar reunir uma compreensão generalizada do que é um computador mundial, sem entrar em terminologia ou detalhes técnicos específicos. Se você pegar seu celular na mão e olhar para os ícones, poderá notar que praticamente todas as aplicações no celular têm dois segmentos principais ou áreas de operação.",
  "The first is the local part, meaning, for example, your calculator or notes application. This is a completely local application that requires almost no external communication. Although even applications like the notes app on an iPhone are a bit more than that, let's focus on the more austere Open Source side of applications for Android phones, so to speak.": "O primeiro é a parte local, ou seja, por exemplo, sua calculadora ou aplicativo de notas. Este é um aplicativo completamente local que requer quase nenhuma comunicação externa. Embora até mesmo aplicativos como o aplicativo de notas em um iPhone sejam um pouco mais do que isso, vamos nos concentrar no lado mais austero de aplicativos de código aberto para telefones Android, por assim dizer.",
  "The second part requires cloud infrastructure, and here, when the question of cloud infrastructure arises, a multitude of quite complex stories begins: who owns this cloud infrastructure, what capabilities do developers have to add features to an application, and in general, how does the user own this application? What capabilities and responsibilities does the user have when dealing with an application that exists not only on their phone but also in some infrastructure beyond their pocket or palm? The world computer is precisely one example of how the developer community responds to these obvious questions. Obvious questions about creating higher-quality applications for your mobile phone, laptop, server, and any other smart device that needs to connect to the network and obtain knowledge from there.": "A segunda parte requer infraestrutura de nuvem e aqui, quando a questão da infraestrutura de nuvem surge, uma infinidade de histórias bastante complexas começa: quem possui essa infraestrutura de nuvem, que capacidades os desenvolvedores têm para adicionar recursos a um aplicativo e, em geral, como o usuário possui esse aplicativo? Que capacidades e responsabilidades o usuário tem ao lidar com um aplicativo que não existe apenas em seu telefone, mas também em alguma infraestrutura além de seu bolso ou palma? O computador mundial é precisamente um exemplo de como a comunidade de desenvolvedores responde a essas perguntas óbvias. Perguntas óbvias sobre a criação de aplicativos de alta qualidade para seu celular, laptop, servidor e qualquer outro dispositivo inteligente que precise se conectar à rede e obter conhecimento de lá.",
  "The world computer is, accordingly, the same cloud, the same infrastructure that exists on the internet, with which developers can interact and publish their applications. As a user, you can install, download, and run them on your PC. However, with one interesting, crucial feature: no one actually owns the infrastructure or cloud of the world computer. There is no specific company, jurisdiction, or individual on Earth who can determine and say whether you can publish your application there or not, whether you have the right to access this world computer infrastructure to receive the provided service. Therefore, the world computer is a cloud in which any developer can place their application, and any user with access solely to the internet network and not to a specific IP address behind a firewall can use the application by paying for computations from their pocket.": "O computador mundial é, consequentemente, a mesma nuvem, a mesma infraestrutura que existe na internet, com a qual os desenvolvedores podem interagir e publicar suas aplicações. Como usuário, você pode instalá-las, baixá-las e executá-las em seu PC. No entanto, com uma característica interessante e crucial: ninguém realmente possui a infraestrutura ou nuvem do computador mundial. Não há uma empresa específica, jurisdição ou indivíduo na Terra que possa determinar e dizer se você pode publicar sua aplicação lá ou não, se você tem o direito de acessar essa infraestrutura de computador mundial para receber o serviço fornecido. Portanto, o computador mundial é uma nuvem na qual qualquer desenvolvedor pode colocar sua aplicação, e qualquer usuário com acesso apenas à rede de internet e não a um endereço IP específico atrás de um firewall pode usar a aplicação pagando pelos cálculos do próprio bolso.",
  "Here's the story in a generalized format. There is no mention of \"blockchain,\" no mention of \"smart contracts,\" but these concepts are underneath. Let's still acknowledge: a world computer is a cloud infrastructure that is sovereign, owned by no one, allowing each developer to avoid censorship from platform owners offering app downloads. It also prevents users from being in a situation where they don't understand how an app works on their phone. In my opinion, these are important and cool features deserving respect and attention from those who want to create more futuristic, cooler applications. This is precisely what my team and I have been doing for eight years, choosing perhaps the most challenging area - creating services for robotics on the world computer, which seems to be right outside your door, quietly scraping and saying, \"I want to come into your home.\"": "Aqui está a história em um formato generalizado. Não há menção de \"blockchain,\" não há menção de \"contratos inteligentes,\" mas esses conceitos estão por baixo. Vamos ainda reconhecer: um computador mundial é uma infraestrutura de nuvem soberana, de propriedade de ninguém, permitindo que cada desenvolvedor evite a censura dos proprietários de plataformas que oferecem downloads de aplicativos. Também impede que os usuários estejam em uma situação em que não entendem como um aplicativo funciona em seu telefone. Na minha opinião, esses são recursos importantes e legais que merecem respeito e atenção daqueles que desejam criar aplicativos mais futuristas e mais legais. Isso é precisamente o que minha equipe e eu temos feito há oito anos, escolhendo talvez a área mais desafiadora - criar serviços para robótica no computador mundial, que parece estar bem na porta de sua casa, silenciosamente raspando e dizendo: \"Quero entrar em sua casa.\"",
  "Now, let's move on to a timeline and look through my personal experience at how the concept of the world computer evolved. First, let's go back to 2012. This year is notable because Bitcoin already exists as a global internet service, accessible to everyone, not owned by anyone specific. By 2012, besides Bitcoin, its so-called forks start appearing. One of the most well-known is Litecoin.": "Agora, vamos avançar para uma linha do tempo e analisar minha experiência pessoal sobre como o conceito do computador mundial evoluiu. Primeiro, vamos voltar para 2012. Este ano é notável porque o Bitcoin já existe como um serviço global de internet, acessível a todos, não de propriedade de ninguém específico. Até 2012, além do Bitcoin, começam a aparecer seus chamados forks. Um dos mais conhecidos é o Litecoin.",
  "Litecoin is notable because its developer did the most important work for the entire community. He collected the most crucial configurable variables or constants from different parts of Bitcoin's code after the protocol was launched. This allowed specifying block generation time, block reward, and, statistically, Litecoin is more frequently forked than Bitcoin. When we say \"fork of Bitcoin,\" I can confidently say that, in most cases, it will be a fork of Litecoin.": "O Litecoin é notável porque seu desenvolvedor fez o trabalho mais importante para toda a comunidade. Ele coletou as variáveis ou constantes configuráveis mais cruciais de diferentes partes do código do Bitcoin após o lançamento do protocolo. Isso permitiu especificar o tempo de geração de bloco, a recompensa de bloco e, estatisticamente, o Litecoin é mais frequentemente bifurcado do que o Bitcoin. Quando dizemos \"fork do Bitcoin,\" posso dizer com confiança que, na maioria dos casos, será um fork do Litecoin.",
  "Namecoin is also a fork of Bitcoin, and if memory serves me right, it was initially a direct fork from Bitcoin, and then Litecoin appeared a few months later in 2011. However, Namecoin turned out to be a bit different, paving the way for many developers mentally on where ideas underlying Bitcoin's internet service could evolve. Namecoin went beyond being just a coin; it could store identity as a database and allow an internet service to place your domain name. This was the first example where an internet service spawned from Bitcoin could have a different nature, not just like Litecoin with fast transactions but the ability to pay for storing certain information with its internal currency, an internal token. For example, the name in the .bit domain zone.": "Namecoin também é um fork do Bitcoin e, se a memória não me falha, inicialmente foi um fork direto do Bitcoin, e então o Litecoin apareceu alguns meses depois em 2011. No entanto, o Namecoin acabou sendo um pouco diferente, abrindo caminho para muitos desenvolvedores mentalmente sobre onde as ideias subjacentes ao serviço de internet do Bitcoin poderiam evoluir. O Namecoin foi além de ser apenas uma moeda; ele poderia armazenar identidade como um banco de dados e permitir que um serviço de internet colocasse seu nome de domínio. Este foi o primeiro exemplo em que um serviço de internet originado do Bitcoin poderia ter uma natureza diferente, não apenas como o Litecoin com transações rápidas, mas a capacidade de pagar para armazenar certas informações com sua moeda interna, um token interno. Por exemplo, o nome na zona de domínio .bit.",
  "Developers worldwide were experimenting with Bitcoin, mostly creating forks, making them faster, cheaper electronic cash. Alongside this, the first services appeared, seeing opportunities not only in financial applications but also in cross-industrial applications in other areas like Namecoin. Namecoin provided the first globally accessible and unowned internet service through which you could launch your website without being under the jurisdiction of a specific organization but within a distributed globally accessible network. This moment is crucial for us to move on to the early precursors of the world computer's ideas.": "Desenvolvedores em todo o mundo estavam experimentando com o Bitcoin, principalmente criando forks, tornando-os mais rápidos, mais baratos eletrodomésticos. Ao lado disso, os primeiros serviços apareceram, vendo oportunidades não apenas em aplicações financeiras, mas também em aplicações interindustriais em outras áreas como o Namecoin. O Namecoin forneceu o primeiro serviço de internet globalmente acessível e não pertencente através do qual você poderia lançar seu site sem estar sob a jurisdição de uma organização específica, mas dentro de uma rede globalmente acessível e distribuída. Este momento é crucial para avançarmos para os precursores iniciais das ideias do computador mundial.",
  "The first practical ideas of the world computer emerged in 2014, two years after the appearance of the first wave of Bitcoin forks and the creation of meaningful services dedicated not only to electronic cash but also exploring broader themes. We encounter ideas that precede the launch of Ethereum.": "As primeiras ideias práticas do computador mundial surgiram em 2014, dois anos após o surgimento da primeira onda de forks do Bitcoin e a criação de serviços significativos dedicados não apenas ao dinheiro eletrônico, mas também explorando temas mais amplos. Encontramos ideias que precedem o lançamento do Ethereum.",
  "In 2014, at several meetups worldwide, in Miami and, I believe, in Europe, Vitalik Buterin articulated sensible ideas. He suggests that we can develop not just a set of internet services that essentially function as a Swiss army knife, right? We can develop a virtual machine. Those with an education in Computer Science probably remember what an infinite tape is in Turing machines, and if we go back to the theory of computational machines, we probably recall the theoretical origins of creating our personal computers, essentially the server infrastructure we have today. It's interesting that, fifty years after the development of von Neumann architecture and the complete Turing machine theory, and with the dawn of internet technologies only by 2014, and only after experiments with Bitcoin, the first idea emerges on our planet of creating a fully virtual computational machine based on the same theory that has been tested in the computer science industry for the past 50 years. The mechanics are the same as when creating any personal computer or server in a data center, but based more on achievements in internet technologies and the achievements of the world that will later be called Web3.": "Em 2014, em vários meetups em todo o mundo, em Miami e, eu acredito, na Europa, Vitalik Buterin articulou ideias sensatas. Ele sugere que podemos desenvolver não apenas um conjunto de serviços de internet que essencialmente funcionam como um canivete suíço, certo? Podemos desenvolver uma máquina virtual. Aqueles com formação em Ciência da Computação provavelmente se lembram do que é uma fita infinita em máquinas de Turing, e se voltarmos à teoria das máquinas computacionais, provavelmente lembramos das origens teóricas de criar nossos computadores pessoais, essencialmente a infraestrutura de servidor que temos hoje. É interessante que, cinquenta anos após o desenvolvimento da arquitetura de von Neumann e da teoria completa da máquina de Turing, e com o surgimento das tecnologias de internet apenas em 2014, e apenas após experimentos com o Bitcoin, a primeira ideia surge em nosso planeta de criar uma máquina computacional totalmente virtual baseada na mesma teoria que foi testada na indústria de ciência da computação nos últimos 50 anos. A mecânica é a mesma ao criar qualquer computador pessoal ou servidor em um data center, mas baseada mais em conquistas em tecnologias de internet e nas conquistas do mundo que mais tarde serão chamadas de Web3.",
  "Ethereum itself is not a Swiss army knife, not a set of specific internet services. It is, in the direct sense, a cloud, a computational machine. What lies at its core, I will tell you in the next lecture. Here, the most important thing for us is to focus on where the idea of Ethereum began. It started with the realization that, in two years, dozens of different internet services were invented that were interesting because they were globally accessible, available without censorship for developers to deploy. Users could use them only with an internal currency. However, what was not liked in all these concepts was that almost every interesting service required its own massive distributed infrastructure. Unlike familiar internet services, you couldn't just launch your globally accessible infrastructure if you were a very small person or a small team because such a network would be vulnerable, and the service itself would become unsafe. To overcome the problems that were side effects or negative externalities of creating your own globally accessible sovereign internet service, the concept of Ethereum emerged. Ethereum, as a full-fledged cloud capable of handling any formalized computation, allows you to write your program code, a complete program essentially, and run it in the same blockchain alongside hundreds of other applications. This possibility, sounding from the small stages of 2014, naturally captivated the minds of many and seemed absolutely logical for someone with a basic education in Computer Science. If you could understand what Turing completeness was by 2014, if you could envision the historical theory of creating a personal computer, you would definitely not overlook the Ethereum whitepaper and would say that this is exactly what the entire developer community needs.": "O próprio Ethereum não é uma faca suíça, nem um conjunto de serviços específicos da internet. É, no sentido direto, uma nuvem, uma máquina computacional. O que está no seu núcleo, eu vou te contar na próxima palestra. Aqui, o mais importante para nós é focar onde a ideia do Ethereum começou. Começou com a percepção de que, em dois anos, dezenas de diferentes serviços da internet foram inventados que eram interessantes porque eram globalmente acessíveis, disponíveis sem censura para os desenvolvedores implantarem. Os usuários só podiam usá-los com uma moeda interna. No entanto, o que não era gostado em todos esses conceitos era que quase todo serviço interessante exigia sua própria infraestrutura distribuída massiva. Ao contrário dos serviços familiares da internet, você não poderia simplesmente lançar sua infraestrutura globalmente acessível se você fosse uma pessoa muito pequena ou uma equipe pequena porque tal rede seria vulnerável, e o serviço em si se tornaria inseguro. Para superar os problemas que eram efeitos colaterais ou externalidades negativas de criar seu próprio serviço de internet soberano globalmente acessível, surgiu o conceito de Ethereum. Ethereum, como uma nuvem completa capaz de lidar com qualquer computação formalizada, permite que você escreva seu código de programa, um programa completo essencialmente, e o execute na mesma blockchain ao lado de centenas de outras aplicações. Essa possibilidade, soando desde os pequenos estágios de 2014, naturalmente cativou as mentes de muitos e parecia absolutamente lógica para alguém com uma educação básica em Ciência da Computação. Se você pudesse entender o que era a completude de Turing até 2014, se você pudesse vislumbrar a teoria histórica de criar um computador pessoal, você definitivamente não ignoraria o whitepaper do Ethereum e diria que isso é exatamente o que toda a comunidade de desenvolvedores precisa.",
  "I believe the year 2014 and Ethereum mark the first, though not explicitly named, instances of the concept of a global computer. It started with the idea that we don't need a Swiss knife; instead, we need infrastructure or a universal cloud that addresses global-level security challenges. Developers, at a low cost, should be able to deploy their applications there without concerning themselves with issues like securing the network or creating a network of providers for this computer or your specific internet service.": "Acredito que o ano de 2014 e o Ethereum marcam as primeiras, embora não explicitamente nomeadas, instâncias do conceito de um computador global. Começou com a ideia de que não precisamos de uma faca suíça; em vez disso, precisamos de infraestrutura ou uma nuvem universal que aborde desafios de segurança em nível global. Os desenvolvedores, a baixo custo, deveriam ser capazes de implantar suas aplicações lá sem se preocupar com questões como garantir a rede ou criar uma rede de provedores para este computador ou seu serviço de internet específico.",
  "In 2015, Ethereum was effectively launched. From that moment onwards, even until 2020, I haven't encountered significant counterarguments against the idea of creating not just specific internet services but embracing and developing the concept of a virtual computer, virtual server, cloud, or a global computer, as I prefer to call it.": "Em 2015, o Ethereum foi efetivamente lançado. A partir desse momento, mesmo até 2020, não encontrei argumentos significativos contra a ideia de criar não apenas serviços específicos da internet, mas abraçar e desenvolver o conceito de um computador virtual, servidor virtual, nuvem ou um computador global, como prefiro chamar.",
  "Various variations emerge, perhaps some remember the then-popular EOS suggesting a slightly different consumption paradigm. Despite my personal aversion to that project, with its 21st validator and all, it seemed sufficient for many. But it introduced the idea that owning tokens grants you a portion of bandwidth, which, in the realm of Robonomics architecture, remains interesting to me to this day.": "Várias variações surgem, talvez alguns se lembrem do então popular EOS sugerindo um paradigma de consumo ligeiramente diferente. Apesar da minha aversão pessoal a esse projeto, com seus 21 validadores e tudo mais, parecia suficiente para muitos. Mas introduziu a ideia de que possuir tokens lhe concede uma parte da largura de banda, o que, no âmbito da arquitetura Robonomics, permanece interessante para mim até hoje.",
  "Simultaneously, other ideas on how to modernize the Ethereum network arise. Projects like Definity, Solana, and others come into play. Around the same time, Gavin Wood introduces Polkadot, who assisted Vitalik in creating Ethereum. From a multitude of technological projects between 2015 and 2020, we move from a race to create individual internet service variants to witnessing, on a communication protocol level, the emergence of something like Ethereum killers. Many projects started under this slogan, taking the idea of a unified cloud for multiple internet services and modifying some aspects. For instance, EOS proposed an alternative utilization scheme, where only token-backed ownership allowed access to bandwidth. There were projects where the programming language for writing code was more interesting. For example, during a hackathon for BMW, when we won with an implementation on Ethereum, the automaker immediately stated that we wouldn't go any further unless we had formally verified contracts, which was impossible to achieve on Ethereum at that time.": "Simultaneamente, surgem outras ideias sobre como modernizar a rede Ethereum. Projetos como Definity, Solana e outros entram em cena. Ao mesmo tempo, Gavin Wood apresenta o Polkadot, que ajudou Vitalik a criar o Ethereum. De uma infinidade de projetos tecnológicos entre 2015 e 2020, passamos de uma corrida para criar variantes individuais de serviços de internet para testemunhar, em um nível de protocolo de comunicação, o surgimento de algo como assassinos do Ethereum. Muitos projetos começaram sob esse slogan, levando a ideia de uma nuvem unificada para múltiplos serviços de internet e modificando alguns aspectos. Por exemplo, a EOS propôs um esquema de utilização alternativo, onde apenas a propriedade apoiada por token permitia acesso à largura de banda. Houve projetos em que a linguagem de programação para escrever código era mais interessante. Por exemplo, durante um hackathon para a BMW, quando ganhamos com uma implementação no Ethereum, a montadora imediatamente afirmou que não iríamos mais adiante a menos que tivéssemos contratos formalmente verificados, o que era impossível de alcançar no Ethereum naquela época.",
  "At this moment, as you read about the ideas of Eternity and other networks, you may think, \"I should try working with them too.\" Service developers understood this, as did, as I mentioned, projects like Definity, which recently launched the World Computer and is gaining traction. Simultaneously, the idea of Polkadot emerges as a heterogeneous multi-chain framework. Ethereum, around the mid-2010s, also received a roadmap for scalability and development. By 2024, almost all concepts converge on the idea of having not just one database or blockchain but a multitude. Various transaction processing methods, two-layer consensus algorithms, optimistic majority approaches, and a plethora of technical implementation variations emerge, all aiming at the same global computer concept.": "Neste momento, ao ler sobre as ideias da Eternity e de outras redes, você pode pensar: \"Devo tentar trabalhar com elas também.\" Os desenvolvedores de serviços entenderam isso, assim como, como mencionei, projetos como Definity, que lançou recentemente o World Computer e está ganhando tração. Simultaneamente, a ideia do Polkadot emerge como um framework heterogêneo de várias cadeias. O Ethereum, por volta de meados de 2010, também recebeu um roadmap para escalabilidade e desenvolvimento. Até 2024, quase todos os conceitos convergem na ideia de ter não apenas um banco de dados ou blockchain, mas uma multiplicidade. Vários métodos de processamento de transações, algoritmos de consenso de duas camadas, abordagens otimistas da maioria e uma infinidade de variações de implementação técnica surgem, todos visando o mesmo conceito de computador global.",
  "Let's now go through a timeline snapshot:": "Vamos agora passar por um instantâneo da linha do tempo:",
  "**2009-2012**: Emergence of the first globally accessible internet service for electronic cash - Bitcoin.": "**2009-2012**: Surgimento do primeiro serviço de internet globalmente acessível para dinheiro eletrônico - Bitcoin.",
  "**Early 2012**: The first fork war occurs, with projects emerging to replicate similar services. Some multi-billion projects create their forks. Simultaneously, projects like Namecoin propose interesting ideas.": "**Início de 2012**: A primeira guerra de forks ocorre, com projetos surgindo para replicar serviços semelhantes. Alguns projetos de vários bilhões criam seus forks. Simultaneamente, projetos como Namecoin propõem ideias interessantes.",
  "**2014**: The concept of a world computer emerges, requiring a deep understanding of computer science theory and immersion in Bitcoin's development.": "**2014**: O conceito de um computador mundial surge, exigindo um profundo entendimento da teoria da ciência da computação e imersão no desenvolvimento do Bitcoin.",
  "**2015-2020**: The concept moves from theory to practice. Modifications and variations of Ethereum arise, introducing different ideas with varying degrees of quality. The term \"World Computer\" became established.": "**2015-2020**: O conceito passa da teoria para a prática. Modificações e variações do Ethereum surgem, introduzindo ideias diferentes com diferentes graus de qualidade. O termo \"Computador Mundial\" se estabeleceu.",
  "**2024**: We reach the World Computer, a term now well-established, marking the transition from a simple calculator on your phone to a globally accessible institution. The idea of the World Computer encompasses future money, programming money, storage for identification records, and important documents.": "**2024**: Alcançamos o Computador Mundial, um termo agora bem estabelecido, marcando a transição de uma simples calculadora em seu telefone para uma instituição globalmente acessível. A ideia do Computador Mundial engloba o dinheiro futuro, a programação do dinheiro, o armazenamento de registros de identificação e documentos importantes.",
  "In conclusion, from a simple calculator to a globally accessible institution, the idea of the World Computer has evolved. It's seen as a place for the future of money and the storage of vital records. The concept of a World Computer has progressed from theoretical discussions to practical engineering implementations. In the next lecture, the discussion will delve into what a World Computer actually represents. It is fundamentally a state transition function, a concept to be explored further in the upcoming lecture, emphasizing its importance and the need to safeguard it.": "Em conclusão, de uma simples calculadora para uma instituição globalmente acessível, a ideia do Computador Mundial evoluiu. É visto como um lugar para o futuro do dinheiro e o armazenamento de registros vitais. O conceito de um Computador Mundial progrediu de discussões teóricas para implementações práticas de engenharia. Na próxima palestra, a discussão se aprofundará no que um Computador Mundial realmente representa. É fundamentalmente uma função de transição de estado, um conceito a ser explorado mais adiante na próxima palestra, enfatizando sua importância e a necessidade de protegê-lo.",
  "Part 2: The Heart of the World Computer": "Parte 2: O Coração do Computador Mundial",
  "What lies at the core of projects like Ethereum or Polkadot, or any other web3 project claiming the title of the world computer, and why does the comparison with the heart in the human body fit so well into the abstract architecture of the world computer?": "O que está no cerne de projetos como Ethereum ou Polkadot, ou qualquer outro projeto web3 que reivindique o título de computador mundial, e por que a comparação com o coração no corpo humano se encaixa tão bem na arquitetura abstrata do computador mundial?",
  "Let's try to understand these questions in this part of the lecture, and to begin with, we'll have to break the chains of Bitcoin maximalists a bit. Most likely, you've already read one or several popular science articles dedicated to Bitcoin in your life, and the main thing that is practically noted everywhere is the three main advantages of Bitcoin as electronic cash:": "Vamos tentar entender essas perguntas nesta parte da palestra e, para começar, teremos que quebrar um pouco as correntes dos maximalistas do Bitcoin. Provavelmente, você já leu um ou vários artigos populares de ciência dedicados ao Bitcoin em sua vida, e a principal coisa que é praticamente observada em todos os lugares são as três principais vantagens do Bitcoin como dinheiro eletrônico:",
  "Censorship resistance": "Resistência à censura",
  "Immutability of data stored in the Bitcoin blockchain": "Imutabilidade dos dados armazenados no blockchain do Bitcoin",
  "Transparency of transactions": "Transparência das transações",
  "Let's quickly go through each of these properties, and most importantly, at the end, we'll need to step back a bit from them, as the world computer inherits them as some kind of successor to Bitcoin.": "Vamos passar rapidamente por cada uma dessas propriedades e, o mais importante, no final, precisaremos dar um passo para trás um pouco delas, já que o computador mundial as herda como uma espécie de sucessor do Bitcoin.",
  "**Firstly**, immutability of data. Of course, this property, from the perspective of electronic cash, has significant advantages and importance. After you send a transaction or receive bitcoins, after one or two blocks, you gradually begin to feel the immutability of data in the blockchain. In the first 15 minutes, you can observe, using a blockchain explorer, how the transaction should settle. You already see it in the network, but it is not finalized, meaning these bitcoins are not yet in your account. However, after several blocks, there is confidence that these funds will not disappear from your account. As time passes, the probability of values being somehow overwritten from your account becomes almost negligible, practically reducing to zero. This is our property of data immutability. How cool it is when you can share information with the recipient, send them a link to the blockchain explorer, and you don't need to obtain any paper or document from the bank stating that you sent a payment on a certain date and time - this is the second advantage of Bitcoin that is very helpful in practice and is probably the most pleasant perk when comparing a bank transfer and a Bitcoin transfer.": "**Em primeiro lugar**, imutabilidade dos dados. Claro, essa propriedade, do ponto de vista do dinheiro eletrônico, tem vantagens e importância significativas. Depois de enviar uma transação ou receber bitcoins, após um ou dois blocos, você começa a sentir gradualmente a imutabilidade dos dados no blockchain. Nos primeiros 15 minutos, você pode observar, usando um explorador de blockchain, como a transação deve se resolver. Você já a vê na rede, mas não está finalizada, o que significa que esses bitcoins ainda não estão em sua conta. No entanto, após vários blocos, há confiança de que esses fundos não desaparecerão de sua conta. Com o tempo, a probabilidade de os valores serem de alguma forma sobrescritos de sua conta se torna praticamente negligível, reduzindo praticamente a zero. Esta é nossa propriedade de imutabilidade de dados. Como é legal quando você pode compartilhar informações com o destinatário, enviar a eles um link para o explorador de blockchain, e não precisa obter nenhum papel ou documento do banco afirmando que você enviou um pagamento em uma determinada data e hora - esta é a segunda vantagem do Bitcoin que é muito útil na prática e provavelmente o benefício mais agradável ao comparar uma transferência bancária e uma transferência de Bitcoin.",
  "**Secondly**, transparency of transactions. There is practically no fear when using Bitcoin that you will find yourself in a region of the world or connected to an internet provider through which you cannot perform operations with the Bitcoin network. There are practically no options other than locking you in a dark room without internet access so that you cannot use the Bitcoin network.": "**Em segundo lugar**, transparência das transações. Praticamente não há medo ao usar o Bitcoin de que você se encontre em uma região do mundo ou conectado a um provedor de internet através do qual não possa realizar operações com a rede Bitcoin. Praticamente não há opções além de trancá-lo em um quarto escuro sem acesso à internet para que você não possa usar a rede Bitcoin.",
  "These three properties are, of course, very important. Now, in order to understand the question \"What is at the heart of the world computer,\" we will need to step back from them, abstract ourselves, and make a small leap of faith, a jump, approximately, 100 years back to the 1930s.": "Estas três propriedades são, obviamente, muito importantes. Agora, para entender a pergunta \"O que está no coração do computador mundial,\" precisaremos dar um passo para trás, nos abstrairmos e fazer um pequeno salto de fé, um salto, aproximadamente, 100 anos de volta para os anos 1930.",
  "In 1936, Alan Turing made a proposal to the scientific community to solve the formalization problem and, in fact, a more qualitative description of such a concept as an algorithm. Interestingly, from Alan Turing's proposal, the architecture and development of all computer science in the future emerged, but he in no way pursued the idea of creating a personal computer, and he knew nothing about data centers or clouds. His task was to provide a way to define an algorithm in the context of the tasks faced by mathematicians. It's a fascinating picture over the span of a century that the achievement of computer science turns out to be a by-product of a rather mundane problem among mathematicians.": "Em 1936, Alan Turing fez uma proposta à comunidade científica para resolver o problema de formalização e, na verdade, uma descrição mais qualitativa de um conceito como um algoritmo. Curiosamente, a partir da proposta de Alan Turing, surgiu a arquitetura e o desenvolvimento de toda a ciência da computação no futuro, mas ele de forma alguma buscou a ideia de criar um computador pessoal, e ele não sabia nada sobre data centers ou nuvens. Sua tarefa era fornecer uma maneira de definir um algoritmo no contexto das tarefas enfrentadas pelos matemáticos. É uma imagem fascinante ao longo de um século que a conquista da ciência da computação acaba sendo um subproduto de um problema bastante mundano entre os matemáticos.",
  "Let's delve into what Alan Turing proposed, without delving too deeply into algorithm theory and the purpose for which he suggested it. Alan Turing proposed the Turing machine, which represents an infinite tape (we can call it memory cells to make it easier), traversed by a reading and writing head. This head, positioned over a certain cell, can read data, apply some simple operations to them, and write new values.": "Vamos nos aprofundar no que Alan Turing propôs, sem mergulhar muito profundamente na teoria do algoritmo e no propósito para o qual ele sugeriu. Alan Turing propôs a máquina de Turing, que representa uma fita infinita (podemos chamá-la de células de memória para facilitar), percorrida por uma cabeça de leitura e escrita. Esta cabeça, posicionada sobre uma determinada célula, pode ler dados, aplicar algumas operações simples a eles e escrever novos valores.",
  "Today, when you hear phrases like this, it might seem to you: \"Well, yes, it's a hard drive, a computer, or something like that.\" That's absolutely correct. This description gave rise to the first computer architecture. However, the main task of the Turing machine was to provide a means of representing a system or entity capable of performing any formalized computations. One can imagine a box or room, even filled with lamps, into which you insert your punch card, card, or transmit a Bluetooth signal, and the machine starts working, performing simple operations that ultimately solve your problem. Thus, the Turing machine is a universal computational mechanism that primarily solves the universal and essential task of providing a mechanism through which any simple computation or, more accurately, any formalized computation can be performed—computations that can be decomposed into the language of mathematics": "Hoje, quando você ouve frases como esta, pode parecer para você: \"Bem, sim, é um disco rígido, um computador, ou algo assim.\" Isso está absolutamente correto. Esta descrição deu origem à primeira arquitetura de computador. No entanto, a principal tarefa da máquina de Turing era fornecer um meio de representar um sistema ou entidade capaz de realizar quaisquer cálculos formalizados. Pode-se imaginar uma caixa ou sala, até mesmo cheia de lâmpadas, na qual você insere seu cartão perfurado, cartão, ou transmite um sinal Bluetooth, e a máquina começa a funcionar, realizando operações simples que acabam resolvendo seu problema. Assim, a máquina de Turing é um mecanismo computacional universal que resolve principalmente a tarefa universal e essencial de fornecer um mecanismo através do qual qualquer cálculo simples ou, mais precisamente, qualquer cálculo formalizado pode ser realizado—cálculos que podem ser decompostos na linguagem da matemática",
  "In essence, the task of the last 100 years, after finding some solution in the field of mathematics, was precisely to give it a physical form, to find the set of transistors that could be placed on a board, learn how to solder them all, reduce the processes of the computing processor, and so on. No wonder that the theory from 1936 finds application in 2014 for the ideas of the world computer. These 100 years were occupied, in general, in another area—the field of physically implementing this computer.": "Em essência, a tarefa dos últimos 100 anos, após encontrar alguma solução no campo da matemática, foi precisamente dar-lhe uma forma física, encontrar o conjunto de transistores que poderiam ser colocados em uma placa, aprender como soldá-los todos, reduzir os processos do processador de computação, e assim por diante. Não é de admirar que a teoria de 1936 encontre aplicação em 2014 para as ideias do computador mundial. Estes 100 anos foram ocupados, em geral, em outra área—o campo de implementação física deste computador.",
  "When the planet became saturated, and we had personal computers, computational machines even inside smart devices, and when data centers started growing on the planet, the question shifted from the hardware solution to how the computational machine might look not at the physical or mathematically abstract level but at some non-physical, perhaps metaphysical, level relative to the entire planet. However, the foundation remains the same: the state transition function and nothing else.": "Quando o planeta se tornou saturado, e tínhamos computadores pessoais, máquinas computacionais até mesmo dentro de dispositivos inteligentes, e quando os centros de dados começaram a crescer no planeta, a questão mudou da solução de hardware para como a máquina computacional poderia parecer não no nível físico ou matematicamente abstrato, mas em algum nível não físico, talvez metafísico, em relação ao planeta inteiro. No entanto, a base permanece a mesma: a função de transição de estado e nada mais.",
  "As an addition to what has been said, so that we don't only dwell on the theory of 1936 and don't just break the shackles of Bitcoin maximalists, open the Ethereum white paper. There you will find the crucial phrase \"Turing complete machine\"—this is the main definition of Ethereum. A Turing complete machine means that Ethereum can handle any simple operations described in a formal language, operations that are possible. This is not some set of operations that Ethereum can provide as a calculator or a sophisticated calculator for scientists. Instead, it is an abstraction inside which it is possible to load any possible variations, manipulations with variables, constants, additions, calculations with any states, and so on. You won't find anything different from what Turing proposed in the 1930s in the Ethereum concept. You will find an engineering implementation of how to do it. If we move on and open the Polkadot wiki, it's a bit more challenging to find. For this, you should use the search, enter \"State transition,\" and in the search results, find several mentions that Polkadot guarantees nothing else but the state transition. Neither the storage of data in the Polkadot blockchain nor any additional services—only the purest change of state caused by incoming transactions and processed by Polkadot validators. Now, let's try to delve more into this.": "Como uma adição ao que foi dito, para que não fiquemos apenas na teoria de 1936 e não apenas quebremos as correntes dos maximalistas do Bitcoin, abra o white paper do Ethereum. Lá você encontrará a frase crucial \"máquina Turing completa\"—esta é a principal definição do Ethereum. Uma máquina Turing completa significa que o Ethereum pode lidar com quaisquer operações simples descritas em uma linguagem formal, operações que são possíveis. Este não é um conjunto de operações que o Ethereum pode fornecer como uma calculadora ou uma calculadora sofisticada para cientistas. Em vez disso, é uma abstração dentro da qual é possível carregar quaisquer variações possíveis, manipulações com variáveis, constantes, adições, cálculos com quaisquer estados, e assim por diante. Você não encontrará nada diferente do que Turing propôs na década de 1930 no conceito do Ethereum. Você encontrará uma implementação de engenharia de como fazê-lo. Se avançarmos e abrirmos o wiki do Polkadot, é um pouco mais desafiador encontrar. Para isso, você deve usar a pesquisa, digitar \"Transição de estado,\" e nos resultados da pesquisa, encontrar várias menções de que o Polkadot garante nada além da transição de estado. Nem o armazenamento de dados na blockchain do Polkadot nem quaisquer serviços adicionais—apenas a mais pura mudança de estado causada por transações recebidas e processadas pelos validadores do Polkadot. Agora, vamos tentar aprofundar mais nisso.",
  "Now, let's add a bit to this linear diagram to move from the theory of the 1930s to today's realities, where we describe the abstract picture of the world computer. To do this, let's consider an example with Alice and Bob. Alice, being in the office, wants to start Bob's home vacuum robot for cleaning. If we look at today's concepts of how the link between Alice's mobile application and the robot vacuum at home is implemented, you will see roughly the following picture: Alice's mobile application generates a transaction in some cloud where calculations take place, and the output of these calculations is the output values that effectively turn into a command to start the vacuum robot. It would be useful for us, from the field of robotics and Robonomics as concepts in the world of web3, to understand that in the cloud, there is a digital twin of this robot, and its state is changed. We can, in general, not go that far and stop at the fact that Alice sends a transaction to the cloud, and the cloud, having performed all the necessary calculations and manipulations, generates a command to start Bob's vacuum robot.": "Agora, vamos adicionar um pouco a este diagrama linear para passar da teoria dos anos 1930 para as realidades de hoje, onde descrevemos a imagem abstrata do computador mundial. Para fazer isso, vamos considerar um exemplo com Alice e Bob. Alice, estando no escritório, quer iniciar o robô aspirador de pó de Bob em casa para limpeza. Se olharmos para os conceitos de hoje de como a ligação entre a aplicação móvel de Alice e o robô aspirador em casa de Bob é implementada, você verá aproximadamente a seguinte imagem: a aplicação móvel de Alice gera uma transação em algum lugar na nuvem onde os cálculos ocorrem, e a saída desses cálculos são os valores de saída que efetivamente se transformam em um comando para iniciar o robô aspirador. Seria útil para nós, do campo da robótica e da Robonomics como conceitos no mundo do web3, entender que na nuvem, há um gêmeo digital deste robô, e seu estado é alterado. Podemos, em geral, não ir tão longe e parar no fato de que Alice envia uma transação para a nuvem, e a nuvem, tendo realizado todos os cálculos e manipulações necessárias, gera um comando para iniciar o robô aspirador de pó de Bob.",
  "In this scheme today, there are several main questions: if you were interacting with a physical computer in front of you or were in a room with the vacuum robot, you would approach, press a physical button, and set it in motion. What changes when instead of arrows, there is not a manual drive but a communication layer, the internet? A multitude of questions arises about how we can safely connect Alice and this cloud, how we can be sure that Alice has access to this cloud. The question of the communication network arises—how we can protect Alice from someone else addressing her vacuum robot, requesting, for example, to make a video of her entire apartment instead of cleaning, and a similar aspect arises: why would the vacuum robot listen to this cloud with such honor and integrity? Why would the robot fully trust this cloud?": "Neste esquema de hoje, existem várias questões principais: se você estivesse interagindo com um computador físico na sua frente ou estivesse em uma sala com o robô aspirador de pó, você se aproximaria, pressionaria um botão físico e o colocaria em movimento. O que muda quando em vez de setas, não há um acionamento manual, mas uma camada de comunicação, a internet? Uma infinidade de perguntas surge sobre como podemos conectar com segurança Alice e esta nuvem, como podemos ter certeza de que Alice tem acesso a esta nuvem. A questão da rede de comunicação surge - como podemos proteger Alice de alguém mais abordando seu robô aspirador de pó, solicitando, por exemplo, para fazer um vídeo de todo o seu apartamento em vez de limpar, e um aspecto semelhante surge: por que o robô aspirador de pó ouviria esta nuvem com tanto respeito e integridade? Por que o robô confiaria plenamente nesta nuvem?",
  "Today's approach with the architecture of cloud solutions that connect your mobile phone, or rather, the application on your mobile phone, and some technology on the other side, smart devices, is based on the significant achievements in building physical computers. Computers in data centers today are something extraordinary—the level of technical processes is simply amazing. However, from the perspective of communication technologies, when you already have some experience working with internet applications, it seems that somewhere there, at the level of a technical school or college, or maybe not right next to how developers, architects of Intel processors are solving their tasks now. Almost all questions about connecting Alice to Bob boil down solely to outputting a specific access certificate on a specific IP address from both sides, linking them together, and the cloud will own and do anything. The most important thing in this scheme is to do anything, meaning to perform state transitions or operations that occur without any guarantees that for Alice, for Bob, these will be executed according to the same logic. No one can say anything about how the cloud is arranged. It is a black box where computations are not formalized, and neither Alice nor Bob knows how the computation is performed.": "A abordagem de hoje com a arquitetura de soluções em nuvem que conectam seu telefone celular, ou melhor, a aplicação em seu telefone celular, e alguma tecnologia do outro lado, dispositivos inteligentes, é baseada nos significativos avanços na construção de computadores físicos. Os computadores nos data centers de hoje são algo extraordinário - o nível dos processos técnicos é simplesmente incrível. No entanto, do ponto de vista das tecnologias de comunicação, quando você já tem alguma experiência trabalhando com aplicações de internet, parece que em algum lugar lá, no nível de uma escola técnica ou faculdade, ou talvez não bem ao lado de como os desenvolvedores, arquitetos dos processadores Intel estão resolvendo suas tarefas agora. Quase todas as perguntas sobre conectar Alice a Bob se resumem exclusivamente a emitir um certificado de acesso específico em um endereço IP específico de ambos os lados, ligando-os juntos, e a nuvem possuirá e fará qualquer coisa. O mais importante neste esquema é fazer qualquer coisa, ou seja, realizar transições de estado ou operações que ocorrem sem garantias de que para Alice, para Bob, essas serão executadas de acordo com a mesma lógica. Ninguém pode dizer nada sobre como a nuvem é organizada. É uma caixa preta onde os cálculos não são formalizados, e nem Alice nem Bob sabem como o cálculo é realizado.",
  "The place where you must fully trust—relying on the reputation of the company that owns these data centers, and you must completely trust the network access providers who issue a certificate and verify the security of your connection. In fact, if we talk about the boom of internet applications, this is a huge problem. The problem is that there are actually some citadels located in specific jurisdictions that operate on a relatively simple technology stack to connect you as easily as possible to the cloud, which represents a black box. Dissatisfaction with this approach actually arouses interest in the world computer because it will arrange things a bit differently. And how? Let's try to supplement the scheme we drew with blue color right now.": "O lugar onde você deve confiar plenamente - confiando na reputação da empresa que possui esses data centers, e você deve confiar completamente nos provedores de acesso à rede que emitem um certificado e verificam a segurança da sua conexão. Na verdade, se falarmos sobre o boom das aplicações de internet, este é um grande problema. O problema é que na verdade existem algumas cidadelas localizadas em jurisdições específicas que operam em uma pilha de tecnologia relativamente simples para conectá-lo o mais facilmente possível à nuvem, que representa uma caixa preta. A insatisfação com esta abordagem realmente desperta interesse no computador mundial porque ele organizará as coisas de forma um pouco diferente. E como? Vamos tentar complementar o esquema que desenhamos com a cor azul agora.",
  "So, to supplement our linear graph, our linear diagram from both sides, let's take a look at the discoveries that have significance in computer science and that are directly or indirectly related to achievements from the world of web3.": "Então, para complementar nosso gráfico linear, nosso diagrama linear de ambos os lados, vamos dar uma olhada nas descobertas que têm significado na ciência da computação e que estão diretamente ou indiretamente relacionadas às conquistas do mundo do web3.",
  "Let's start with Leslie Lamport in 1976. Those who attended my presentations, lectures from 2015-2020, probably remember how often I liked to mention that before the invention of Bitcoin, problems related to creating a decentralized network were well described by Leslie Lamport in 1976 in the Byzantine Generals problem. The solution to the Byzantine Generals problem is at the core of Tendermint PBFT algorithms and all synchronous algorithms used from Telegram Open Network to Tendermint, to Cosmos, and other blockchain projects that, accordingly, followed the path of Byzantine Generals.": "Vamos começar com Leslie Lamport em 1976. Aqueles que participaram das minhas apresentações, palestras de 2015-2020, provavelmente se lembram de quantas vezes eu gostava de mencionar que antes da invenção do Bitcoin, os problemas relacionados à criação de uma rede descentralizada foram bem descritos por Leslie Lamport em 1976 no problema dos Generais Bizantinos. A solução para o problema dos Generais Bizantinos está no cerne dos algoritmos Tendermint PBFT e de todos os algoritmos síncronos usados desde a Rede Aberta do Telegram até o Tendermint, o Cosmos e outros projetos de blockchain que, consequentemente, seguiram o caminho dos Generais Bizantinos.",
  "The second interesting achievement in internet technologies is torrent trackers. We don't have any specific, already erased, cloud or a black box that stores files. Still, users worldwide, by exchanging torrent files, can download exactly the file they were looking for, and this works without data substitution. No one uploads any viruses to you by replacing the file. There might sometimes be a virus embedded in the file, but the idea of receiving a link to download and actually downloading something other than what you were offered to download using torrent technology is impossible. Similar processes exist in the IPFS network, a hash-oriented storage - a way of connecting various participants with trust in the information you convey without using a black box, precisely.": "A segunda conquista interessante em tecnologias da internet são os rastreadores de torrent. Não temos nenhum nuvem específica, já apagada, ou uma caixa preta que armazena arquivos. Ainda assim, usuários do mundo todo, trocando arquivos torrent, podem baixar exatamente o arquivo que estavam procurando, e isso funciona sem substituição de dados. Ninguém envia vírus para você substituindo o arquivo. Às vezes pode haver um vírus embutido no arquivo, mas a ideia de receber um link para baixar e realmente baixar algo diferente do que foi oferecido para baixar usando a tecnologia torrent é impossível. Processos semelhantes existem na rede IPFS, um armazenamento orientado a hash - uma forma de conectar vários participantes com confiança na informação que você transmite sem usar uma caixa preta, precisamente.",
  "And of course, Bitcoin. Bitcoin, as a more collective example, I'm sure Satoshi Nakamoto was well aware of Leslie Lamport's solution to the Byzantine Generals problem and, of course, observed how the idea of torrent trackers was developing. If we don't emphasize the properties that the Bitcoin blockchain obtained, such as immutability, transparency of transactions, and, to some extent, censorship resistance, then Bitcoin is an internet service that performs state transition, some changes in state based on transactions without a central node. It is an example of a collective construction of a global network in which there is a constantly functioning state transition function that we can trust, and to ensure trust, neither jurisdictions nor specific IP addresses nor the most primitive technologies used and still used today in building cloud services are used. The collective image of Bitcoin allowed overlaying the general concept from the 1930s of a Turing-complete machine on the existence of a universal abstract function for everything.": "E é claro, o Bitcoin. O Bitcoin, como um exemplo mais coletivo, tenho certeza de que Satoshi Nakamoto estava bem ciente da solução de Leslie Lamport para o problema dos Generais Bizantinos e, é claro, observou como a ideia dos rastreadores de torrent estava se desenvolvendo. Se não enfatizarmos as propriedades que o blockchain do Bitcoin obteve, como imutabilidade, transparência de transações e, até certo ponto, resistência à censura, então o Bitcoin é um serviço de internet que realiza transição de estado, algumas mudanças de estado com base em transações sem um nó central. É um exemplo de uma construção coletiva de uma rede global na qual há uma função de transição de estado constantemente funcionando na qual podemos confiar, e para garantir confiança, nem jurisdições nem endereços IP específicos nem as tecnologias mais primitivas usadas e ainda usadas hoje na construção de serviços em nuvem são usadas. A imagem coletiva do Bitcoin permitiu sobrepor o conceito geral dos anos 1930 de uma máquina completa de Turing na existência de uma função abstrata universal para tudo.",
  "So, what do we need to add to this scheme to envision a global computer? From the bottom, we provide consensus validators or, in general, validators. It can be said that the \"Data availability layer\" is probably a phrase many have heard around Ethereum this year, and it has become an advantage of Bitcoin as well. However, in the organization scheme of the global computer, this is one piece of the puzzle and, as I mentioned, it complements the main function that lies at the heart of the global computer—the function of universal state transition. Going back to the very beginning, the analogy of the heart in the human body is interesting here. It's not a thinking thing, indeed. Yes, it doesn't generate, you could say, the brain is much more important. Still, life is impossible without the heart. It simply pumps blood. Similarly, at the core of the global computer, all transactions are pumped through the state transition function, resulting in outputs. But to organize this in a distributed internet network without the need to trust some citadel, we need to supplement the picture with two components.": "Então, o que precisamos adicionar a esse esquema para visualizar um computador global? Na base, fornecemos validadores de consenso ou, em geral, validadores. Pode-se dizer que a \"camada de disponibilidade de dados\" é provavelmente uma frase que muitos ouviram em torno do Ethereum este ano, e também se tornou uma vantagem do Bitcoin. No entanto, no esquema de organização do computador global, esta é uma peça do quebra-cabeça e, como mencionei, complementa a função principal que está no cerne do computador global - a função de transição de estado universal. Voltando ao início, a analogia do coração no corpo humano é interessante aqui. Não é uma coisa pensante, de fato. Sim, não gera, você poderia dizer, o cérebro é muito mais importante. Ainda assim, a vida é impossível sem o coração. Ele simplesmente bombeia sangue. Da mesma forma, no cerne do computador global, todas as transações são bombeadas através da função de transição de estado, resultando em saídas. Mas para organizar isso em uma rede de internet distribuída sem a necessidade de confiar em alguma cidadela, precisamos complementar a imagem com dois componentes.",
  "The first component is a set of computers or nodes that are ready to execute the state transition. When you send transactions, they don't just go here; they go to the validators. Validators perform computations, recalling what I've already mentioned in this ongoing conversation. They take your transaction, retrieve information from the blockchain about how to process that transaction, apply that processing, and then coordinate with other validators the fact that they correctly executed the state transition. The core of the global computer, in terms of protection against situations where Bob, the vacuum cleaner robot, receives a correct command from Alice in the office, is not based on trust but on cross-verification by a multitude of network participants based on available information from the blockchain. Not only from the blockchain, by the way. It's complex, and we won't delve into it right now, but essentially, a multitude of validators take turns watching and have incentives, some internal incentives within the protocol, to prevent the universal and capable-of-calculating-anything machine from executing this operation incorrectly. A validator effectively processes transactions that come into the global computer, and other validators help prevent situations where one of the validators performed an incorrect calculation. The better the consensus algorithms of the validators, the better protection we have for the state transition function or, in other words, the heart of our global computer.": "O primeiro componente é um conjunto de computadores ou nós que estão prontos para executar a transição de estado. Quando você envia transações, elas não vão apenas para cá; elas vão para os validadores. Os validadores realizam cálculos, lembrando o que eu já mencionei nesta conversa em curso. Eles pegam sua transação, recuperam informações do blockchain sobre como processar essa transação, aplicam esse processamento e depois coordenam com outros validadores o fato de terem executado corretamente a transição de estado. O núcleo do computador global, em termos de proteção contra situações em que Bob, o robô aspirador, recebe um comando correto de Alice no escritório, não se baseia em confiança, mas em verificação cruzada por uma multidão de participantes da rede com base em informações disponíveis do blockchain. Não apenas do blockchain, aliás. É complexo, e não vamos nos aprofundar nisso agora, mas essencialmente, uma multidão de validadores se revezam observando e têm incentivos, alguns incentivos internos dentro do protocolo, para evitar que a máquina universal e capaz de calcular qualquer coisa execute essa operação incorretamente. Um validador processa efetivamente transações que entram no computador global, e outros validadores ajudam a evitar situações em que um dos validadores realizou um cálculo incorreto. Quanto melhores forem os algoritmos de consenso dos validadores, melhor proteção teremos para a função de transição de estado ou, em outras palavras, o coração do nosso computador global.",
  "The second part of this scheme is the data availability service—what we've always called the database in Bitcoin or Ethereum. In fact, we'll have to abandon that concept because there's a fundamental change in the architecture of all projects, and for those specifically targeting the global computer, this change is most crucial. For a simple present-day example: there are various implementations of Layer 2 networks on top of Ethereum—such as Arbitrum, Optimism, and others. If you start looking into their main differences and how they operate, you'll find that, in some cases, an L2 network in Ethereum sends a larger amount of data, solely from the first-layer blockchain, i.e., from the Ethereum blockchain. All the necessary puzzle pieces to confirm that the computation on the L2 layer was correct can be found in the first-layer Ethereum blockchain. On the other hand, other approaches suggest that beyond the first layer of Ethereum, something else is stored that needs to be found to prove the correctness of transactions. So, right now, before our eyes, there is again a question of improvement, but specifically of such an architecture where transactions go on the left, in the middle, we have the heart in the form of the state transition function, validators, and their consensus allows for the correct execution of this state transition. But there is also a question of data availability, which is necessary to ensure both cross-verification and, essentially, the existence of the service itself. Some approaches and patterns for creating L2 on top of Ethereum today ask the question: \"What if a certain L2 layer loses the data it doesn't store within the main Ethereum blockchain?\"": "A segunda parte deste esquema é o serviço de disponibilidade de dados - o que sempre chamamos de banco de dados no Bitcoin ou Ethereum. Na verdade, teremos que abandonar esse conceito porque há uma mudança fundamental na arquitetura de todos os projetos, e para aqueles que visam especificamente o computador global, essa mudança é mais crucial. Para um exemplo simples do presente: existem várias implementações de redes de Camada 2 em cima do Ethereum - como Arbitrum, Optimism e outros. Se você começar a analisar suas principais diferenças e como elas operam, verá que, em alguns casos, uma rede L2 no Ethereum envia uma quantidade maior de dados, exclusivamente do blockchain de primeira camada, ou seja, do blockchain do Ethereum. Todas as peças de quebra-cabeça necessárias para confirmar que a computação na camada L2 estava correta podem ser encontradas no blockchain Ethereum de primeira camada. Por outro lado, outras abordagens sugerem que além da primeira camada do Ethereum, algo mais é armazenado que precisa ser encontrado para provar a correção das transações. Portanto, agora, diante de nossos olhos, há novamente uma questão de melhoria, mas especificamente de uma arquitetura onde as transações ocorrem à esquerda, no meio, temos o coração na forma da função de transição de estado, validadores e seu consenso permite a execução correta dessa transição de estado. Mas também há uma questão de disponibilidade de dados, que é necessária para garantir tanto a verificação cruzada quanto, essencialmente, a existência do próprio serviço. Algumas abordagens e padrões para criar L2 em cima do Ethereum hoje fazem a pergunta: \"E se uma determinada camada L2 perder os dados que não armazena dentro do blockchain principal do Ethereum?\"",
  "Let's complement this picture with how Polkadot is structured. Polkadot has two consensus mechanisms: the \"babe\" consensus, responsible for the parachain-level consensus and is fast, and the \"grandpa\" consensus, which is slower and verifies everything afterward. So, if you delve into the wiki article titled \"The Path of a Block in the Polkadot Network,\" you will encounter interesting abbreviations. After achieving the \"babe\" consensus at the parachain level, the \"grandpa\" consensus introduces the concept of \"proof of validity and data availability.\" Going deeper, you'll find the term \"chunk\" of redundant pieces of information, inspired by CD RW technologies from the 90s and 2000s. This addresses the question of how to preserve information when absolute trust in a specific entity in the network is not feasible. The concept of \"chunk\" of redundant information is one of these patterns.": "Vamos complementar essa imagem com a estrutura do Polkadot. O Polkadot tem dois mecanismos de consenso: o consenso \"babe\", responsável pelo consenso no nível de parachain e é rápido, e o consenso \"grandpa\", que é mais lento e verifica tudo posteriormente. Portanto, se você se aprofundar no artigo da wiki intitulado \"O Caminho de um Bloco na Rede Polkadot\", encontrará abreviações interessantes. Após alcançar o consenso \"babe\" no nível de parachain, o consenso \"grandpa\" introduz o conceito de \"prova de validade e disponibilidade de dados.\" Aprofundando-se, você encontrará o termo \"chunk\" de pedaços redundantes de informação, inspirado nas tecnologias CD RW dos anos 90 e 2000. Isso aborda a questão de como preservar informações quando a confiança absoluta em uma entidade específica na rede não é viável. O conceito de \"chunk\" de informações redundantes é um desses padrões.",
  "Summing up, at the core lies an abstract function that enables any computation and was described by Alan Turing in the 1930s. The personal computer, essentially a side effect of a mathematical problem, emerged from Turing's work. The technologies first applied in Bitcoin, such as consensus that allows the network to exist without a specific data center or entity responsible for data correctness, form a functioning mechanism. It goes beyond providing a specific service for electronic cash transfers; it allows us to audit and control any computation in the network. Additionally, we face the challenge of ensuring data availability, as it's not the primary concern of the world computer. The world computer's task lies at its core, executing computation, managing state transitions, and performing calculations, while the data in this scheme serves as a puzzle piece that is more necessary to support the lower part. Thus, this overall scheme can be seen as an abstract and generalized illustration of the world computer's structure, where the state transition function is at its core.": "Resumindo, no cerne está uma função abstrata que permite qualquer computação e foi descrita por Alan Turing na década de 1930. O computador pessoal, essencialmente um efeito colateral de um problema matemático, surgiu do trabalho de Turing. As tecnologias primeiro aplicadas no Bitcoin, como o consenso que permite que a rede exista sem um centro de dados específico ou entidade responsável pela correção dos dados, formam um mecanismo funcional. Vai além de fornecer um serviço específico para transferências de dinheiro eletrônico; nos permite auditar e controlar qualquer computação na rede. Além disso, enfrentamos o desafio de garantir a disponibilidade de dados, pois não é a preocupação principal do computador global. A tarefa do computador global está em seu cerne, executando computações, gerenciando transições de estado e realizando cálculos, enquanto os dados neste esquema servem como uma peça de quebra-cabeça que é mais necessária para apoiar a parte inferior. Assim, este esquema geral pode ser visto como uma ilustração abstrata e generalizada da estrutura do computador global, onde a função de transição de estado está em seu cerne.",
  "Part 4: The Path of a New Block of Information in the World Computer": "Parte 4: O Caminho de um Novo Bloco de Informações no Computador Mundial",
  "The fourth and final part of our lecture is \"The World Computer in Your Home.\" After this, I will begin recording screencasts for the practical part of the sessions.": "A quarta e última parte de nossa palestra é \"O Computador Mundial em Sua Casa.\" Depois disso, começarei a gravar screencasts para a parte prática das sessões.",
  "Now we will try to summarize almost all the theory we have covered so far in terms of one process. The process that describes the path of an information block in the world computer. Let's start again by returning to the theme of web3 and the concept of blockchain. The phrase \"block\" or \"information block\" can be considered identical when stepping away from the last 10 years and taking a more general theory, as explored in the previous parts of the lectures. The concept of a \"block of information\" aligns with web3, but not necessarily with blockchain. Even without any crypto projects, we need to understand that when forming the theory of the world computer without referencing the formation of information blocks, it's currently challenging to envision other models. So, we will consider the path of an information block throughout the entire world computer, not because it is blockchain, but because, for now, there are no other ways to conceptualize the existence of the world computer other than by processing information in specific portions.": "Agora vamos tentar resumir quase toda a teoria que cobrimos até agora em termos de um processo. O processo que descreve o caminho de um bloco de informações no computador mundial. Vamos começar novamente retornando ao tema do web3 e ao conceito de blockchain. A frase \"bloco\" ou \"bloco de informações\" pode ser considerada idêntica ao se afastar dos últimos 10 anos e adotar uma teoria mais geral, como explorado nas partes anteriores das palestras. O conceito de um \"bloco de informações\" se alinha com o web3, mas não necessariamente com blockchain. Mesmo sem projetos de criptomoeda, precisamos entender que ao formar a teoria do computador mundial sem fazer referência à formação de blocos de informações, atualmente é desafiador imaginar outros modelos. Portanto, consideraremos o caminho de um bloco de informações em todo o computador mundial, não porque seja blockchain, mas porque, por enquanto, não há outras maneiras de conceituar a existência do computador mundial al��m de processar informações em porções específicas.",
  "Block of information = block in web3, but without blockchain and without any crypto project influence. We must currently consider the formation of information blocks when discussing the theory of the world computer. Now, let's move on to the first point. I tried to find close analogies from everyday life to help illustrate the path of an information block in the world computer. The analogy I've chosen is the movement of a bus on a route. Our first meeting point is the bus station.": "Bloco de informações = bloco no web3, mas sem blockchain e sem influência de qualquer projeto de criptomoeda. Atualmente, devemos considerar a formação de blocos de informações ao discutir a teoria do computador mundial. Agora, vamos passar para o primeiro ponto. Tentei encontrar analogias próximas da vida cotidiana para ajudar a ilustrar o caminho de um bloco de informações no computador mundial. A analogia que escolhi é o movimento de um ônibus em uma rota. Nosso primeiro ponto de encontro é a estação de ônibus.",
  "I marked transactions in pink as small dots. Let's imagine a typical bus stop where people gather, waiting for a bus that operates on a schedule. If we don't consider the hustle and bustle of large cities, where buses are always late, everyone in the world generally knows that the train from village A to village B always arrives around 7:15 am. Transactions that users want to send to the world computer gather at a certain bus stop and wait for the bus to arrive.": "Marquei transações em rosa como pequenos pontos. Vamos imaginar uma parada de ônibus típica onde as pessoas se reúnem, esperando por um ônibus que opera em um horário. Se não considerarmos a agitação das grandes cidades, onde os ônibus sempre estão atrasados, todos no mundo geralmente sabem que o trem da vila A para a vila B sempre chega por volta das 7h15. As transações que os usuários desejam enviar para o computador mundial se reúnem em uma determinada parada de ônibus e esperam o ônibus chegar.",
  "This is how our block is formed. Imagine: the bus arrives, and each person starts boarding one by one, taking their seats. The bus then follows its route. In our case, the block of information overcomes the first frontier. Our transactions, in some form, have settled into the bus and overcome the initial barrier. I will be using terminology primarily from Polkadot, and the third part should have better explained the concept of the world computer in the comparison between Ethereum and Polkadot. My personal opinion, and probably the majority of engineers today would agree, is that the representation of a heterogeneous multicentric world computer is better implemented in Polkadot. However, we will still go through the terms inherited from Ethereum, but towards the end of this part of the lecture.": "Assim é como nosso bloco é formado. Imagine: o ônibus chega, e cada pessoa começa a embarcar um por um, ocupando seus assentos. O ônibus então segue seu caminho. No nosso caso, o bloco de informações supera a primeira fronteira. Nossas transações, de alguma forma, se estabeleceram no ônibus e superaram a barreira inicial. Estarei usando terminologia principalmente do Polkadot, e a terceira parte deveria ter melhor explicado o conceito do computador mundial na comparação entre Ethereum e Polkadot. Minha opinião pessoal, e provavelmente a maioria dos engenheiros concordaria hoje, é que a representação de um computador mundial heterogêneo e multicêntrico é melhor implementada no Polkadot. No entanto, ainda passaremos pelos termos herdados do Ethereum, mas no final desta parte da palestra.",
  "What is the line that separates the bus stop from the bus's further movement? This line represents the collators of the network – participants in the network nodes who collect transactions. You can think of a collator not as a bus driver but as a controller who stays at the bus stop. In other words, this controller checks whether you have a ticket when you enter the bus. It doesn't recheck in the database how valid the ticket is but looks at the basic parameters of the ticket and checks if everything seems fine. In reality, collators perform almost all the calculations required, verifying the ticket number and other data, but they are not required to guarantee that the check is done correctly. Therefore, collators are controllers who remain at the bus stop, primarily ensuring passenger boarding, seating, and sending the bus further along the route.": "Qual é a linha que separa o ponto de ônibus do movimento adicional do ônibus? Essa linha representa os coletores da rede - participantes nos nós da rede que coletam transações. Você pode pensar em um coletor não como um motorista de ônibus, mas como um controlador que fica no ponto de ônibus. Em outras palavras, esse controlador verifica se você tem um bilhete quando entra no ônibus. Ele não verifica novamente no banco de dados quão válido é o bilhete, mas olha para os parâmetros básicos do bilhete e verifica se tudo parece bem. Na realidade, os coletores realizam quase todos os cálculos necessários, verificando o número do bilhete e outros dados, mas não são obrigados a garantir que a verificação seja feita corretamente. Portanto, os coletores são controladores que permanecem no ponto de ônibus, garantindo principalmente o embarque de passageiros, a ocupação de assentos e o envio do ônibus ao longo da rota.",
  "Beyond the drawn border, we enter the first validation area where paravalidators are located. These are validators of the entire ecosystem, the entire network, specifically assigned for a certain time to check each transaction and thus perform actual computations in the world computer. Our not-yet-fully-formed block of information is marked with a dashed line. It is still a candidate block of information since it has not undergone any actual verification. The collator, who collected the block of information and checked the transactions at the entrance, does not participate in any way in securing the cybersecurity of the computations conducted. Its task is only to seat all transactions and form the first block. At this stage, the transformation from a candidate to a real block of information begins.": "Além da fronteira desenhada, entramos na primeira área de validação onde estão localizados os paravalidadores. Estes são validadores de todo o ecossistema, de toda a rede, especificamente designados por um certo tempo para verificar cada transação e assim realizar cálculos reais no computador mundial. Nosso bloco de informações ainda não totalmente formado é marcado com uma linha tracejada. Ainda é um bloco de informações candidato, pois não passou por nenhuma verificação real. O coletor, que coletou o bloco de informações e verificou as transações na entrada, não participa de forma alguma na segurança cibernética das computações realizadas. Sua tarefa é apenas acomodar todas as transações e formar o primeiro bloco. Nesta fase, a transformação de um candidato em um bloco real de informações começa.",
  "I have divided it into three parts, but forgot one more. Let's consider four parts of this candidate block. The top part, known to users of various web3 applications as the header or block header, is the quintessence, the most popular piece of information circulating and reflected from the block explorer to the console clients of all nodes mining, staking, and so on. The header is a key element of the block, but it is practically formed at the last stage at this point.": "Dividi em três partes, mas esqueci mais uma. Vamos considerar quatro partes deste bloco candidato. A parte superior, conhecida pelos usuários de várias aplicações web3 como o cabeçalho ou cabeçalho de bloco, é a quintessência, a peça de informação mais popular circulando e refletida do explorador de blocos para os clientes de console de todos os nós de mineração, staking, e assim por diante. O cabeçalho é um elemento-chave do bloco, mas é praticamente formado na última etapa neste ponto.",
  "Firstly, we have our actual requests for state transitions or computations. There is a list of changes that need to be made: convert A to A', B to B', C to C', applying a set of algorithms to them. For this, we will now build another boundary immediately and go beyond it to perform this part of the work, and then only proceed beyond it. Already at the block preparation stage, we have to cross the second boundary within the world computer to go for the algorithms that need to be applied to prepare the block. As I mentioned before, theoretically, the controller at the bus stop here does the same, but I wouldn't pay much attention to that. The block preparation stage, especially when we talk about examples simultaneously from Polkadot and Ethereum as a world computer, they differ slightly and show us the insignificance of checks at this stage because it is precisely on the second step, after passing the first boundary and receiving the block of information from collators, that the attention-worthy calculations of this world computer begin.": "Primeiramente, temos nossas solicitações reais para transições de estado ou computações. Há uma lista de mudanças que precisam ser feitas: converter A para A', B para B', C para C', aplicando um conjunto de algoritmos a eles. Para isso, agora construiremos imediatamente outra fronteira e iremos além dela para realizar esta parte do trabalho, e então apenas prosseguiremos além dela. Já na fase de preparação do bloco, temos que atravessar a segunda fronteira dentro do computador mundial para ir aos algoritmos que precisam ser aplicados para preparar o bloco. Como mencionei antes, teoricamente, o controlador no ponto de ônibus aqui faz o mesmo, mas eu não daria muita atenção a isso. A fase de preparação do bloco, especialmente quando falamos de exemplos simultaneamente do Polkadot e do Ethereum como um computador mundial, eles diferem ligeiramente e nos mostram a insignificância das verificações nesta fase, porque é precisamente na segunda etapa, após passar a primeira fronteira e receber o bloco de informações dos coletores, que os cálculos dignos de atenção deste computador mundial começam.",
  "To perform these calculations, the validator, at this stage, can only do so by turning to the relay chain, the central database, and taking from there the algorithms from the runtime. In the case of Ethereum, it was the same virtual machines in the previous architectural concept, which could be applied, so there was no need to go anywhere. Almost every node had a complete copy of the algorithms that could be applied. But in terms of a heterogeneous network, where each segment or each individual chain may have its own set of algorithms, a validator, before actually executing all the transitions, calculations obtained in the form of a block candidate from the collator, must consult. It must consult the relay chain, consult the main blockchain in the network and take from there the necessary algorithms, apply them, and perform state transitions.": "Para realizar esses cálculos, o validador, nesta fase, só pode fazê-lo recorrendo à cadeia de retransmissão, ao banco de dados central, e retirando de lá os algoritmos do tempo de execução. No caso do Ethereum, eram as mesmas máquinas virtuais no conceito arquitetônico anterior, que poderiam ser aplicadas, então não havia necessidade de ir a nenhum lugar. Quase todos os nós tinham uma cópia completa dos algoritmos que poderiam ser aplicados. Mas em termos de uma rede heterogênea, onde cada segmento ou cada cadeia individual pode ter seu próprio conjunto de algoritmos, um validador, antes de realmente executar todas as transições, cálculos obtidos na forma de um bloco candidato do coletor, deve consultar. Deve consultar a cadeia de retransmissão, consultar o blockchain principal na rede e retirar de lá os algoritmos necessários, aplicá-los e realizar transições de estado.",
  "During the execution of calculations, a Merkle tree is simultaneously formed, and we won't dwell on it because Merkle trees are not that complicated from the perspective of computer science. Still, I notice that to understand how to apply them in engineering and in the architecture of a project, how they are applied, not just by reading on Wikipedia, you need to break your head a bit, imagine examples. In this example, we won't delve too much into it, but I think for those who are already familiar with some basic definitions, have read about Merkle trees, it will become a bit clearer about how and at what moments another Merkle tree is assembled. The Merkle tree is formed when we actually perform calculations and output values appear. These output values are packed into a binary tree format, then the addition is performed between them in computer science language, and the top node reaches the header. Let's denote it with a big letter \"H.\" It's a small and pleasant aspect of considering such schemes.": "Durante a execução dos cálculos, uma árvore de Merkle é formada simultaneamente, e não vamos nos deter nisso porque as árvores de Merkle não são tão complicadas do ponto de vista da ciência da computação. Ainda assim, percebo que para entender como aplicá-las em engenharia e na arquitetura de um projeto, como elas são aplicadas, não apenas lendo na Wikipedia, você precisa quebrar um pouco a cabeça, imaginar exemplos. Neste exemplo, não vamos nos aprofundar muito, mas acho que para aqueles que já estão familiarizados com algumas definições básicas, leram sobre árvores de Merkle, ficará um pouco mais claro sobre como e em que momentos outra árvore de Merkle é montada. A árvore de Merkle é formada quando realmente realizamos cálculos e valores de saída aparecem. Esses valores de saída são empacotados em um formato de árvore binária, então a adição é realizada entre eles na linguagem da ciência da computação, e o nó superior atinge o cabeçalho. Vamos denotá-lo com uma letra maiúscula \"H.\" É um aspecto pequeno e agradável considerar tais esquemas.",
  "In this scheme, we can note how the block header is actually related to the computations performed inside. Let's look again - our block candidate came from the collator. There is a set of transactions that need to be executed, perform calculations. The validator went through another internal boundary, one more, behind the algorithms, applied them, and recorded all the results at the lowest level of the Merkle tree. The other nodes are essentially systemic. They do not come from any data; they don't come from anywhere. At the second level, the node does not come from any information. It is obtained by summing values in these two leaves, and when we go up with you, we get only the root of this tree, which is enough to protect all output values. We won't get the same header if we change any of these calculations. And this is one of the magical and simple features, like hash-oriented storage, of how we can protect a whole block of information by talking only about one header. Therefore, headers are so important and play a cornerstone role even in architectures when we transition from one chain or one virtual machine to many combined in the network. It is enough for us to ensure the security of storing headers to be sure that all transactions that were executed at the block preparation stage were executed correctly, and they cannot be replaced.": "Neste esquema, podemos observar como o cabeçalho do bloco está realmente relacionado com os cálculos realizados internamente. Vamos olhar novamente - nosso bloco candidato veio do coletor. Há um conjunto de transações que precisam ser executadas, realizar cálculos. O validador passou por outra fronteira interna, mais uma, atrás dos algoritmos, os aplicou e registrou todos os resultados no nível mais baixo da árvore de Merkle. Os outros nós são essencialmente sistêmicos. Eles não vêm de nenhum dado; eles não vêm de lugar nenhum. No segundo nível, o nó não vem de nenhuma informação. Ele é obtido somando valores nesses dois nós, e quando subimos com você, obtemos apenas a raiz desta árvore, que é suficiente para proteger todos os valores de saída. Não obteremos o mesmo cabeçalho se alterarmos qualquer um desses cálculos. E esta é uma das características mágicas e simples, como o armazenamento orientado a hash, de como podemos proteger um bloco inteiro de informações falando apenas sobre um cabeçalho. Portanto, os cabeçalhos são tão importantes e desempenham um papel fundamental mesmo em arquiteturas quando fazemos a transição de uma cadeia ou de uma máquina virtual para muitas combinadas na rede. É suficiente para nós garantir a segurança de armazenar cabeçalhos para ter certeza de que todas as transações que foram executadas na fase de preparação do bloco foram executadas corretamente e não podem ser substituídas.",
  "And one field is still left unfilled. In the process of preparing the block of information, it is the author's field, that is, the validator who actually performed all the changes, prepared the Merkle tree, and recorded the header. Since we are considering an example with the bus moving along the route from the stop, let's call the validator a \"controller\" who goes right inside the bus, passes each seat, approaches each person, checks for real what is written on their tickets, makes some mark, validates it, and, accordingly, puts their signature. The controller, for example, number 134, meaning, naturally, each validator has some unique identifier, their address, and we also somehow uniquely renamed it here.": "E um campo ainda está vazio. No processo de preparação do bloco de informações, é o campo do autor, ou seja, o validador que realmente realizou todas as alterações, preparou a árvore de Merkle e registrou o cabeçalho. Como estamos considerando um exemplo com o ônibus se movendo ao longo da rota a partir da parada, vamos chamar o validador de \"controlador\" que entra no ônibus, passa por cada assento, se aproxima de cada pessoa, verifica o que está escrito em seus bilhetes, faz alguma marca, valida e, consequentemente, coloca sua assinatura. O controlador, por exemplo, número 134, o que significa, naturalmente, que cada validador tem um identificador único, seu endereço, e também o renomeamos de forma única aqui.",
  "And it seems that at this point, we could have shaded and made our block boundaries bolder, but no, and this is one of the interesting changes that have occurred in the last 5 years in terms of decentralized ecosystems, namely the shift from proof of work. When validators of the network, at that time miners, never had to coordinate anything with each other. You produced a block and sent it to the network and moved on. In fact, it was not a consensus of agreed consent. It was a consensus of obvious agreement with the fact that had occurred. What is interesting changes when the architecture becomes more complex, and we have come closer from a simple calculator like Bitcoin with a ledger towards an actual virtual computer, is that at each stage, the connectivity of participants who ensure security and block production has increased. Because, in fact, no one who risks their stake, the one who ensures this security and wants to earn by processing your transactions, has something to lose, unlike proof of work. In proof of work, you bought the equipment, yes, you put money into it, you spend electricity, but there is actually no protection against the fact that you can attack the network with your power, the same 51% attack, where someone with a lot of miners can try to rewrite the chain.": "E parece que neste ponto poderíamos ter sombreado e tornado nossos limites de bloco mais ousados, mas não, e esta é uma das mudanças interessantes que ocorreram nos últimos 5 anos em termos de ecossistemas descentralizados, ou seja, a mudança do proof of work. Quando os validadores da rede, naquela época mineradores, nunca precisavam coordenar nada entre si. Você produzia um bloco e o enviava para a rede e seguia em frente. Na verdade, não era um consenso de consentimento acordado. Era um consenso de acordo óbvio com o fato que havia ocorrido. O que é interessante nas mudanças quando a arquitetura se torna mais complexa, e nos aproximamos de um computador virtual real, é que em cada estágio, a conectividade dos participantes que garantem a segurança e a produção de blocos aumentou. Porque, na verdade, ninguém que arrisca sua participação, aquele que garante essa segurança e deseja ganhar processando suas transações, tem algo a perder, ao contrário do proof of work. No proof of work, você comprou o equipamento, sim, investiu dinheiro nele, gastou eletricidade, mas na verdade não há proteção contra o fato de que você pode atacar a rede com seu poder, o mesmo ataque de 51%, onde alguém com muitos mineradores pode tentar reescrever a cadeia.",
  "Now we are talking about proof of stake, where a deposit is already made, and if you do something wrong, a part will be withdrawn from it, as a penalty. All nodes, absolutely, in all architectures that I currently observe, mechanisms for messaging between validators began to appear quickly at the block preparation stage. In Polkadot, it is no different. Any validator of a separate parachain that collects a block knows the addresses or already has established contact with another 15-63 validators who are with you on this epoch, on some temporary period, as validators, and each of them randomly becomes a block producer at some point. But being appointed as a producer does not negate a very important component of this process. You do not stop interacting with the other participants. There is always a pool of validators assigned to a specific epoch, to a certain time slot, for validating a particular parachain or segment of the world computer. Regardless of whether you are a validator-controller specifically assigned to produce the next block in the world computer of this segment, you still stay in touch with the other validators, and you have constant contact with them.": "Agora estamos falando sobre a prova de participação, onde um depósito já foi feito, e se você fizer algo errado, uma parte será retirada dele, como uma penalidade. Todos os nós, absolutamente, em todas as arquiteturas que atualmente observo, mecanismos para mensagens entre validadores começaram a aparecer rapidamente na fase de preparação do bloco. No Polkadot, não é diferente. Qualquer validador de uma parachain separada que coleta um bloco conhece os endereços ou já estabeleceu contato com outros 15-63 validadores que estão com você nesta época, em algum período temporário, como validadores, e cada um deles aleatoriamente se torna um produtor de bloco em algum momento. Mas ser designado como produtor não nega um componente muito importante deste processo. Você não para de interagir com os outros participantes. Sempre há um grupo de validadores designados para uma época específica, para um determinado intervalo de tempo, para validar uma parachain específica ou segmento do computador mundial. Independentemente de você ser um validador-controlador especificamente designado para produzir o próximo bloco no computador mundial deste segmento, você ainda mantém contato com os outros validadores e tem contato constante com eles.",
  "Why is this constant contact necessary? It turns out to be quite simple. We do not want, when we move into the inner part, to be afraid or worry that we performed any of the operations incorrectly. As surprising as it may seem, it is beneficial for any validator, before moving on, to first turn to their colleagues assigned to validation and ask them to double-check the calculations. This check is informal, so even if we do not use any logging into an immutable database of requests for verification and the results of this verification, the appointed controller, after talking to the pool of validators, still collects additional responses from all validators assigned to this parachain or network segment. Together with additional confirmations, the controller moves on to the next stage. But even here, it's not quite as simple. At this stage, another process has to be performed. It is important to note that at this stage, our block of information is still a candidate block, and settlement of information is already taking place in the storage. Neither at the very end, nor after we have created and sealed the block and attached it with an archiver in the final part, namely here, in this middle part where all the calculations are actually performed, does the information get saved in the storage. Therefore, our controller, in addition to talking to their colleagues, also ensures the storage of data in some storage, which is also quite metaphysical because the moment you communicate with other validators, this storage gets filled. How is this checked? We will need to move on to the next stage.": "Por que esse contato constante é necessário? Acontece que é bastante simples. Não queremos, ao nos movermos para a parte interna, ter medo ou preocupação de que tenhamos realizado alguma das operações incorretamente. Por mais surpreendente que possa parecer, é benéfico para qualquer validador, antes de prosseguir, primeiro recorrer aos seus colegas designados para validação e pedir a eles para verificar novamente os cálculos. Essa verificação é informal, então mesmo que não usemos nenhum registro em um banco de dados imutável de solicitações de verificação e os resultados dessa verificação, o controlador designado, após falar com o grupo de validadores, ainda coleta respostas adicionais de todos os validadores designados para essa paracadeia ou segmento de rede. Juntamente com confirmações adicionais, o controlador avança para a próxima etapa. Mas mesmo aqui, não é tão simples. Nesta etapa, outro processo precisa ser realizado. É importante notar que nesta etapa, nosso bloco de informações ainda é um bloco candidato, e o acerto de informações já está ocorrendo no armazenamento. Nem no final, nem depois de termos criado e selado o bloco e o anexado com um arquivador na parte final, ou seja, aqui, nesta parte intermediária onde todos os cálculos são realmente realizados, as informações são salvas no armazenamento. Portanto, nosso controlador, além de falar com seus colegas, também garante o armazenamento de dados em algum armazenamento, o que também é bastante metafísico porque no momento em que você se comunica com outros validadores, esse armazenamento é preenchido. Como isso é verificado? Precisaremos avançar para a próxima etapa.",
  "In summary, to complete the middle part, let's look again. We still have only a candidate block at the very beginning. Yes, all transactions are roughly calculated somewhere at the bus stop, everyone has taken their seats according to their tickets. We have passed the first boundary, which is essentially direct established contact between validators and block collators. In Ethereum and Polkadot, these are slightly different schemes now. But everything that happens on the left side at the very beginning does not provide cybersecurity for data and calculations. It's just preparation. Once we have passed and entered the environment of the validators' attention, work with the block of information in the world computer begins. A randomly selected validator, in our case, with a bus route - a controller, actually goes through each of the seats, checks the ticket, checks and performs all the calculations that were made, gathers all the information into a tree. The resulting root node of this tree becomes the header of the proposed block. The validator who actually performs all the calculations with this block of information communicates with the other participants who perform a similar function for the same route in an undefined time slot. And while communicating with them and asking them to verify all the calculations, we are actually filling a certain storage of data in the network. It is not a specific physical storage; there is no specific IP address, no specific hard drive onto which they all load through some VPN or login and password scheme, of course not. In the process of communicating with other validators, data remains on their local machines, and this data will further participate in the transformation of this candidate into a new block of information. In essence, the sealed block that will be settled in the relay chain is collected. We have assembled a block. All the metadata around the calculations is already filled, which means we can try to move on to the next frontier.": "Em resumo, para completar a parte do meio, vamos olhar novamente. Ainda temos apenas um bloco candidato no início. Sim, todas as transações são calculadas aproximadamente em algum lugar no ponto de ônibus, todos já ocuparam seus assentos de acordo com seus bilhetes. Passamos a primeira fronteira, que é essencialmente o contato direto estabelecido entre validadores e coletores de blocos. No Ethereum e no Polkadot, esses esquemas são ligeiramente diferentes agora. Mas tudo o que acontece no lado esquerdo no início não fornece cibersegurança para dados e cálculos. É apenas preparação. Uma vez que passamos e entramos no ambiente da atenção dos validadores, o trabalho com o bloco de informações no computador mundial começa. Um validador selecionado aleatoriamente, em nosso caso, com uma rota de ônibus - um controlador, na verdade passa por cada um dos assentos, verifica o bilhete, verifica e realiza todos os cálculos que foram feitos, reúne todas as informações em uma árvore. O nó raiz resultante desta árvore se torna o cabeçalho do bloco proposto. O validador que realmente realiza todos os cálculos com este bloco de informações se comunica com os outros participantes que desempenham uma função semelhante para a mesma rota em um intervalo de tempo indefinido. E enquanto se comunica com eles e pedindo-lhes para verificar todos os cálculos, na verdade estamos preenchendo um certo armazenamento de dados na rede. Não é um armazenamento físico específico; não há um endereço IP específico, nenhum disco rígido específico no qual todos carregam através de algum esquema de VPN ou login e senha, é claro que não. No processo de comunicação com outros validadores, os dados permanecem em suas máquinas locais, e esses dados participarão posteriormente da transformação desse candidato em um novo bloco de informações. Na essência, o bloco selado que será liquidado na cadeia de retransmissão é coletado. Montamos um bloco. Todos os metadados em torno dos cálculos já estão preenchidos, o que significa que podemos tentar avançar para a próxima fronteira.",
  "At this moment, let's delve into the passage of the next boundary. The most crucial aspect at the final stage becomes the block header. We are less concerned with the execution of computations; we can simplify our perspective here, as computations may vary based on the architecture, whether it's Ethereum or Polkadot. The key point is that, on the intermediate stage, from what I observe in the theory and practice of implementing the world computer concept, most computations happen at an intermediate level. The last level remains only to execute essential checks. Almost all these checks in a multi-chain architecture are related to the concatenation or merging of block headers into one block.": "Neste momento, vamos aprofundar na passagem da próxima fronteira. O aspecto mais crucial na fase final torna-se o cabeçalho do bloco. Estamos menos preocupados com a execução de cálculos; podemos simplificar nossa perspectiva aqui, já que os cálculos podem variar com base na arquitetura, seja Ethereum ou Polkadot. O ponto chave é que, na fase intermediária, a partir do que observo na teoria e prática da implementação do conceito de computador mundial, a maioria dos cálculos acontece em um nível intermediário. O último nível permanece apenas para executar verificações essenciais. Quase todas essas verificações em uma arquitetura multi-chain estão relacionadas à concatenação ou fusão de cabeçalhos de bloco em um só bloco.",
  "In the final part of our journey, the most important element in the world computer's information block becomes the cornerstone – the header. The second component is more about meta-information. If the header is the actual result of all computations, the additional meta-information being transmitted consists of receipts and signatures of the validators who participated in the intermediate stage of this process. At the final stage, we can visualize the whole picture solely as the assembly of the same tree, not as a list of transactions. In the relay chain's final part, the crucial aspect is the assembly of headers from many similar processes, but linked to different segments of the world computer, different parachains.": "Na parte final de nossa jornada, o elemento mais importante no bloco de informações do computador mundial torna-se a pedra angular - o cabeçalho. O segundo componente é mais sobre meta-informação. Se o cabeçalho é o resultado real de todos os cálculos, a meta-informação adicional transmitida consiste em recibos e assinaturas dos validadores que participaram da fase intermediária desse processo. Na fase final, podemos visualizar a imagem completa apenas como a montagem da mesma árvore, não como uma lista de transações. Na parte final da cadeia de retransmissão, o aspecto crucial é a montagem de cabeçalhos de muitos processos semelhantes, mas ligados a diferentes segmentos do computador mundial, diferentes parachains.",
  "Each parachain, each set of validators – we've discussed one example, but in reality, such block preparations for parachains happen 30-40 times. The number of parachain slots or the number of L2 networks in Ethereum will result in a similar number of processes with a similar architecture. However, in the final stage, we will see an approximately identical picture everywhere – how the block header will be formed from a multitude of headers from other blocks. In this process, we need to introduce one more entity and jump back across the boundary to the second stage.": "Cada parachain, cada conjunto de validadores - discutimos um exemplo, mas na realidade, tais preparações de bloco para parachains acontecem 30-40 vezes. O número de slots de parachain ou o número de redes L2 no Ethereum resultará em um número semelhante de processos com uma arquitetura semelhante. No entanto, na fase final, veremos uma imagem aproximadamente idêntica em todos os lugares - como o cabeçalho do bloco será formado a partir de uma multidão de cabeçalhos de outros blocos. Neste processo, precisamos introduzir mais uma entidade e voltar através da fronteira para a segunda fase.",
  "Finalizers. In fact, they are also validators, but relay chain validators. In the Polkadot architecture, we have a thousand validators divided into two groups. The first, a very small group, is responsible only for forming the block header and a new block consisting of the headers of the State of the States blocks. The second group – parachain validators – is further divided into many subgroups, but this group is called parachain validators. In L2 networks above Ethereum, this story will eventually gain more understanding, more denominators. For now, let's focus on the Polkadot architecture. Finalizers, besides checking an additional set of meta-information and rechecking a validator with a specific ID, randomly chosen to generate this block of all blocks, also help recheck meta-information, check, and assemble all headers into one. It's a bit complex, yes, if we look at it from the perspective of tree assembly.": "Finalizadores. Na verdade, eles também são validadores, mas validadores da cadeia de retransmissão. Na arquitetura Polkadot, temos mil validadores divididos em dois grupos. O primeiro, um grupo muito pequeno, é responsável apenas pela formação do cabeçalho do bloco e um novo bloco composto pelos cabeçalhos dos blocos do Estado dos Estados. O segundo grupo - validadores de parachain - é ainda dividido em muitos subgrupos, mas este grupo é chamado de validadores de parachain. Nas redes L2 acima do Ethereum, essa história eventualmente ganhará mais compreensão, mais denominadores. Por enquanto, vamos nos concentrar na arquitetura Polkadot. Finalizadores, além de verificar um conjunto adicional de meta-informações e re-verificar um validador com um ID específico, escolhido aleatoriamente para gerar este bloco de todos os blocos, também ajudam a re-verificar as meta-informações, verificar e montar todos os cabeçalhos em um só. É um pouco complexo, sim, se olharmos para isso a partir da perspectiva da montagem da árvore.",
  "In addition to this, in the Polkadot architecture and in Ethereum with the latest changes, a data availability check takes place. For this, finalizers visit parachain validators and try to request actual information about each block stored in the network. If they receive data from at least 1/3 of the validators, using technology that allows redundant storage of information, and subsequently, if someone loses it, one or two or three validators can still restore it, there is a critical threshold at 1/3. If 1/3 of the nodes respond and say that we have data about the block being produced, finalizers tell the block that it is already a fully formed information block, that all computations have been done correctly, that we have already taken the header of this block and combined it with someone else's headers from other segments of the network. We have already formed the main header of the entire network. After that, finalizers place many checkmarks on the final block, which combines all performed computations.": "Além disso, na arquitetura do Polkadot e no Ethereum com as últimas mudanças, ocorre uma verificação de disponibilidade de dados. Para isso, os finalizadores visitam os validadores de parachain e tentam solicitar informações reais sobre cada bloco armazenado na rede. Se eles receberem dados de pelo menos 1/3 dos validadores, usando tecnologia que permite o armazenamento redundante de informações, e posteriormente, se alguém perder, um, dois ou três validadores ainda podem restaurá-lo, há um limite crítico em 1/3. Se 1/3 dos nós responderem e disserem que temos dados sobre o bloco sendo produzido, os finalizadores informam ao bloco que ele já é um bloco de informação totalmente formado, que todos os cálculos foram feitos corretamente, que já pegamos o cabeçalho deste bloco e o combinamos com cabeçalhos de outras partes da rede. Já formamos o cabeçalho principal de toda a rede. Depois disso, os finalizadores colocam muitas marcas de verificação no bloco final, que combina todos os cálculos realizados.",
  "Currently, this is the situation from the perspective of the most engineering-implemented multi-chain heterogeneous ecosystem, which is Polkadot. It is the most engineering-implemented multi-chain heterogeneous ecosystem, not too far from Ethereum. I would like to focus on the comparison, and if someone is interested in understanding how information blocks flow in Ethereum with L2 networks, you can try to do that now. I will return to this question when some elements of Ethereum, in terms of heterogeneity and multi-chain aspects, are completed. It might take 1-2 years, and then we can build such a picture. Nevertheless, we can generally accept a scheme with three main stages:": "Atualmente, esta é a situação do ponto de vista do ecossistema heterogêneo de várias cadeias mais implementado em termos de engenharia, que é o Polkadot. É o ecossistema heterogêneo de várias cadeias mais implementado em termos de engenharia, não muito distante do Ethereum. Gostaria de focar na comparação, e se alguém estiver interessado em entender como os blocos de informação fluem no Ethereum com redes L2, você pode tentar fazer isso agora. Voltarei a esta questão quando alguns elementos do Ethereum, em termos de heterogeneidade e aspectos de várias cadeias, estiverem concluídos. Pode levar 1-2 anos, e então podemos construir tal imagem. No entanto, podemos geralmente aceitar um esquema com três estágios principais:",
  "**1. Formation of a candidate for the information block:**": "**1. Formação de um candidato para o bloco de informações:**",
  "In this stage, the initial candidate for the information block is formed.": "Nesta etapa, o candidato inicial para o bloco de informações é formado.",
  "**2. Execution of all computations, data storage, data availability, rechecking with other nodes, ensuring that all state transitions are performed correctly according to specific algorithms, and storing these algorithms in the main citadel:**": "**2. Execução de todos os cálculos, armazenamento de dados, disponibilidade de dados, rechecagem com outros nós, garantindo que todas as transições de estado sejam realizadas corretamente de acordo com algoritmos específicos e armazenando esses algoritmos na cidadela principal:**",
  "This stage involves the actual execution of computations, saving data to certain layers, ensuring data availability, rechecking with other nodes to confirm that all state transitions are in accordance with algorithms stored somewhere in the main citadel.": "Esta etapa envolve a execução real de cálculos, salvando dados em camadas específicas, garantindo a disponibilidade de dados, rechecando com outros nós para confirmar que todas as transições de estado estão de acordo com algoritmos armazenados em algum lugar na cidadela principal.",
  "**3. Finalization, which will not recheck the computations but will verify the meta-information, how this meta-information is stored. It will then assemble the final block, which is the state of the states, and release it as a common information block for the entire segmented multi-chain network:**": "**3. Finalização, que não rechecará os cálculos, mas verificará as meta-informações, como essas meta-informações são armazenadas. Em seguida, montará o bloco final, que é o estado dos estados, e o liberará como um bloco de informações comum para toda a rede multi-cadeia segmentada:**",
  "The final stage involves checking the meta-information, verifying how this meta-information is stored, assembling the final block (state of the states), and releasing it as a common information block for the entire segmented multi-chain network.": "A etapa final envolve a verificação das meta-informações, verificando como essas meta-informações são armazenadas, montando o bloco final (estado dos estados) e liberando-o como um bloco de informações comum para toda a rede multi-cadeia segmentada.",
  "At this point, we can say that our information is saved. It has passed through the heart, the heart has executed its data transfer correctly, and we can already use the output values. Some will use them to open a smart-contract-purchased apartment with a smart lock, while others might show off their NFT, just received for 10 ethers.": "Neste ponto, podemos dizer que nossas informações estão salvas. Elas passaram pelo coração, o coração executou sua transferência de dados corretamente e já podemos usar os valores de saída. Alguns os usarão para abrir um apartamento comprado com um contrato inteligente com uma fechadura inteligente, enquanto outros podem exibir seu NFT, acabado de receber por 10 ethers.",
  "In general, this is approximately how it works. This concludes the theoretical part. I think it took about 2 hours, and ahead of us are practical sessions that I will be recording over the next few months. They will help us understand the observed data from the console window, decentralized applications, block explorers, where we will gradually understand how all these theoretical numbers and letters actually look in implementation using Polkadot as an example. I will also start getting hands-on with implementations at the L2 level using one of the well-known frameworks for building L2. Thank you to everyone who has been watching.": "Em geral, é mais ou menos assim que funciona. Isso conclui a parte teórica. Acredito que tenha levado cerca de 2 horas e, à nossa frente, estão as sessões práticas que estarei gravando ao longo dos próximos meses. Elas nos ajudarão a entender os dados observados na janela do console, aplicações descentralizadas, exploradores de blocos, onde gradualmente entenderemos como todos esses números e letras teóricos realmente se parecem na implementação usando o Polkadot como exemplo. Também começarei a colocar a mão na massa com implementações no nível L2 usando um dos frameworks conhecidos para construir L2. Obrigado a todos que estiveram assistindo."
}