{
  "Part 3: Emergence of the World Computer": "Parte 3: Emergenza del Computer Mondiale",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.\"": "Nella terza parte intitolata \"Emergenza del Computer Mondiale,\" cercheremo, strato dopo strato, di ricreare l'implementazione ingegneristica del computer mondiale utilizzando esempi da Ethereum e Polkadot, come fatto in precedenza.",
  "Learn": "Imparare",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.": "Nella terza parte intitolata \"Emergenza del Computer Mondiale,\" cercheremo, strato dopo strato, di ricreare l'implementazione ingegneristica del computer mondiale utilizzando esempi da Ethereum e Polkadot, come fatto in precedenza.",
  "Let's start with Ethereum. Ethereum began in 2015 with a state that can be characterized as a combination of the proof-of-work consensus algorithm, enabling the world computer to exist in a decentralized state (as discussed in Part 2). Additionally, the Ethereum Virtual Machine (EVM) was introduced, serving as a Turing-complete computational machine. Together, these two elements formed the first version of the world computer, sometimes referred to as a precursor. Within this context, decentralized applications, or smart contracts, began to emerge.": "Cominciamo con Ethereum. Ethereum è iniziato nel 2015 con uno stato che può essere caratterizzato come una combinazione dell'algoritmo di consenso proof-of-work, consentendo al computer mondiale di esistere in uno stato decentralizzato (come discusso nella Parte 2). Inoltre, è stata introdotta la Ethereum Virtual Machine (EVM), che funge da macchina computazionale Turing-completa. Insieme, questi due elementi hanno formato la prima versione del computer mondiale, talvolta definito come precursore. In questo contesto, le applicazioni decentralizzate, o smart contract, hanno iniziato a emergere.",
  "Over the next 5 years, Ethereum lived a relatively unchanged life, undergoing some engineering tunings, such as a continuous increase in gas limits, with the exception of events like the Shanghai fork. Notably, during the second DEFCON held in Shanghai, a denial-of-service attack exploited a function in the virtual machine that consumed minimal gas but triggered significant computations on the Ethereum network. This led to memory overflow, effectively disrupting an entire Ethereum node. This incident highlights the intricate details that arise when dealing with a large and abstract solution like creating a virtual machine.": "Nei successivi 5 anni, Ethereum ha vissuto una vita relativamente invariata, subendo alcuni aggiustamenti ingegneristici, come un continuo aumento dei limiti di gas, ad eccezione di eventi come il fork di Shanghai. In particolare, durante il secondo DEFCON tenutosi a Shanghai, un attacco di tipo denial-of-service ha sfruttato una funzione nella macchina virtuale che consumava un gas minimo ma attivava calcoli significativi sulla rete Ethereum. Ciò ha portato a un overflow di memoria, interrompendo efficacemente un intero nodo Ethereum. Questo incidente mette in luce i dettagli intricati che sorgono quando si tratta di una soluzione ampia e astratta come la creazione di una macchina virtuale.",
  "Moving forward, a significant shift occurred around the end of the decade, particularly in 2020, with the advent of Ethereum 2.0. However, Ethereum 2.0 has now been deprecated, and I would characterize the real breakthrough as starting around 2019-2020. During this period, there was a true technological breakthrough in Ethereum, moving towards the concept of Ethereum 2.0. The moment of engineering change in Ethereum's architecture can be considered the event known as \"the merge,\" where the functionalities of the beacon chain were combined. The merge marked a significant shift in the paradigm of Ethereum, transitioning it into a slightly different state than what was on the board. The actual engineering change in Ethereum's architecture can be associated with \"the merge,\" where the functionalities of the beacon chain were integrated. For a detailed history of this, you can refer to the ethereum.org website, which provides an excellent article on the coexistence of the traditional Ethereum blockchain with the parallel blockchain launched in 2015 and the Ethereum Virtual Machine.": "Andando avanti, si è verificato un cambiamento significativo verso la fine del decennio, in particolare nel 2020, con l'avvento di Ethereum 2.0. Tuttavia, Ethereum 2.0 è ora obsoleto, e caratterizzerei la vera svolta come iniziata intorno al 2019-2020. Durante questo periodo, c'è stata una vera svolta tecnologica in Ethereum, muovendosi verso il concetto di Ethereum 2.0. Il momento del cambiamento ingegneristico nell'architettura di Ethereum può essere considerato l'evento noto come \"the merge,\" dove le funzionalità della catena beacon sono state combinate. Il merge ha segnato un cambiamento significativo nel paradigma di Ethereum, trasformandolo in uno stato leggermente diverso da quello che era inizialmente previsto. Il vero cambiamento ingegneristico nell'architettura di Ethereum può essere associato a \"the merge,\" dove le funzionalità della catena beacon sono state integrate. Per una storia dettagliata di questo, è possibile fare riferimento al sito ethereum.org, che fornisce un eccellente articolo sulla coesistenza della tradizionale blockchain Ethereum con la blockchain parallela lanciata nel 2015 e la Ethereum Virtual Machine.",
  "When the merge occurred, we witnessed a new architectural representation, both at the network level and for individual nodes interacting with the Ethereum network. What was the actual change? For many, the merge signifies the transition from proof-of-work to proof-of-stake, which is indeed significant. It implies increased efficiency and fine-tuning, but it's still a tuning relative to one of the parameters. However, the more noteworthy internal engineering change for each network client was the split. There was no longer a single specific network client or a monolithic architecture. Instead, we got two components of a single node interacting with the Ethereum network.": "Quando si è verificata la fusione, abbiamo assistito a una nuova rappresentazione architettonica, sia a livello di rete che per i singoli nodi che interagiscono con la rete Ethereum. Qual è stato il cambiamento effettivo? Per molti, la fusione significa il passaggio da proof-of-work a proof-of-stake, che è effettivamente significativo. Implica un aumento dell'efficienza e del perfezionamento, ma è comunque un perfezionamento relativo a uno dei parametri. Tuttavia, il cambiamento ingegneristico interno più degno di nota per ciascun client di rete è stata la divisione. Non c'era più un singolo client di rete specifico o un'architettura monolitica. Invece, abbiamo ottenuto due componenti di un singolo nodo che interagiscono con la rete Ethereum.",
  "The first part, which I labeled \"beacon chain\" on the diagram, essentially represents a collective image of all the innovations that came into the Ethereum client at the moment of the merge. The second part is the preserved virtual machine. Nevertheless, it's worth adding something here too. Dialogues truly began about replacing the virtual machine, which was exclusively tailored to work with smart contracts and smart contracts in a specific language—Solidity. This is because, by 2015, there were practically no interpreters left for smart contracts in languages other than Solidity, and the architecture appeared somewhat one-sided from the perspective of an Ethereum programmer. You learn a snippet of JavaScript in the form of Solidity, write smart contract code on it, and get your DApp, like Uniswap, for example.": "La prima parte, che ho etichettato come \"catena di beacon\" nel diagramma, rappresenta essenzialmente un'immagine collettiva di tutte le innovazioni che sono entrate nel client Ethereum al momento della fusione. La seconda parte è la macchina virtuale preservata. Tuttavia, vale la pena aggiungere anche qualcosa qui. I dialoghi hanno veramente iniziato a riguardo alla sostituzione della macchina virtuale, che era esclusivamente progettata per lavorare con smart contract e smart contract in un linguaggio specifico - Solidity. Questo perché, entro il 2015, non c'erano praticamente più interpreti per smart contract in lingue diverse da Solidity, e l'architettura appariva in qualche modo unilaterale dal punto di vista di un programmatore Ethereum. Impari un frammento di JavaScript sotto forma di Solidity, scrivi codice smart contract su di esso e ottieni la tua DApp, come ad esempio Uniswap.",
  "Since the emergence of a more complex Ethereum architecture, discussions have revolved around the idea that the virtual machine, which existed as a somewhat monolithic element from 2015, can also be replaced in the new architecture. The conversation shifted towards replacing it with something like WebAssembly (Wasm) or a more interesting solution from the perspective of writing code for the world computer. You could say, \"Wasm with a question mark.\"": "Dall'emergere di un'architettura Ethereum più complessa, le discussioni hanno ruotato attorno all'idea che la macchina virtuale, che esisteva come un elemento in qualche modo monolitico dal 2015, possa anche essere sostituita nella nuova architettura. La conversazione si è spostata verso la sostituzione con qualcosa come WebAssembly (Wasm) o una soluzione più interessante dal punto di vista della scrittura di codice per il computer mondiale. Si potrebbe dire, \"Wasm con un punto interrogativo.\"",
  "From the perspective of the Beacon Chain, it indeed operates on proof-of-stake, but what's more interesting is the inclusion of Gasper. This represents a modification of the original ideas about Casper. Casper, often referred to as the friendly ghost finality gadget, was introduced, perhaps even as early as Defcon 3 or 4, and maybe even discussed at Defcon 2—I don't recall precisely. But at the EthCC conference in Paris, which definitely took place in 2018, Vlad Zamfir and Vitalik, from different rooms, were discussing the emergence of Casper as a friendly ghost, overseeing participants in proof-of-stake and coming to the aid of the network when a node misbehaves. From this idea of Casper, Gasper emerges. Without delving into terminology too much, the consensus algorithm undergoes a shift, changing not only in terms of simplicity but also becoming more complex, similar to Polkadot. As I mentioned earlier, Polkadot has two consensus algorithms, Babe and Grandpa. Similarly, with Ethereum's Beacon Chain functionality, achieving consensus and finality is not as instantaneous. It involves epochs, and the network operates on a more complex scenario, reaching a state that is already somewhat dynamic, not frozen, and is essentially carved in stone.": "Dal punto di vista della Catena di Beacon, opera effettivamente su proof-of-stake, ma ciò che è più interessante è l'inclusione di Gasper. Questo rappresenta una modifica delle idee originali su Casper. Casper, spesso definito come il gadget di finalità friendly ghost, è stato introdotto, forse già a Defcon 3 o 4, e forse discusso anche a Defcon 2 - non ricordo esattamente. Ma alla conferenza EthCC a Parigi, che si è svolta sicuramente nel 2018, Vlad Zamfir e Vitalik, da stanze diverse, stavano discutendo dell'emergere di Casper come un fantasma amichevole, sorvegliando i partecipanti al proof-of-stake e venendo in aiuto della rete quando un nodo si comporta male. Da questa idea di Casper emerge Gasper. Senza addentrarsi troppo nella terminologia, l'algoritmo di consenso subisce uno spostamento, cambiando non solo in termini di semplicità ma diventando anche più complesso, simile a Polkadot. Come ho già detto, Polkadot ha due algoritmi di consenso, Babe e Grandpa. Allo stesso modo, con la funzionalità della Catena di Beacon di Ethereum, raggiungere il consenso e la finalità non è istantaneo. Coinvolge epoche, e la rete opera su uno scenario più complesso, raggiungendo uno stato che è già in qualche modo dinamico, non congelato, ed è essenzialmente inciso nella pietra.",
  "What can be added in relation to 2024? For me, it was a prolonged observation and an attempt to understand whether Ethereum would eventually implement sharding or not. Sharding is the ability to exist not with a single blockchain but with multiple blockchains within one network. As I observed the merge and the simultaneous rise of Layer 2 (L2) networks, questions arose in my mind about whether sharding would indeed materialize. Sharding seemed interesting to me due to its homogeneity—having multiple chains that are almost identical, lacking any specific characteristics. It appeared to be an interesting approach, but not as flexible as a heterogeneous approach. In L2 networks, even several years ago, I could see the heterogeneity of Ethereum, its ability to work with various types of more specific blockchains. I was curious about the direction it would take—whether sharding, with its homogeneity, would displace L2 solutions or whether L2 solutions with a heterogeneous approach would saturate the Beacon Chain and the main nodes of the Ethereum network.": "Cosa si può aggiungere in relazione al 2024? Per me, è stata un'osservazione prolungata e un tentativo di capire se Ethereum avrebbe alla fine implementato lo sharding o meno. Lo sharding è la capacità di esistere non con una singola blockchain ma con più blockchain all'interno di una rete. Mentre osservavo la fusione e la simultanea crescita delle reti Layer 2 (L2), mi sono sorti dubbi sulla reale materializzazione dello sharding. Lo sharding mi sembrava interessante per la sua omogeneità - avere più catene che sono quasi identiche, prive di caratteristiche specifiche. Sembrava essere un approccio interessante, ma non così flessibile come un approccio eterogeneo. Nelle reti L2, anche diversi anni fa, potevo vedere l'eterogeneità di Ethereum, la sua capacità di lavorare con vari tipi di blockchain più specifiche. Ero curioso sulla direzione che avrebbe preso - se lo sharding, con la sua omogeneità, avrebbe spodestato le soluzioni L2 o se le soluzioni L2 con un approccio eterogeneo avrebbero saturato la Catena di Beacon e i nodi principali della rete Ethereum.",
  "Today, in 2024, based on articles on ethereum.org, it seems that sharding as a concept has been pushed back, and the focus is on helping various L2 networks integrate with the Beacon Chain and align with the main chain's functionality, which is now divided into two elements in the Ethereum network's architecture.": "Oggi, nel 2024, basandosi sugli articoli su ethereum.org, sembra che lo sharding come concetto sia stato rimandato e il focus sia sull'aiutare varie reti L2 a integrarsi con la Catena di Beacon e allinearsi con la funzionalità della catena principale, che ora è divisa in due elementi nell'architettura della rete Ethereum.",
  "Therefore, without delving into the details of how L2 networks are structured—although we'll touch upon that when we fill in the second part of the board—we should imagine that Ethereum is now a kind of Beacon Chain, a beacon, a guiding star for numerous L2 networks. These L2 networks can have more specific functionality, executing their logic according to a set of individual functions. This is somewhat in line with the idea of a Swiss Army knife—not making Ethereum a Swiss Army knife, but L2 networks are starting to differentiate in architecture. They duplicate the functionality of the abstract computing machine of Ethereum but perform it with lower gas costs or within their specific segment. Some are already thinking about tuning and making their L2 layer more efficient, focusing on specific functional capabilities. Thus, in my opinion, we are witnessing the emergence of heterogeneity in the world computer that aimed to be homogeneous. Also, it's essential not to forget that decentralized applications (dApps) still exist within the main blockchain, within that same blockchain that started in 2015. This means that during the merge, during the transition to the new architectural state, there was no wipeout, no erasure of the previous history. All decentralized applications and smart contracts underlying these applications continued to exist, and they continue to exist today, and probably tomorrow. This is a question that we will explore using Polkadot as an example, but there is still a feeling that it will be possible to settle a decentralized application in the Beacon Chain—dApps.": "Pertanto, senza approfondire i dettagli su come sono strutturati i network L2 - anche se ne parleremo quando completeremo la seconda parte della tavola - dovremmo immaginare che Ethereum sia ora una sorta di Beacon Chain, un faro, una stella guida per numerosi network L2. Questi network L2 possono avere funzionalità più specifiche, eseguendo la loro logica secondo un insieme di funzioni individuali. Questo è in linea con l'idea di un coltellino svizzero - non facendo di Ethereum un coltellino svizzero, ma i network L2 stanno iniziando a differenziarsi nell'architettura. Essi duplicano la funzionalità della macchina di calcolo astratta di Ethereum ma la eseguono con costi di gas inferiori o all'interno del loro segmento specifico. Alcuni stanno già pensando di ottimizzare e rendere più efficiente il loro strato L2, concentrandosi su capacità funzionali specifiche. Quindi, secondo me, stiamo assistendo all'emergere dell'eterogeneità nel computer mondiale che mirava ad essere omogeneo. Inoltre, è essenziale non dimenticare che le applicazioni decentralizzate (dApps) esistono ancora all'interno della blockchain principale, all'interno della stessa blockchain che è iniziata nel 2015. Ciò significa che durante il merge, durante il passaggio al nuovo stato architetturale, non c'è stata cancellazione, nessuna cancellazione della storia precedente. Tutte le applicazioni decentralizzate e i contratti intelligenti alla base di queste applicazioni hanno continuato a esistere, e continuano ad esistere oggi, e probabilmente domani. Questa è una questione che esploreremo utilizzando Polkadot come esempio, ma c'è ancora la sensazione che sarà possibile sistemare un'applicazione decentralizzata nella Beacon Chain - dApps.",
  "In summary, let's imagine the engineering implementation of today's Ethereum as a world computer. We have each network node consisting of two parts. The first layer is responsible for the Ethereum Virtual Machine (EVM), the actual functionality of the virtual machine or Turing complete machine, if we talk in theoretical terms. Perhaps we will see the emergence of alternatives to the virtual machine designed in 2015. These alternatives will likely surpass it in terms of more abstract programming possibilities than writing smart contracts in Solidity. Meanwhile, smart contracts in Solidity continue to feel comfortable. If you want to write functionality for the Ethereum main chain without creating any infrastructure on top of Ethereum, without offloading any calculations to make them cheaper, and so on, decentralized applications that you can write as smart contracts can still be housed in Ethereum's main blockchain. At the same time, Beacon Chain functionality has emerged, separating the consensus logic between validators from the main protocol of the computing machine. This allows for additional flexibility in how consensus should work and how it should be further modified without affecting the virtual machine itself. The example of Shanghai and Defcon 2, where a small opcode error caused a shutdown of part of the infrastructure, hints that it would be good to have such complex functionalities separated into two parts.": "In sintesi, immaginiamo l'implementazione ingegneristica dell'Ethereum di oggi come un computer mondiale. Abbiamo ogni nodo di rete composto da due parti. Il primo strato è responsabile della Ethereum Virtual Machine (EVM), la funzionalità effettiva della macchina virtuale o macchina completa di Turing, se parliamo in termini teorici. Forse vedremo l'emergere di alternative alla macchina virtuale progettata nel 2015. Queste alternative probabilmente la supereranno in termini di possibilità di programmazione più astratte rispetto alla scrittura di smart contract in Solidity. Nel frattempo, i contratti intelligenti in Solidity continuano a sentirsi a proprio agio. Se si desidera scrivere funzionalità per la blockchain principale di Ethereum senza creare alcuna infrastruttura sopra Ethereum, senza scaricare calcoli per renderli più economici, e così via, le applicazioni decentralizzate che è possibile scrivere come smart contract possono ancora essere ospitate nella blockchain principale di Ethereum. Allo stesso tempo, è emersa la funzionalità di Beacon Chain, separando la logica del consenso tra i validatori dal protocollo principale della macchina di calcolo. Questo consente una maggiore flessibilità su come dovrebbe funzionare il consenso e come dovrebbe essere ulteriormente modificato senza influenzare la macchina virtuale stessa. L'esempio di Shanghai e Defcon 2, dove un piccolo errore di opcode ha causato lo spegnimento di parte dell'infrastruttura, suggerisce che sarebbe buono avere tali funzionalità complesse separate in due parti.",
  "What's interesting about the Beacon Chain? It is a more complex, comprehensive algorithm for achieving network synchronicity and finalization with the introduction of concepts such as \"epoch,\" and the presence of a ghost living within the network.": "Cosa c'è di interessante nella Beacon Chain? È un algoritmo più complesso e completo per raggiungere la sincronizzazione e la finalizzazione della rete con l'introduzione di concetti come \"epoca\", e la presenza di un fantasma che vive all'interno della rete.",
  "Lastly, what is important to consider now is that Ethereum is effectively putting an end to homogeneity, to the idea of getting a hundred identical blockchains working with the same virtual machine, where smart contracts written in Solidity can reside. Instead, various projects are proposing their own architectures or the same virtual machine taken beyond the main blockchain's limits. Alternatively, they are trying to build their more specific application, which, at the level of the Beacon Chain's main chain, is a smart contract written in Solidity. This is the current representation of Ethereum, which did not become Ethereum 2.0. It remains the same Ethereum—a project that once started with proof of work + Turing complete machine, transforming into this architecture.": "Infine, ciò che è importante considerare ora è che Ethereum sta effettivamente mettendo fine all'omogeneità, all'idea di avere cento blockchain identiche che lavorano con la stessa macchina virtuale, dove i contratti intelligenti scritti in Solidity possono risiedere. Invece, vari progetti stanno proponendo le proprie architetture o la stessa macchina virtuale portata oltre i limiti della blockchain principale. In alternativa, stanno cercando di costruire la propria applicazione più specifica, che, a livello della blockchain principale di Beacon Chain, è un contratto intelligente scritto in Solidity. Questa è la rappresentazione attuale di Ethereum, che non è diventato Ethereum 2.0. Rimane lo stesso Ethereum - un progetto che una volta è iniziato con la prova del lavoro + macchina completa di Turing, trasformandosi in questa architettura.",
  "Now, let's take a look at how Polkadot emerged and evolved over the last 5 years. Polkadot came into existence five years after Ethereum, born out of the team that developed one of the best clients for Ethereum—Parity. Many might remember their web client, which, compared to Geth and other implementations, was probably much more pleasant to work with, at least from personal experience and the experience of colleagues.": "Ora, diamo un'occhiata a come Polkadot è emerso ed è evoluto negli ultimi 5 anni. Polkadot è nato cinque anni dopo Ethereum, nato dal team che ha sviluppato uno dei migliori client per Ethereum - Parity. Molti potrebbero ricordare il loro client web, che, rispetto a Geth e altre implementazioni, probabilmente era molto più piacevole da usare, almeno dall'esperienza personale e dall'esperienza dei colleghi.",
  "In the end, after a couple of months of the relay chain's existence without any decentralized application functionality, without the ability to connect your parachain or L2 network, without user capabilities, the network transitioned from an authority state to proof of stake. This gave developers the ability to upload their runtimes.": "Alla fine, dopo un paio di mesi di esistenza della catena di rilancio senza alcuna funzionalità di applicazione decentralizzata, senza la possibilità di collegare la tua parachain o rete L2, senza capacità utente, la rete è passata da uno stato di autorità a prova di puntata. Questo ha dato ai programmatori la possibilità di caricare i loro tempi di esecuzione.",
  "At this point, it's also interesting to discuss the differences between today's Ethereum and how the central part of Polkadot is structured. From the perspective of the heart, which we've already discussed, the picture will be absolutely the same not only for Ethereum and Polkadot but for any project that wants to be presented as an abstract computing machine. However, from an engineering and architectural standpoint, it's fascinating to observe Beacon Chain & Relay Chain. Here, we have a virtual machine, which has been inherited since 2015, but alternatives are being proposed. In the relay chain, there's the ability to upload your runtime. The runtime is, in fact, your virtual machine. For example, some parachains completely emulate the Ethereum Virtual Machine. It's written as a runtime, meaning you can essentially upload an Ethereum Virtual Machine analog to the parachain level in Polkadot or write more specific logic that works with four or five functions. Recall part one about the ideas— you can write your Swiss Army knife, but it won't require creating the entire infrastructure. You can implement specific functionality with certain functions at the runtime level, put it into the Polkadot relay chain, and the immutability of this runtime will be ensured by Polkadot validators.": "A questo punto, è interessante discutere anche delle differenze tra l'Ethereum di oggi e come è strutturata la parte centrale di Polkadot. Dal punto di vista del cuore, di cui abbiamo già parlato, l'immagine sarà assolutamente la stessa non solo per Ethereum e Polkadot ma per qualsiasi progetto che voglia essere presentato come una macchina di calcolo astratta. Tuttavia, dal punto di vista ingegneristico e architettonico, è affascinante osservare Beacon Chain & Relay Chain. Qui abbiamo una macchina virtuale, ereditata dal 2015, ma vengono proposte alternative. Nella catena di rilancio, c'è la possibilità di caricare il tuo tempo di esecuzione. Il tempo di esecuzione è, infatti, la tua macchina virtuale. Ad esempio, alcune parachains emulano completamente la Ethereum Virtual Machine. Viene scritto come un tempo di esecuzione, il che significa che è possibile caricare un analogo della Ethereum Virtual Machine al livello della parachain in Polkadot o scrivere logiche più specifiche che funzionano con quattro o cinque funzioni. Ricorda la parte uno sulle idee - puoi scrivere il tuo coltellino svizzero, ma non sarà necessario creare l'intera infrastruttura. Puoi implementare funzionalità specifiche con determinate funzioni a livello di tempo di esecuzione, metterle nella catena di rilancio di Polkadot e l'immutabilità di questo tempo di esecuzione sarà garantita dai validatori di Polkadot.",
  "What happens next? Over the course of about a year, a layer of parachains begins to form around the relay chain. In terms of Ethereum implementation, you could say that L2 networks are quite similar to parachains. However, there's one interesting cross-network distinction that I find fascinating in Polkadot, and I'm trying to further understand how it will develop—namely, the second layer of validation and data availability checks. After a couple of years, Polkadot takes a shape like this. It's not just a relay chain where proof-of-stake validators protect the runtime of future parachains; an additional and crucial layer of data validation and availability checking emerges from parachains.": "Cosa succede dopo? Nel giro di circa un anno, inizia a formarsi intorno alla catena di rilancio uno strato di parachains. In termini di implementazione di Ethereum, si potrebbe dire che le reti L2 sono piuttosto simili alle parachains. Tuttavia, c'è una interessante distinzione tra reti incrociate che trovo affascinante in Polkadot, e sto cercando di capire meglio come si svilupperà, ovvero il secondo strato di convalida e controlli di disponibilità dei dati. Dopo un paio di anni, Polkadot assume una forma del genere. Non è solo una catena di rilancio in cui i validatori del proof-of-stake proteggono l'esecuzione futura delle parachains; emerge un ulteriore e cruciale strato di convalida dei dati e di controllo della disponibilità dei dati dalle parachains.",
  "As you look at this diagram, try to notice the analogies that arise and the differences in engineering implementation details. So, what does this represent, and how does this scheme compare with Ethereum? We have an L2 project, in this case, with Polkadot, it's a parachain. A parachain also generates information blocks, which then go to the relay chain to be combined and release a relay chain block as the sum of all headers, headers, and more headers. The parachain collects transactions in a block using collators, which are not involved in validation. They don't stake anything in the relay chain; they only use the runtime, which is in the relay chain. They fetch it, apply it to transactions, perform necessary state transitions, form a block, and, crucially, provide proof of validity—a stamp containing cryptographic proofs that the collator correctly assembled the block. This information goes to the external validation ring of the relay chain. In this ring, there are internal validators of Polkadot—parachain collators. Again, they don't stake anything directly from the relay chain's point of view. Parachain implementations sometimes introduce their consensus among collators, and some don't. For example, in Robonomics, implementing a parachain, we find this paradigm more interesting, less burdensome, and it makes the network simpler while still remaining functionally substantial. Any collator, without reaching consensus with anyone—verified by us—can propose a block and some proof to the external layer. This is precisely why blocks are proposed, proofs of block assembly validity are offered, and there's an external ring. We don't need any consensus from parachain validators. Anyone can generate a block and send it, and if this node of the collator sends incorrect information to the parachain validators on the external ring, the validator at this level will reject it. It won't pass into the central part. But let's say the block was provided correctly by the collator. Our transactions got in; the collator calculated them, applying the runtime stored in the relay chain, executed all state transitions, gathered some proof of validity—validity of the assembled block—and passed it to the external ring of the relay chain. Here, every epoch, which is also part of the finalization, every epoch has validators from the relay chain diverging into parachains. Some of them stay in the center, and the others go to parachains. Their number ranges from 16 to 64 validators, and this figure, I believe, will change in the specification—somewhere more, somewhere less. However, parachain validators re-verify the information from one selected group of validators about everything coming from the collator being correct, that work has been done in accordance with the runtime, and that the proof of validity is indeed valid. The selected segment of relay chain validators who already have something staked respond, or rather, chirp among themselves. They respond to the chosen main block producer of the parachain, so to speak, saying,": "Mentre guardi questo diagramma, cerca di notare le analogie che emergono e le differenze nei dettagli di implementazione ingegneristica. Quindi, cosa rappresenta questo, e come si confronta questo schema con Ethereum? Abbiamo un progetto L2, in questo caso, con Polkadot, è una parachain. Una parachain genera anche blocchi di informazioni, che poi vanno alla catena di rilancio per essere combinati e rilasciare un blocco di catena di rilancio come somma di tutti gli header, header e altri header. La parachain raccoglie le transazioni in un blocco utilizzando i collatori, che non sono coinvolti nella convalida. Non scommettono nulla nella catena di rilancio; utilizzano solo l'esecuzione, che è nella catena di rilancio. Lo recuperano, lo applicano alle transazioni, eseguono le transizioni di stato necessarie, formano un blocco e, soprattutto, forniscono una prova di validità - un timbro contenente prove crittografiche che il collatore ha correttamente assemblato il blocco. Queste informazioni vanno all'anello di convalida esterno della catena di rilancio. In questo anello, ci sono i validatori interni di Polkadot - i collatori delle parachain. Di nuovo, non scommettono nulla direttamente dal punto di vista della catena di rilancio. Le implementazioni delle parachain a volte introducono il loro consenso tra i collatori, e alcune no. Ad esempio, in Robonomics, implementando una parachain, troviamo questo paradigma più interessante, meno gravoso, e rende la rete più semplice pur rimanendo sostanzialmente funzionale. Qualsiasi collatore, senza raggiungere un consenso con nessuno - verificato da noi - può proporre un blocco e alcune prove all'anello esterno. Ecco perché vengono proposti blocchi, vengono offerte prove di validità dell'assemblaggio del blocco, e c'è un anello esterno. Non abbiamo bisogno di alcun consenso dai validatori delle parachain. Chiunque può generare un blocco e inviarlo, e se questo nodo del collatore invia informazioni errate ai validatori delle parachain sull'anello esterno, il validatore a questo livello lo rifiuterà. Non passerà nella parte centrale. Ma diciamo che il blocco è stato fornito correttamente dal collatore. Le nostre transazioni sono entrate; il collatore le ha calcolate, applicando l'esecuzione memorizzata nella catena di rilancio, ha eseguito tutte le transizioni di stato, ha raccolto alcune prove di validità - validità del blocco assemblato - e le ha passate all'anello esterno della catena di rilancio. Qui, ogni epoca, che fa parte anche della finalizzazione, ogni epoca ha validatori della catena di rilancio che si diramano nelle parachains. Alcuni di loro rimangono al centro, e gli altri vanno alle parachains. Il loro numero varia da 16 a 64 validatori, e questa cifra, credo, cambierà nelle specifiche - da qualche parte di più, da qualche parte di meno. Tuttavia, i validatori delle parachain riconvalidano le informazioni da un gruppo selezionato di validatori su tutto ciò che proviene dal collatore è corretto, che il lavoro è stato svolto in conformità con l'esecuzione, e che la prova di validità è effettivamente valida. Il segmento selezionato di validatori della catena di rilancio che hanno già qualcosa scommesso rispondono, o meglio, cinguettano tra loro. Rispondono al produttore principale del blocco della parachain scelto, per così dire, dicendo,",
  "\"Yes, we agree. There are no problems. You can carry it through the entire external ring inside.\"": "\"Sì, siamo d'accordo. Non ci sono problemi. Puoi portarlo attraverso tutto l'anello esterno all'interno.\"",
  "And thus, almost all information formed on the parachain collators, with verification on the external ring, enters the internal one. The lower part, not that it's physically at the bottom, still constitutes the external ring—data availability. Data starts to be checked at this stage, meaning that on the external ring, not only the correctness of block assembly is verified, but the process of preparing for distribution within the Polkadot network begins, ensuring that the block information will not be lost in the future. Here, precisely, is what I mentioned in the second part about chunks, like CD RW. At this stage of block preparation for transfer to the internal ring, the data availability layer is formed as a service, something that is currently also attempted by some projects in Ethereum. Some projects put additional redundant information directly into smart contracts, necessary for checking what is happening on the L2 layer and, if necessary, slashing or punishing those who did it incorrectly. It's impossible to overcome the external ring without distributing block information and without rechecking dozens of nodes with stakes laid down on the assumption that the runtime must work correctly.": "E così, quasi tutte le informazioni formate sui collatori delle parachain, con verifica sull'anello esterno, entrano in quello interno. La parte inferiore, non che sia fisicamente in basso, costituisce comunque l'anello esterno - disponibilità dei dati. I dati iniziano ad essere controllati in questa fase, il che significa che sull'anello esterno non solo viene verificata la correttezza dell'assemblaggio dei blocchi, ma inizia anche il processo di preparazione per la distribuzione all'interno della rete Polkadot, garantendo che le informazioni dei blocchi non vengano perse in futuro. Qui, esattamente, è ciò di cui ho parlato nella seconda parte riguardo ai chunk, come CD RW. In questa fase di preparazione del blocco per il trasferimento all'anello interno, lo strato di disponibilità dei dati viene formato come un servizio, qualcosa che attualmente viene tentato anche da alcuni progetti su Ethereum. Alcuni progetti inseriscono informazioni ridondanti aggiuntive direttamente nei contratti intelligenti, necessarie per controllare ciò che sta accadendo sul livello L2 e, se necessario, per penalizzare coloro che lo hanno fatto in modo errato. È impossibile superare l'anello esterno senza distribuire le informazioni dei blocchi e senza ricontrollare decine di nodi con stake basato sull'assunzione che il runtime debba funzionare correttamente.",
  "Thus, information that has passed through the external ring is already quite trustworthy, probably yes, you can say that, and on the internal ring, work is mainly done not with parachain blocks, but their block headers are collected into one big header. That is, from many headers, one header of a relay chain block is assembled—a mechanism of linking in Shared Security, as mentioned in Polkadot, which ensures the security of parachains. One could say that parachains are validated and reach a state where the service exists in a distributed decentralized form on the external ring. In the internal ring, the information that has entered attempts to come together in one hyperblock, which should precisely link everything together. There are no calculations happening there; there is no recalculation of absolutely everything. The assembly of the final block takes place, so to speak, in the current iteration of the world computer, to put a point on the question of whether the transaction has passed in a particular parachain. We must assemble a hyperblock that contains not all the information from the parachains but gathers all the headers verified on the external ring of parachains into one large block. And thus, our world computer in Polkadot operates.": "Quindi, le informazioni che hanno superato l'anello esterno sono già piuttosto affidabili, probabilmente sì, si può dire, e sull'anello interno, il lavoro viene principalmente fatto non con i blocchi delle parachain, ma i loro header dei blocchi vengono raccolti in un unico grande header. Cioè, da molti header, viene assemblato un header di un blocco della catena di rilascio - un meccanismo di collegamento in Shared Security, come menzionato in Polkadot, che garantisce la sicurezza delle parachain. Si potrebbe dire che le parachain vengono convalidate e raggiungono uno stato in cui il servizio esiste in forma distribuita decentralizzata sull'anello esterno. Nell'anello interno, le informazioni che sono entrate cercano di unirsi in un unico iperblocco, che dovrebbe collegare tutto insieme in modo preciso. Non ci sono calcoli che avvengono lì; non c'è il ricalcolo di assolutamente tutto. L'assemblaggio del blocco finale avviene, per così dire, nell'iterazione attuale del computer mondiale, per mettere un punto sulla questione se la transazione è passata in una particolare parachain. Dobbiamo assemblare un iperblocco che contiene non tutte le informazioni delle parachain ma raccoglie tutti gli header verificati sull'anello esterno delle parachain in un unico grande blocco. E così, il nostro computer mondiale in Polkadot opera.",
  "Let's take another look at these two schemes together: relay chain, beacon chain, runtime, secured by proof of stake, where someone stakes their funds to validate that they will always perform their work correctly. There's a virtual machine where you can also stake your funds, and if you perform any computation or state transition not in accordance with the Ethereum Virtual Machine's specification, you'll be penalized.": "Diamo un'altra occhiata insieme a questi due schemi: catena di rilancio, catena di beacon, runtime, garantito da proof of stake, dove qualcuno mette in gioco i propri fondi per convalidare che eseguiranno sempre correttamente il loro lavoro. C'è una macchina virtuale dove puoi anche mettere in gioco i tuoi fondi e, se esegui qualsiasi calcolo o transizione di stato non in conformità con la specifica della Macchina Virtuale Ethereum, sarai penalizzato.",
  "In Polkadot, there's an additional external layer, which seems to be one of the main advantages, such pleasant perks of the engineering implementation that, in my opinion, should be present here. It should appear between L2 networks and the beacon chain, which exists in Ethereum. By the way, some say that the term \"beacon chain\" is dying out again and is misunderstood, but I really like to use it in analogy with the \"relay chain,\" a term from Ethereum's roadmap.": "In Polkadot, c'è uno strato esterno aggiuntivo, che sembra essere uno dei principali vantaggi, piacevoli vantaggi dell'implementazione ingegneristica che, a mio parere, dovrebbero essere presenti qui. Dovrebbe apparire tra le reti L2 e la catena di beacon, che esiste in Ethereum. A proposito, alcuni dicono che il termine \"catena di beacon\" sta di nuovo scomparendo ed è frainteso, ma mi piace davvero usarlo in analogia con la \"catena di rilancio\", un termine dalla roadmap di Ethereum.",
  "And perhaps one more interesting story in this part of the lecture: so far, we can hardly imagine proper cross-chain messages between L2 networks in Ethereum. Maybe I missed something in the papers, but when you don't have an external ring and issues like collators, paravalidators, and data availability services are not resolved, thinking about how two L2 layers can communicate is challenging. Yet, in Polkadot, it exists. Even horizontally, through the relay chain, meaning directly, one can send a transaction securely from one parachain to another, without trusting any bridges between these two parachains. This is another crucial functionality that will likely need to be implemented at the level of connecting L2 networks. Smart contracts in Ethereum communicate well. We have created many chains of linked smart contracts, where one triggers another. With this, there is no problem. But when we say that almost all applications are moving to the L2 layer in a heterogeneous network, I hear that if you live in a specific area, you won't be able to get out. That's not the case at the level of parachains and implementation in Polkadot. Both architectures are worth watching, as, in my opinion, the engineering implementation follows the mainstream path of becoming a global computer. They differ slightly, but there are many similarities. There's an enormous amount of engineering work everywhere. As we see, human civilization, in the form of a multitude of researchers, engineers, and growing developers with significant resources for further development, is moving roughly in the same direction from the smallest early stage to probably some future establishment of the world's computer, all on the same tracks.": "E forse un'altra storia interessante in questa parte della lezione: finora, possiamo a malapena immaginare messaggi cross-chain adeguati tra reti L2 in Ethereum. Forse ho perso qualcosa nei documenti, ma quando non si ha un anello esterno e problemi come i collatori, i paravalidatori e i servizi di disponibilità dei dati non sono risolti, pensare a come due livelli L2 possano comunicare è una sfida. Eppure, in Polkadot, esiste. Anche orizzontalmente, attraverso la catena di rilancio, il che significa direttamente, si può inviare una transazione in modo sicuro da una parachain a un'altra, senza fidarsi di nessun ponte tra queste due parachain. Questa è un'altra funzionalità cruciale che probabilmente dovrà essere implementata a livello di connessione delle reti L2. I contratti intelligenti in Ethereum comunicano bene. Abbiamo creato molte catene di contratti intelligenti collegati, dove uno attiva l'altro. Con questo, non c'è problema. Ma quando diciamo che quasi tutte le applicazioni si stanno spostando al livello L2 in una rete eterogenea, sento dire che se vivi in una zona specifica, non potrai uscire. Questo non è il caso a livello di parachains e implementazione in Polkadot. Entrambe le architetture meritano attenzione, poiché, secondo me, l'implementazione ingegneristica segue il percorso principale di diventare un computer globale. Differiscono leggermente, ma ci sono molte somiglianze. C'è un'enorme quantità di lavoro ingegneristico ovunque. Come vediamo, la civiltà umana, sotto forma di una moltitudine di ricercatori, ingegneri e sviluppatori in crescita con risorse significative per ulteriori sviluppi, si sta muovendo approssimativamente nella stessa direzione dalla più piccola fase iniziale probabilmente fino a qualche futuro stabilimento del computer mondiale, tutti sulle stesse tracce.",
  "Part 1: The Idea of a World Computer": "Parte 1: L'idea di un computer mondiale",
  "This is the first part of a four-part lecture titled \"World Computer in Your Home.\" In the first part, titled \"The Idea of a World Computer,\" I want to analyze and share my own reflections that have, in a broader historical context, gathered around the hashtag \"world computer.\"": "Questa è la prima parte di una conferenza in quattro parti intitolata \"Computer mondiale a casa tua.\" Nella prima parte, intitolata \"L'idea di un computer mondiale,\" voglio analizzare e condividere le mie riflessioni che, in un contesto storico più ampio, si sono raccolte intorno all'hashtag \"computer mondiale.\"",
  "To begin with, let's try to gather a generalized understanding of what a world computer is, without delving into terminology or specific technical details. If you take your mobile phone in hand and look at the icons, you can notice that practically every application on the phone has two major segments or areas of operation.": "Per cominciare, cerchiamo di ottenere una comprensione generalizzata di cosa sia un computer mondiale, senza addentrarci in terminologia o dettagli tecnici specifici. Se prendi il tuo telefono cellulare in mano e guardi le icone, puoi notare che praticamente ogni applicazione sul telefono ha due segmenti principali o aree di funzionamento.",
  "The first is the local part, meaning, for example, your calculator or notes application. This is a completely local application that requires almost no external communication. Although even applications like the notes app on an iPhone are a bit more than that, let's focus on the more austere Open Source side of applications for Android phones, so to speak.": "Il primo è la parte locale, che significa, ad esempio, la tua calcolatrice o l'applicazione delle note. Si tratta di un'applicazione completamente locale che richiede quasi nessuna comunicazione esterna. Anche se anche applicazioni come l'app delle note su un iPhone sono un po' di più di questo, concentriamoci sul lato più austero Open Source delle applicazioni per telefoni Android, per così dire.",
  "The second part requires cloud infrastructure, and here, when the question of cloud infrastructure arises, a multitude of quite complex stories begins: who owns this cloud infrastructure, what capabilities do developers have to add features to an application, and in general, how does the user own this application? What capabilities and responsibilities does the user have when dealing with an application that exists not only on their phone but also in some infrastructure beyond their pocket or palm? The world computer is precisely one example of how the developer community responds to these obvious questions. Obvious questions about creating higher-quality applications for your mobile phone, laptop, server, and any other smart device that needs to connect to the network and obtain knowledge from there.": "La seconda parte richiede un'infrastruttura cloud e qui, quando sorge la questione dell'infrastruttura cloud, inizia una moltitudine di storie piuttosto complesse: chi possiede questa infrastruttura cloud, quali capacità hanno gli sviluppatori di aggiungere funzionalità a un'applicazione e in generale, come possiede l'utente questa applicazione? Quali capacità e responsabilità ha l'utente quando si tratta di un'applicazione che esiste non solo sul suo telefono ma anche in un'infrastruttura al di là della sua tasca o palmo? Il computer mondiale è proprio un esempio di come la comunità degli sviluppatori risponda a queste domande ovvie. Domande ovvie sulla creazione di applicazioni di alta qualità per il tuo telefono cellulare, laptop, server e qualsiasi altro dispositivo intelligente che deve connettersi alla rete e ottenere conoscenza da lì.",
  "The world computer is, accordingly, the same cloud, the same infrastructure that exists on the internet, with which developers can interact and publish their applications. As a user, you can install, download, and run them on your PC. However, with one interesting, crucial feature: no one actually owns the infrastructure or cloud of the world computer. There is no specific company, jurisdiction, or individual on Earth who can determine and say whether you can publish your application there or not, whether you have the right to access this world computer infrastructure to receive the provided service. Therefore, the world computer is a cloud in which any developer can place their application, and any user with access solely to the internet network and not to a specific IP address behind a firewall can use the application by paying for computations from their pocket.": "Il computer mondiale è, di conseguenza, lo stesso cloud, la stessa infrastruttura che esiste su internet, con la quale gli sviluppatori possono interagire e pubblicare le proprie applicazioni. Come utente, puoi installarle, scaricarle ed eseguirle sul tuo PC. Tuttavia, con una caratteristica interessante e cruciale: nessuno possiede effettivamente l'infrastruttura o il cloud del computer mondiale. Non c'è una specifica azienda, giurisdizione o individuo sulla Terra che possa determinare e dire se puoi pubblicare la tua applicazione lì o meno, se hai il diritto di accedere a questa infrastruttura del computer mondiale per ricevere il servizio fornito. Pertanto, il computer mondiale è un cloud in cui qualsiasi sviluppatore può inserire la propria applicazione, e qualsiasi utente con accesso esclusivamente alla rete internet e non a un indirizzo IP specifico dietro un firewall può utilizzare l'applicazione pagando per i calcoli dal proprio portafoglio.",
  "Here's the story in a generalized format. There is no mention of \"blockchain,\" no mention of \"smart contracts,\" but these concepts are underneath. Let's still acknowledge: a world computer is a cloud infrastructure that is sovereign, owned by no one, allowing each developer to avoid censorship from platform owners offering app downloads. It also prevents users from being in a situation where they don't understand how an app works on their phone. In my opinion, these are important and cool features deserving respect and attention from those who want to create more futuristic, cooler applications. This is precisely what my team and I have been doing for eight years, choosing perhaps the most challenging area - creating services for robotics on the world computer, which seems to be right outside your door, quietly scraping and saying, \"I want to come into your home.\"": "Ecco la storia in un formato generalizzato. Non c'è menzione di \"blockchain,\" né di \"smart contracts,\" ma questi concetti sono sottostanti. Riconosciamo comunque: un computer mondiale è un'infrastruttura cloud sovrana, di nessuno, che consente a ciascun sviluppatore di evitare la censura da parte dei proprietari delle piattaforme che offrono il download delle app. Impedisce anche agli utenti di trovarsi in una situazione in cui non capiscono come funziona un'app sul proprio telefono. A mio parere, queste sono caratteristiche importanti e interessanti che meritano rispetto e attenzione da parte di coloro che vogliono creare applicazioni più futuristiche e interessanti. Questo è esattamente ciò che il mio team ed io facciamo da otto anni, scegliendo forse l'area più impegnativa - creare servizi per la robotica sul computer mondiale, che sembra essere proprio fuori dalla tua porta, raschiando silenziosamente e dicendo: \"Voglio entrare nella tua casa.\"",
  "Now, let's move on to a timeline and look through my personal experience at how the concept of the world computer evolved. First, let's go back to 2012. This year is notable because Bitcoin already exists as a global internet service, accessible to everyone, not owned by anyone specific. By 2012, besides Bitcoin, its so-called forks start appearing. One of the most well-known is Litecoin.": "Ora, passiamo a una timeline e esaminiamo la mia esperienza personale su come il concetto di computer mondiale si è evoluto. Prima, torniamo al 2012. Questo anno è notevole perché Bitcoin esiste già come servizio internet globale, accessibile a tutti, non di proprietà di nessuno in particolare. Entro il 2012, oltre a Bitcoin, iniziano a comparire i cosiddetti fork. Uno dei più conosciuti è Litecoin.",
  "Litecoin is notable because its developer did the most important work for the entire community. He collected the most crucial configurable variables or constants from different parts of Bitcoin's code after the protocol was launched. This allowed specifying block generation time, block reward, and, statistically, Litecoin is more frequently forked than Bitcoin. When we say \"fork of Bitcoin,\" I can confidently say that, in most cases, it will be a fork of Litecoin.": "Litecoin è notevole perché il suo sviluppatore ha svolto il lavoro più importante per l'intera comunità. Ha raccolto le variabili o costanti configurabili più cruciali da diverse parti del codice di Bitcoin dopo il lancio del protocollo. Questo ha permesso di specificare il tempo di generazione del blocco, il premio del blocco e, statisticamente, Litecoin viene forkato più frequentemente di Bitcoin. Quando diciamo \"fork di Bitcoin,\" posso affermare con sicurezza che, nella maggior parte dei casi, sarà un fork di Litecoin.",
  "Namecoin is also a fork of Bitcoin, and if memory serves me right, it was initially a direct fork from Bitcoin, and then Litecoin appeared a few months later in 2011. However, Namecoin turned out to be a bit different, paving the way for many developers mentally on where ideas underlying Bitcoin's internet service could evolve. Namecoin went beyond being just a coin; it could store identity as a database and allow an internet service to place your domain name. This was the first example where an internet service spawned from Bitcoin could have a different nature, not just like Litecoin with fast transactions but the ability to pay for storing certain information with its internal currency, an internal token. For example, the name in the .bit domain zone.": "Namecoin è anche un fork di Bitcoin e se la memoria non mi inganna, inizialmente era un fork diretto da Bitcoin, e poi Litecoin è apparso qualche mese dopo nel 2011. Tuttavia, Namecoin si è rivelato un po' diverso, aprendo la strada per molti sviluppatori mentalmente su dove potessero evolvere le idee sottostanti il servizio internet di Bitcoin. Namecoin è andato oltre ad essere solo una moneta; poteva memorizzare l'identità come un database e consentire a un servizio internet di posizionare il tuo nome di dominio. Questo è stato il primo esempio in cui un servizio internet derivato da Bitcoin poteva avere una natura diversa, non solo come Litecoin con transazioni veloci ma anche la capacità di pagare per memorizzare determinate informazioni con la propria valuta interna, un token interno. Ad esempio, il nome nella zona di dominio .bit.",
  "Developers worldwide were experimenting with Bitcoin, mostly creating forks, making them faster, cheaper electronic cash. Alongside this, the first services appeared, seeing opportunities not only in financial applications but also in cross-industrial applications in other areas like Namecoin. Namecoin provided the first globally accessible and unowned internet service through which you could launch your website without being under the jurisdiction of a specific organization but within a distributed globally accessible network. This moment is crucial for us to move on to the early precursors of the world computer's ideas.": "Gli sviluppatori di tutto il mondo stavano sperimentando con Bitcoin, principalmente creando fork, rendendoli più veloci, più economici elettronici. Insieme a questo, sono apparsi i primi servizi, vedendo opportunità non solo nelle applicazioni finanziarie ma anche nelle applicazioni interindustriali in altre aree come Namecoin. Namecoin ha fornito il primo servizio internet globalmente accessibile e non posseduto attraverso il quale potevi lanciare il tuo sito web senza essere sotto la giurisdizione di un'organizzazione specifica ma all'interno di una rete globale accessibile distribuita. Questo momento è cruciale per passare ai precursori precoci delle idee del computer mondiale.",
  "The first practical ideas of the world computer emerged in 2014, two years after the appearance of the first wave of Bitcoin forks and the creation of meaningful services dedicated not only to electronic cash but also exploring broader themes. We encounter ideas that precede the launch of Ethereum.": "Le prime idee pratiche del computer mondiale sono emerse nel 2014, due anni dopo l'apparizione della prima ondata di fork di Bitcoin e la creazione di servizi significativi dedicati non solo al denaro elettronico ma anche all'esplorazione di temi più ampi. Ci imbattiamo in idee che precedono il lancio di Ethereum.",
  "In 2014, at several meetups worldwide, in Miami and, I believe, in Europe, Vitalik Buterin articulated sensible ideas. He suggests that we can develop not just a set of internet services that essentially function as a Swiss army knife, right? We can develop a virtual machine. Those with an education in Computer Science probably remember what an infinite tape is in Turing machines, and if we go back to the theory of computational machines, we probably recall the theoretical origins of creating our personal computers, essentially the server infrastructure we have today. It's interesting that, fifty years after the development of von Neumann architecture and the complete Turing machine theory, and with the dawn of internet technologies only by 2014, and only after experiments with Bitcoin, the first idea emerges on our planet of creating a fully virtual computational machine based on the same theory that has been tested in the computer science industry for the past 50 years. The mechanics are the same as when creating any personal computer or server in a data center, but based more on achievements in internet technologies and the achievements of the world that will later be called Web3.": "Nel 2014, in diversi meetup in tutto il mondo, a Miami e, credo, in Europa, Vitalik Buterin ha articolato idee sensate. Suggerisce che possiamo sviluppare non solo un insieme di servizi internet che funzionano essenzialmente come un coltellino svizzero, giusto? Possiamo sviluppare una macchina virtuale. Coloro con una formazione in Informatica probabilmente ricordano cosa sia un nastro infinito nelle macchine di Turing, e se torniamo alla teoria delle macchine computazionali, probabilmente ricordiamo le origini teoriche della creazione dei nostri personal computer, essenzialmente l'infrastruttura server che abbiamo oggi. È interessante che, cinquant'anni dopo lo sviluppo dell'architettura di von Neumann e della teoria completa della macchina di Turing, e con l'alba delle tecnologie internet solo nel 2014, e solo dopo esperimenti con Bitcoin, la prima idea emerge sul nostro pianeta di creare una macchina computazionale completamente virtuale basata sulla stessa teoria che è stata testata nell'industria informatica negli ultimi 50 anni. La meccanica è la stessa della creazione di qualsiasi computer personale o server in un data center, ma basata più sugli achievement nelle tecnologie internet e sugli achievement del mondo che verrà successivamente chiamato Web3.",
  "Ethereum itself is not a Swiss army knife, not a set of specific internet services. It is, in the direct sense, a cloud, a computational machine. What lies at its core, I will tell you in the next lecture. Here, the most important thing for us is to focus on where the idea of Ethereum began. It started with the realization that, in two years, dozens of different internet services were invented that were interesting because they were globally accessible, available without censorship for developers to deploy. Users could use them only with an internal currency. However, what was not liked in all these concepts was that almost every interesting service required its own massive distributed infrastructure. Unlike familiar internet services, you couldn't just launch your globally accessible infrastructure if you were a very small person or a small team because such a network would be vulnerable, and the service itself would become unsafe. To overcome the problems that were side effects or negative externalities of creating your own globally accessible sovereign internet service, the concept of Ethereum emerged. Ethereum, as a full-fledged cloud capable of handling any formalized computation, allows you to write your program code, a complete program essentially, and run it in the same blockchain alongside hundreds of other applications. This possibility, sounding from the small stages of 2014, naturally captivated the minds of many and seemed absolutely logical for someone with a basic education in Computer Science. If you could understand what Turing completeness was by 2014, if you could envision the historical theory of creating a personal computer, you would definitely not overlook the Ethereum whitepaper and would say that this is exactly what the entire developer community needs.": "Ethereum stesso non è un coltellino svizzero, né un insieme di servizi internet specifici. È, nel senso diretto, un cloud, una macchina computazionale. Ciò che si trova al suo nucleo, ve lo dirò nella prossima lezione. Qui, la cosa più importante per noi è concentrarci su dove è iniziata l'idea di Ethereum. È iniziata con la realizzazione che, in due anni, sono stati inventati dozzine di diversi servizi internet interessanti perché erano globalmente accessibili, disponibili senza censura per gli sviluppatori da implementare. Gli utenti potevano utilizzarli solo con una valuta interna. Tuttavia, ciò che non piaceva in tutti questi concetti era che quasi ogni servizio interessante richiedeva la propria massiccia infrastruttura distribuita. A differenza dei familiari servizi internet, non potevi semplicemente lanciare la tua infrastruttura globalmente accessibile se eri una persona molto piccola o un piccolo team perché una tale rete sarebbe stata vulnerabile e il servizio stesso sarebbe diventato insicuro. Per superare i problemi che erano effetti collaterali o esternalità negative della creazione del proprio servizio internet sovrano globalmente accessibile, è emerso il concetto di Ethereum. Ethereum, come un cloud completo in grado di gestire qualsiasi computazione formalizzata, ti consente di scrivere il tuo codice di programma, un programma completo essenzialmente, e di eseguirlo nella stessa blockchain insieme a centinaia di altre applicazioni. Questa possibilità, che risuonava dalle prime fasi del 2014, ha naturalmente affascinato le menti di molti e sembrava assolutamente logica per chiunque con una formazione di base in Informatica. Se potevi capire cos'era la completezza di Turing entro il 2014, se potevi immaginare la teoria storica della creazione di un computer personale, sicuramente non avresti trascurato il whitepaper di Ethereum e avresti detto che questo è esattamente ciò di cui ha bisogno l'intera comunità degli sviluppatori.",
  "I believe the year 2014 and Ethereum mark the first, though not explicitly named, instances of the concept of a global computer. It started with the idea that we don't need a Swiss knife; instead, we need infrastructure or a universal cloud that addresses global-level security challenges. Developers, at a low cost, should be able to deploy their applications there without concerning themselves with issues like securing the network or creating a network of providers for this computer or your specific internet service.": "Credo che l'anno 2014 e Ethereum segnino i primi, sebbene non esplicitamente nominati, casi del concetto di un computer globale. È iniziato con l'idea che non abbiamo bisogno di un coltellino svizzero; invece, abbiamo bisogno di un'infrastruttura o di un cloud universale che affronti le sfide di sicurezza a livello globale. Gli sviluppatori, a basso costo, dovrebbero essere in grado di implementare le proprie applicazioni lì senza preoccuparsi di questioni come la sicurezza della rete o la creazione di una rete di fornitori per questo computer o il proprio servizio internet specifico.",
  "In 2015, Ethereum was effectively launched. From that moment onwards, even until 2020, I haven't encountered significant counterarguments against the idea of creating not just specific internet services but embracing and developing the concept of a virtual computer, virtual server, cloud, or a global computer, as I prefer to call it.": "Nel 2015, Ethereum è stato effettivamente lanciato. Da quel momento in poi, anche fino al 2020, non ho incontrato significativi controargomenti contro l'idea di creare non solo servizi internet specifici ma abbracciare e sviluppare il concetto di un computer virtuale, un server virtuale, un cloud o un computer globale, come preferisco chiamarlo.",
  "Various variations emerge, perhaps some remember the then-popular EOS suggesting a slightly different consumption paradigm. Despite my personal aversion to that project, with its 21st validator and all, it seemed sufficient for many. But it introduced the idea that owning tokens grants you a portion of bandwidth, which, in the realm of Robonomics architecture, remains interesting to me to this day.": "Emergono varie variazioni, forse alcuni ricorderanno il allora popolare EOS che suggeriva un paradigma di consumo leggermente diverso. Nonostante la mia personale avversione per quel progetto, con i suoi 21 validatori e tutto il resto, sembrava sufficiente per molti. Ma ha introdotto l'idea che possedere token ti garantisce una parte della larghezza di banda, che, nel contesto dell'architettura di Robonomics, rimane interessante per me ancora oggi.",
  "Simultaneously, other ideas on how to modernize the Ethereum network arise. Projects like Definity, Solana, and others come into play. Around the same time, Gavin Wood introduces Polkadot, who assisted Vitalik in creating Ethereum. From a multitude of technological projects between 2015 and 2020, we move from a race to create individual internet service variants to witnessing, on a communication protocol level, the emergence of something like Ethereum killers. Many projects started under this slogan, taking the idea of a unified cloud for multiple internet services and modifying some aspects. For instance, EOS proposed an alternative utilization scheme, where only token-backed ownership allowed access to bandwidth. There were projects where the programming language for writing code was more interesting. For example, during a hackathon for BMW, when we won with an implementation on Ethereum, the automaker immediately stated that we wouldn't go any further unless we had formally verified contracts, which was impossible to achieve on Ethereum at that time.": "Simultaneamente, altre idee su come modernizzare la rete Ethereum sorgono. Progetti come Definity, Solana e altri entrano in gioco. Allo stesso tempo, Gavin Wood introduce Polkadot, che ha aiutato Vitalik a creare Ethereum. Da una moltitudine di progetti tecnologici tra il 2015 e il 2020, passiamo da una corsa per creare varianti di servizi internet individuali a assistere, a livello di protocollo di comunicazione, all'emergere di qualcosa come gli Ethereum killers. Molti progetti sono partiti con questo slogan, prendendo l'idea di un cloud unificato per servizi internet multipli e modificando alcuni aspetti. Ad esempio, EOS ha proposto uno schema di utilizzo alternativo, in cui solo il possesso supportato da token consentiva l'accesso alla larghezza di banda. C'erano progetti in cui il linguaggio di programmazione per scrivere il codice era più interessante. Ad esempio, durante un hackathon per BMW, quando abbiamo vinto con un'implementazione su Ethereum, il produttore di automobili ha immediatamente dichiarato che non saremmo andati oltre a meno che non avessimo contratti formalmente verificati, cosa impossibile da raggiungere su Ethereum in quel momento.",
  "At this moment, as you read about the ideas of Eternity and other networks, you may think, \"I should try working with them too.\" Service developers understood this, as did, as I mentioned, projects like Definity, which recently launched the World Computer and is gaining traction. Simultaneously, the idea of Polkadot emerges as a heterogeneous multi-chain framework. Ethereum, around the mid-2010s, also received a roadmap for scalability and development. By 2024, almost all concepts converge on the idea of having not just one database or blockchain but a multitude. Various transaction processing methods, two-layer consensus algorithms, optimistic majority approaches, and a plethora of technical implementation variations emerge, all aiming at the same global computer concept.": "In questo momento, mentre leggi sulle idee di Eternity e di altre reti, potresti pensare, \"Dovrei provare a lavorare anche con loro.\" Gli sviluppatori di servizi hanno capito questo, così come hanno fatto, come ho già detto, progetti come Definity, che ha recentemente lanciato il World Computer e sta guadagnando terreno. Simultaneamente, l'idea di Polkadot emerge come un framework multi-chain eterogeneo. Ethereum, intorno alla metà del 2010, ha anche ricevuto una roadmap per la scalabilità e lo sviluppo. Entro il 2024, quasi tutti i concetti convergono sull'idea di non avere solo un database o una blockchain ma una moltitudine. Vari metodi di elaborazione delle transazioni, algoritmi di consenso a due livelli, approcci ottimisti di maggioranza e una moltitudine di variazioni di implementazione tecnica emergono, tutti mirando allo stesso concetto di computer globale.",
  "Let's now go through a timeline snapshot:": "Andiamo ora attraverso uno snapshot della timeline:",
  "**2009-2012**: Emergence of the first globally accessible internet service for electronic cash - Bitcoin.": "**2009-2012**: Emergenza del primo servizio internet globalmente accessibile per il denaro elettronico - Bitcoin.",
  "**Early 2012**: The first fork war occurs, with projects emerging to replicate similar services. Some multi-billion projects create their forks. Simultaneously, projects like Namecoin propose interesting ideas.": "**Inizio 2012**: Si verifica la prima guerra delle fork, con progetti che emergono per replicare servizi simili. Alcuni progetti da miliardi di dollari creano le loro fork. Simultaneamente, progetti come Namecoin propongono idee interessanti.",
  "**2014**: The concept of a world computer emerges, requiring a deep understanding of computer science theory and immersion in Bitcoin's development.": "**2014**: Sorge il concetto di un computer mondiale, che richiede una profonda comprensione della teoria informatica e un'immersione nello sviluppo di Bitcoin.",
  "**2015-2020**: The concept moves from theory to practice. Modifications and variations of Ethereum arise, introducing different ideas with varying degrees of quality. The term \"World Computer\" became established.": "**2015-2020**: Il concetto passa dalla teoria alla pratica. Modifiche e variazioni di Ethereum sorgono, introducendo idee diverse con diversi gradi di qualità. Il termine \"World Computer\" diventa stabilito.",
  "**2024**: We reach the World Computer, a term now well-established, marking the transition from a simple calculator on your phone to a globally accessible institution. The idea of the World Computer encompasses future money, programming money, storage for identification records, and important documents.": "**2024**: Raggiungiamo il World Computer, un termine ormai ben consolidato, segnando il passaggio da una semplice calcolatrice sul tuo telefono a un'istituzione globalmente accessibile. L'idea del World Computer comprende il denaro futuro, la programmazione del denaro, lo storage per i record di identificazione e i documenti importanti.",
  "In conclusion, from a simple calculator to a globally accessible institution, the idea of the World Computer has evolved. It's seen as a place for the future of money and the storage of vital records. The concept of a World Computer has progressed from theoretical discussions to practical engineering implementations. In the next lecture, the discussion will delve into what a World Computer actually represents. It is fundamentally a state transition function, a concept to be explored further in the upcoming lecture, emphasizing its importance and the need to safeguard it.": "In conclusione, da una semplice calcolatrice a un'istituzione globalmente accessibile, l'idea del World Computer si è evoluta. Viene considerato un luogo per il futuro del denaro e lo storage di record vitali. Il concetto di un World Computer è passato dalle discussioni teoriche alle implementazioni ingegneristiche pratiche. Nella prossima lezione, la discussione approfondirà ciò che un World Computer rappresenta effettivamente. È fondamentalmente una funzione di transizione di stato, un concetto da esplorare ulteriormente nella prossima lezione, sottolineando la sua importanza e la necessità di proteggerla.",
  "Part 2: The Heart of the World Computer": "Parte 2: Il Cuore del Computer del Mondo",
  "What lies at the core of projects like Ethereum or Polkadot, or any other web3 project claiming the title of the world computer, and why does the comparison with the heart in the human body fit so well into the abstract architecture of the world computer?": "Cosa si trova al centro di progetti come Ethereum o Polkadot, o qualsiasi altro progetto web3 che rivendica il titolo di computer del mondo, e perché il confronto con il cuore nel corpo umano si adatta così bene all'architettura astratta del computer del mondo?",
  "Let's try to understand these questions in this part of the lecture, and to begin with, we'll have to break the chains of Bitcoin maximalists a bit. Most likely, you've already read one or several popular science articles dedicated to Bitcoin in your life, and the main thing that is practically noted everywhere is the three main advantages of Bitcoin as electronic cash:": "Cerchiamo di capire queste domande in questa parte della lezione, e per cominciare, dovremo rompere un po' le catene dei massimalisti di Bitcoin. Molto probabilmente, hai già letto uno o più articoli scientifici popolari dedicati a Bitcoin nella tua vita, e la cosa principale che è praticamente notata ovunque sono i tre principali vantaggi di Bitcoin come denaro elettronico:",
  "Censorship resistance": "Resistenza alla censura",
  "Immutability of data stored in the Bitcoin blockchain": "Immutabilità dei dati memorizzati nella blockchain di Bitcoin",
  "Transparency of transactions": "Trasparenza delle transazioni",
  "Let's quickly go through each of these properties, and most importantly, at the end, we'll need to step back a bit from them, as the world computer inherits them as some kind of successor to Bitcoin.": "Passiamo rapidamente attraverso ciascuna di queste proprietà, e soprattutto, alla fine, dovremo allontanarci un po' da esse, poiché il computer del mondo le eredita come una sorta di successore di Bitcoin.",
  "**Firstly**, immutability of data. Of course, this property, from the perspective of electronic cash, has significant advantages and importance. After you send a transaction or receive bitcoins, after one or two blocks, you gradually begin to feel the immutability of data in the blockchain. In the first 15 minutes, you can observe, using a blockchain explorer, how the transaction should settle. You already see it in the network, but it is not finalized, meaning these bitcoins are not yet in your account. However, after several blocks, there is confidence that these funds will not disappear from your account. As time passes, the probability of values being somehow overwritten from your account becomes almost negligible, practically reducing to zero. This is our property of data immutability. How cool it is when you can share information with the recipient, send them a link to the blockchain explorer, and you don't need to obtain any paper or document from the bank stating that you sent a payment on a certain date and time - this is the second advantage of Bitcoin that is very helpful in practice and is probably the most pleasant perk when comparing a bank transfer and a Bitcoin transfer.": "**In primo luogo**, immutabilità dei dati. Naturalmente, questa proprietà, dal punto di vista del denaro elettronico, ha significativi vantaggi e importanza. Dopo aver inviato una transazione o ricevuto bitcoin, dopo uno o due blocchi, inizi gradualmente a sentire l'immutabilità dei dati nella blockchain. Nei primi 15 minuti, puoi osservare, utilizzando un esploratore di blockchain, come dovrebbe stabilirsi la transazione. Lo vedi già nella rete, ma non è finalizzato, il che significa che questi bitcoin non sono ancora nel tuo conto. Tuttavia, dopo diversi blocchi, c'è la certezza che questi fondi non scompariranno dal tuo conto. Con il passare del tempo, la probabilità che i valori vengano in qualche modo sovrascritti dal tuo conto diventa quasi trascurabile, praticamente riducendosi a zero. Questa è la nostra proprietà di immutabilità dei dati. Quanto è bello quando puoi condividere informazioni con il destinatario, inviargli un link all'esploratore di blockchain, e non hai bisogno di ottenere alcun documento o carta dalla banca che attesti che hai inviato un pagamento in una certa data e ora - questo è il secondo vantaggio di Bitcoin che è molto utile in pratica ed è probabilmente il vantaggio più piacevole quando si confronta un bonifico bancario e un trasferimento di Bitcoin.",
  "**Secondly**, transparency of transactions. There is practically no fear when using Bitcoin that you will find yourself in a region of the world or connected to an internet provider through which you cannot perform operations with the Bitcoin network. There are practically no options other than locking you in a dark room without internet access so that you cannot use the Bitcoin network.": "**In secondo luogo**, trasparenza delle transazioni. Praticamente non c'è paura nell'usare Bitcoin che ti troverai in una regione del mondo o connesso a un provider di internet attraverso il quale non puoi effettuare operazioni con la rete Bitcoin. Praticamente non ci sono opzioni diverse dal rinchiuderti in una stanza buia senza accesso a internet in modo che non possa utilizzare la rete Bitcoin.",
  "These three properties are, of course, very important. Now, in order to understand the question \"What is at the heart of the world computer,\" we will need to step back from them, abstract ourselves, and make a small leap of faith, a jump, approximately, 100 years back to the 1930s.": "Queste tre proprietà sono, ovviamente, molto importanti. Ora, per capire la domanda \"Qual è il cuore del computer mondiale,\" dovremo allontanarci da esse, astrarci e fare un piccolo salto di fede, un salto, approssimativamente, di 100 anni indietro agli anni '30.",
  "In 1936, Alan Turing made a proposal to the scientific community to solve the formalization problem and, in fact, a more qualitative description of such a concept as an algorithm. Interestingly, from Alan Turing's proposal, the architecture and development of all computer science in the future emerged, but he in no way pursued the idea of creating a personal computer, and he knew nothing about data centers or clouds. His task was to provide a way to define an algorithm in the context of the tasks faced by mathematicians. It's a fascinating picture over the span of a century that the achievement of computer science turns out to be a by-product of a rather mundane problem among mathematicians.": "Nel 1936, Alan Turing fece una proposta alla comunità scientifica per risolvere il problema della formalizzazione e, in effetti, una descrizione più qualitativa di un concetto come un algoritmo. È interessante notare che dalla proposta di Alan Turing è emersa l'architettura e lo sviluppo di tutta la scienza informatica futura, ma in nessun modo perseguì l'idea di creare un computer personale e non sapeva nulla dei data center o dei cloud. Il suo compito era fornire un modo per definire un algoritmo nel contesto dei compiti affrontati dai matematici. È un'immagine affascinante nel corso di un secolo che il raggiungimento della scienza informatica si rivela essere un sottoprodotto di un problema piuttosto banale tra i matematici.",
  "Let's delve into what Alan Turing proposed, without delving too deeply into algorithm theory and the purpose for which he suggested it. Alan Turing proposed the Turing machine, which represents an infinite tape (we can call it memory cells to make it easier), traversed by a reading and writing head. This head, positioned over a certain cell, can read data, apply some simple operations to them, and write new values.": "Approfondiamo ciò che Alan Turing ha proposto, senza addentrarci troppo nella teoria degli algoritmi e nello scopo per cui l'ha suggerito. Alan Turing propose la macchina di Turing, che rappresenta un nastro infinito (possiamo chiamarlo celle di memoria per renderlo più semplice), attraversato da una testina di lettura e scrittura. Questa testina, posizionata su una certa cella, può leggere i dati, applicare alcune operazioni semplici ad essi e scrivere nuovi valori.",
  "Today, when you hear phrases like this, it might seem to you: \"Well, yes, it's a hard drive, a computer, or something like that.\" That's absolutely correct. This description gave rise to the first computer architecture. However, the main task of the Turing machine was to provide a means of representing a system or entity capable of performing any formalized computations. One can imagine a box or room, even filled with lamps, into which you insert your punch card, card, or transmit a Bluetooth signal, and the machine starts working, performing simple operations that ultimately solve your problem. Thus, the Turing machine is a universal computational mechanism that primarily solves the universal and essential task of providing a mechanism through which any simple computation or, more accurately, any formalized computation can be performed—computations that can be decomposed into the language of mathematics": "Oggi, quando senti frasi come questa, potrebbe sembrarti: \"Beh, sì, è un hard disk, un computer, o qualcosa del genere.\" Questo è assolutamente corretto. Questa descrizione ha dato origine alla prima architettura informatica. Tuttavia, il compito principale della macchina di Turing era fornire un mezzo per rappresentare un sistema o un'entità in grado di eseguire qualsiasi calcolo formalizzato. Si può immaginare una scatola o una stanza, anche piena di lampade, in cui inserisci la tua scheda perforata, la tua carta, o trasmetti un segnale Bluetooth, e la macchina inizia a lavorare, eseguendo operazioni semplici che alla fine risolvono il tuo problema. Quindi, la macchina di Turing è un meccanismo computazionale universale che risolve principalmente il compito universale ed essenziale di fornire un mezzo attraverso il quale qualsiasi calcolo semplice o, più precisamente, qualsiasi calcolo formalizzato possa essere eseguito—calcoli che possono essere decomposti nel linguaggio della matematica",
  "In essence, the task of the last 100 years, after finding some solution in the field of mathematics, was precisely to give it a physical form, to find the set of transistors that could be placed on a board, learn how to solder them all, reduce the processes of the computing processor, and so on. No wonder that the theory from 1936 finds application in 2014 for the ideas of the world computer. These 100 years were occupied, in general, in another area—the field of physically implementing this computer.": "In sostanza, il compito degli ultimi 100 anni, dopo aver trovato alcune soluzioni nel campo della matematica, è stato proprio quello di dargli una forma fisica, trovare l'insieme di transistor che potrebbero essere posizionati su una scheda, imparare come saldarli tutti, ridurre i processi del processore di calcolo, e così via. Non sorprende che la teoria del 1936 trovi applicazione nel 2014 per le idee del computer mondiale. Questi 100 anni sono stati occupati, in generale, in un'altra area - il campo dell'implementazione fisica di questo computer.",
  "When the planet became saturated, and we had personal computers, computational machines even inside smart devices, and when data centers started growing on the planet, the question shifted from the hardware solution to how the computational machine might look not at the physical or mathematically abstract level but at some non-physical, perhaps metaphysical, level relative to the entire planet. However, the foundation remains the same: the state transition function and nothing else.": "Quando il pianeta è diventato saturo, e abbiamo avuto computer personali, macchine computazionali persino all'interno di dispositivi intelligenti, e quando i data center hanno iniziato a crescere sul pianeta, la domanda è passata dalla soluzione hardware a come potrebbe apparire la macchina computazionale non a livello fisico o astratto matematicamente ma a un livello non fisico, forse metafisico, relativo all'intero pianeta. Tuttavia, la base rimane la stessa: la funzione di transizione di stato e nient'altro.",
  "As an addition to what has been said, so that we don't only dwell on the theory of 1936 and don't just break the shackles of Bitcoin maximalists, open the Ethereum white paper. There you will find the crucial phrase \"Turing complete machine\"—this is the main definition of Ethereum. A Turing complete machine means that Ethereum can handle any simple operations described in a formal language, operations that are possible. This is not some set of operations that Ethereum can provide as a calculator or a sophisticated calculator for scientists. Instead, it is an abstraction inside which it is possible to load any possible variations, manipulations with variables, constants, additions, calculations with any states, and so on. You won't find anything different from what Turing proposed in the 1930s in the Ethereum concept. You will find an engineering implementation of how to do it. If we move on and open the Polkadot wiki, it's a bit more challenging to find. For this, you should use the search, enter \"State transition,\" and in the search results, find several mentions that Polkadot guarantees nothing else but the state transition. Neither the storage of data in the Polkadot blockchain nor any additional services—only the purest change of state caused by incoming transactions and processed by Polkadot validators. Now, let's try to delve more into this.": "Come aggiunta a quanto detto, in modo che non ci soffermiamo solo sulla teoria del 1936 e non rompiamo solo le catene dei massimalisti di Bitcoin, apri il white paper di Ethereum. Lì troverai la frase cruciale \"macchina Turing completa\" - questa è la definizione principale di Ethereum. Una macchina Turing completa significa che Ethereum può gestire qualsiasi operazione semplice descritta in un linguaggio formale, operazioni che sono possibili. Questo non è un insieme di operazioni che Ethereum può fornire come calcolatrice o una calcolatrice sofisticata per scienziati. Invece, è un'astrazione all'interno della quale è possibile caricare qualsiasi variazione possibile, manipolazioni con variabili, costanti, aggiunte, calcoli con qualsiasi stato, e così via. Non troverai nulla di diverso da ciò che Turing propose negli anni '30 nel concetto di Ethereum. Troverai un'implementazione ingegneristica su come farlo. Se andiamo avanti e apriamo il wiki di Polkadot, è un po' più difficile da trovare. Per questo, dovresti utilizzare la ricerca, inserire \"Transizione di stato\" e nei risultati della ricerca, trovare diverse menzioni che Polkadot garantisce solo la transizione di stato. Né lo storage dei dati nella blockchain di Polkadot né eventuali servizi aggiuntivi - solo il più puro cambiamento di stato causato dalle transazioni in arrivo e elaborato dai validatori di Polkadot. Ora, cerchiamo di approfondire di più su questo.",
  "Now, let's add a bit to this linear diagram to move from the theory of the 1930s to today's realities, where we describe the abstract picture of the world computer. To do this, let's consider an example with Alice and Bob. Alice, being in the office, wants to start Bob's home vacuum robot for cleaning. If we look at today's concepts of how the link between Alice's mobile application and the robot vacuum at home is implemented, you will see roughly the following picture: Alice's mobile application generates a transaction in some cloud where calculations take place, and the output of these calculations is the output values that effectively turn into a command to start the vacuum robot. It would be useful for us, from the field of robotics and Robonomics as concepts in the world of web3, to understand that in the cloud, there is a digital twin of this robot, and its state is changed. We can, in general, not go that far and stop at the fact that Alice sends a transaction to the cloud, and the cloud, having performed all the necessary calculations and manipulations, generates a command to start Bob's vacuum robot.": "Ora, aggiungiamo un po' a questo diagramma lineare per passare dalla teoria degli anni '30 alle realtà di oggi, dove descriviamo l'immagine astratta del computer mondiale. Per fare ciò, consideriamo un esempio con Alice e Bob. Alice, essendo in ufficio, vuole avviare il robot aspirapolvere di Bob a casa per la pulizia. Se guardiamo ai concetti odierni su come è implementato il collegamento tra l'applicazione mobile di Alice e il robot aspirapolvere a casa, vedrete approssimativamente la seguente immagine: l'applicazione mobile di Alice genera una transazione in qualche cloud dove avvengono calcoli, e l'output di questi calcoli sono i valori di output che si trasformano efficacemente in un comando per avviare il robot aspirapolvere. Sarebbe utile per noi, dal campo della robotica e della Robonomics come concetti nel mondo del web3, capire che nel cloud c'è un gemello digitale di questo robot, e il suo stato viene cambiato. In generale, possiamo non arrivare così lontano e fermarci al fatto che Alice invia una transazione al cloud, e il cloud, avendo eseguito tutti i calcoli e le manipolazioni necessarie, genera un comando per avviare il robot aspirapolvere di Bob.",
  "In this scheme today, there are several main questions: if you were interacting with a physical computer in front of you or were in a room with the vacuum robot, you would approach, press a physical button, and set it in motion. What changes when instead of arrows, there is not a manual drive but a communication layer, the internet? A multitude of questions arises about how we can safely connect Alice and this cloud, how we can be sure that Alice has access to this cloud. The question of the communication network arises—how we can protect Alice from someone else addressing her vacuum robot, requesting, for example, to make a video of her entire apartment instead of cleaning, and a similar aspect arises: why would the vacuum robot listen to this cloud with such honor and integrity? Why would the robot fully trust this cloud?": "In questo schema odierno, ci sono diverse domande principali: se stessi interagendo con un computer fisico davanti a te o fossi in una stanza con il robot aspirapolvere, ti avvicineresti, premi un pulsante fisico e lo metti in movimento. Cosa cambia quando invece di frecce, non c'è un'unità manuale ma uno strato di comunicazione, internet? Sorgono una moltitudine di domande su come possiamo collegare in modo sicuro Alice e questo cloud, come possiamo essere sicuri che Alice abbia accesso a questo cloud. Sorge la questione della rete di comunicazione: come possiamo proteggere Alice da qualcun altro che si rivolge al suo robot aspirapolvere, richiedendo, ad esempio, di fare un video di tutto il suo appartamento invece di pulire, e sorge un aspetto simile: perché il robot aspirapolvere dovrebbe ascoltare questo cloud con tanto onore e integrità? Perché il robot dovrebbe fidarsi completamente di questo cloud?",
  "Today's approach with the architecture of cloud solutions that connect your mobile phone, or rather, the application on your mobile phone, and some technology on the other side, smart devices, is based on the significant achievements in building physical computers. Computers in data centers today are something extraordinary—the level of technical processes is simply amazing. However, from the perspective of communication technologies, when you already have some experience working with internet applications, it seems that somewhere there, at the level of a technical school or college, or maybe not right next to how developers, architects of Intel processors are solving their tasks now. Almost all questions about connecting Alice to Bob boil down solely to outputting a specific access certificate on a specific IP address from both sides, linking them together, and the cloud will own and do anything. The most important thing in this scheme is to do anything, meaning to perform state transitions or operations that occur without any guarantees that for Alice, for Bob, these will be executed according to the same logic. No one can say anything about how the cloud is arranged. It is a black box where computations are not formalized, and neither Alice nor Bob knows how the computation is performed.": "L'approccio odierno con l'architettura delle soluzioni cloud che collegano il tuo telefono cellulare, o meglio, l'applicazione sul tuo telefono cellulare, e qualche tecnologia dall'altra parte, dispositivi intelligenti, si basa sui significativi successi nella costruzione di computer fisici. I computer nei data center oggi sono qualcosa di straordinario - il livello dei processi tecnici è semplicemente incredibile. Tuttavia, dal punto di vista delle tecnologie di comunicazione, quando hai già un po' di esperienza nel lavorare con applicazioni internet, sembra che lì, a livello di una scuola tecnica o di college, o forse non proprio accanto a come i developer, gli architetti dei processori Intel stanno risolvendo i loro compiti ora. Quasi tutte le domande su come collegare Alice a Bob si riducono esclusivamente a emettere un certificato di accesso specifico su un indirizzo IP specifico da entrambi i lati, collegarli insieme, e il cloud possederà e farà qualsiasi cosa. La cosa più importante in questo schema è fare qualsiasi cosa, cioè eseguire transizioni di stato o operazioni che avvengono senza alcuna garanzia che per Alice, per Bob, queste verranno eseguite secondo la stessa logica. Nessuno può dire nulla su come è organizzato il cloud. È una scatola nera dove i calcoli non sono formalizzati, e né Alice né Bob sanno come vengono eseguiti i calcoli.",
  "The place where you must fully trust—relying on the reputation of the company that owns these data centers, and you must completely trust the network access providers who issue a certificate and verify the security of your connection. In fact, if we talk about the boom of internet applications, this is a huge problem. The problem is that there are actually some citadels located in specific jurisdictions that operate on a relatively simple technology stack to connect you as easily as possible to the cloud, which represents a black box. Dissatisfaction with this approach actually arouses interest in the world computer because it will arrange things a bit differently. And how? Let's try to supplement the scheme we drew with blue color right now.": "Il luogo in cui devi fidarti completamente - affidandoti alla reputazione dell'azienda che possiede questi data center, e devi fidarti completamente dei fornitori di accesso alla rete che rilasciano un certificato e verificano la sicurezza della tua connessione. Infatti, se parliamo del boom delle applicazioni internet, questo è un enorme problema. Il problema è che ci sono effettivamente alcune cittadelle situate in giurisdizioni specifiche che operano su uno stack tecnologico relativamente semplice per collegarti il più facilmente possibile al cloud, che rappresenta una scatola nera. Il dissenso con questo approccio suscita effettivamente interesse nel computer mondiale perché organizzerà le cose in modo un po' diverso. E come? Cerchiamo di integrare lo schema che abbiamo disegnato con il colore blu proprio ora.",
  "So, to supplement our linear graph, our linear diagram from both sides, let's take a look at the discoveries that have significance in computer science and that are directly or indirectly related to achievements from the world of web3.": "Quindi, per integrare il nostro grafico lineare, il nostro diagramma lineare da entrambi i lati, diamo un'occhiata alle scoperte che hanno significato nella scienza informatica e che sono direttamente o indirettamente correlate ai successi del mondo del web3.",
  "Let's start with Leslie Lamport in 1976. Those who attended my presentations, lectures from 2015-2020, probably remember how often I liked to mention that before the invention of Bitcoin, problems related to creating a decentralized network were well described by Leslie Lamport in 1976 in the Byzantine Generals problem. The solution to the Byzantine Generals problem is at the core of Tendermint PBFT algorithms and all synchronous algorithms used from Telegram Open Network to Tendermint, to Cosmos, and other blockchain projects that, accordingly, followed the path of Byzantine Generals.": "Cominciamo con Leslie Lamport nel 1976. Coloro che hanno partecipato alle mie presentazioni, lezioni dal 2015 al 2020, probabilmente ricorderanno quanto spesso mi piaceva menzionare che prima dell'invenzione di Bitcoin, i problemi legati alla creazione di una rete decentralizzata erano ben descritti da Leslie Lamport nel 1976 nel problema dei generali bizantini. La soluzione al problema dei generali bizantini è al centro degli algoritmi Tendermint PBFT e di tutti gli algoritmi sincroni utilizzati da Telegram Open Network a Tendermint, a Cosmos e ad altri progetti blockchain che, di conseguenza, hanno seguito il percorso dei generali bizantini.",
  "The second interesting achievement in internet technologies is torrent trackers. We don't have any specific, already erased, cloud or a black box that stores files. Still, users worldwide, by exchanging torrent files, can download exactly the file they were looking for, and this works without data substitution. No one uploads any viruses to you by replacing the file. There might sometimes be a virus embedded in the file, but the idea of receiving a link to download and actually downloading something other than what you were offered to download using torrent technology is impossible. Similar processes exist in the IPFS network, a hash-oriented storage - a way of connecting various participants with trust in the information you convey without using a black box, precisely.": "Il secondo interessante risultato nelle tecnologie internet sono i tracker torrent. Non abbiamo alcun cloud specifico, già cancellato, o una scatola nera che memorizza file. Tuttavia, gli utenti in tutto il mondo, scambiando file torrent, possono scaricare esattamente il file che stavano cercando, e questo funziona senza sostituzione di dati. Nessuno carica virus a te sostituendo il file. A volte potrebbe esserci un virus incorporato nel file, ma l'idea di ricevere un link per il download e effettivamente scaricare qualcos'altro rispetto a quello che ti è stato offerto per il download utilizzando la tecnologia torrent è impossibile. Processi simili esistono nella rete IPFS, uno storage orientato all'hash - un modo per collegare vari partecipanti con fiducia nelle informazioni che trasmetti senza utilizzare una scatola nera, esattamente.",
  "And of course, Bitcoin. Bitcoin, as a more collective example, I'm sure Satoshi Nakamoto was well aware of Leslie Lamport's solution to the Byzantine Generals problem and, of course, observed how the idea of torrent trackers was developing. If we don't emphasize the properties that the Bitcoin blockchain obtained, such as immutability, transparency of transactions, and, to some extent, censorship resistance, then Bitcoin is an internet service that performs state transition, some changes in state based on transactions without a central node. It is an example of a collective construction of a global network in which there is a constantly functioning state transition function that we can trust, and to ensure trust, neither jurisdictions nor specific IP addresses nor the most primitive technologies used and still used today in building cloud services are used. The collective image of Bitcoin allowed overlaying the general concept from the 1930s of a Turing-complete machine on the existence of a universal abstract function for everything.": "E ovviamente, Bitcoin. Bitcoin, come esempio più collettivo, sono sicuro che Satoshi Nakamoto fosse ben consapevole della soluzione di Leslie Lamport al problema dei generali bizantini e, naturalmente, osservava come l'idea dei tracker torrent stesse sviluppandosi. Se non sottolineiamo le proprietà che il blockchain di Bitcoin ha ottenuto, come l'immutabilità, la trasparenza delle transazioni e, in certa misura, la resistenza alla censura, allora Bitcoin è un servizio internet che esegue una transizione di stato, alcuni cambiamenti di stato basati su transazioni senza un nodo centrale. È un esempio di una costruzione collettiva di una rete globale in cui c'è una funzione di transizione di stato costantemente funzionante in cui possiamo fidarci, e per garantire fiducia, né giurisdizioni né indirizzi IP specifici né le tecnologie più primitive utilizzate e ancora utilizzate oggi nella costruzione di servizi cloud sono utilizzate. L'immagine collettiva di Bitcoin ha permesso di sovrapporre il concetto generale degli anni '30 di una macchina Turing-completa sull'esistenza di una funzione astratta universale per tutto.",
  "So, what do we need to add to this scheme to envision a global computer? From the bottom, we provide consensus validators or, in general, validators. It can be said that the \"Data availability layer\" is probably a phrase many have heard around Ethereum this year, and it has become an advantage of Bitcoin as well. However, in the organization scheme of the global computer, this is one piece of the puzzle and, as I mentioned, it complements the main function that lies at the heart of the global computer—the function of universal state transition. Going back to the very beginning, the analogy of the heart in the human body is interesting here. It's not a thinking thing, indeed. Yes, it doesn't generate, you could say, the brain is much more important. Still, life is impossible without the heart. It simply pumps blood. Similarly, at the core of the global computer, all transactions are pumped through the state transition function, resulting in outputs. But to organize this in a distributed internet network without the need to trust some citadel, we need to supplement the picture with two components.": "Quindi, cosa dobbiamo aggiungere a questo schema per immaginare un computer globale? Dal basso, forniamo validatori di consenso o, in generale, validatori. Si potrebbe dire che il \"livello di disponibilità dei dati\" è probabilmente una frase che molti hanno sentito intorno a Ethereum quest'anno, ed è diventata un vantaggio anche di Bitcoin. Tuttavia, nello schema organizzativo del computer globale, questo è un pezzo del puzzle e, come ho menzionato, completa la funzione principale che si trova al centro del computer globale - la funzione di transizione di stato universale. Tornando al principio, l'analogia del cuore nel corpo umano è interessante qui. Non è una cosa pensante, infatti. Sì, non genera, si potrebbe dire, il cervello è molto più importante. Tuttavia, la vita è impossibile senza il cuore. Semplicemente pompa sangue. Allo stesso modo, al centro del computer globale, tutte le transazioni vengono pompate attraverso la funzione di transizione di stato, producendo output. Ma per organizzare questo in una rete internet distribuita senza la necessità di fidarsi di qualche cittadella, dobbiamo integrare l'immagine con due componenti.",
  "The first component is a set of computers or nodes that are ready to execute the state transition. When you send transactions, they don't just go here; they go to the validators. Validators perform computations, recalling what I've already mentioned in this ongoing conversation. They take your transaction, retrieve information from the blockchain about how to process that transaction, apply that processing, and then coordinate with other validators the fact that they correctly executed the state transition. The core of the global computer, in terms of protection against situations where Bob, the vacuum cleaner robot, receives a correct command from Alice in the office, is not based on trust but on cross-verification by a multitude of network participants based on available information from the blockchain. Not only from the blockchain, by the way. It's complex, and we won't delve into it right now, but essentially, a multitude of validators take turns watching and have incentives, some internal incentives within the protocol, to prevent the universal and capable-of-calculating-anything machine from executing this operation incorrectly. A validator effectively processes transactions that come into the global computer, and other validators help prevent situations where one of the validators performed an incorrect calculation. The better the consensus algorithms of the validators, the better protection we have for the state transition function or, in other words, the heart of our global computer.": "Il primo componente è un insieme di computer o nodi pronti ad eseguire la transizione di stato. Quando invii transazioni, non vanno solo qui; vanno ai validatori. I validatori eseguono calcoli, ricordando ciò che ho già menzionato in questa conversazione in corso. Prendono la tua transazione, recuperano informazioni dalla blockchain su come elaborare quella transazione, applicano tale elaborazione e poi coordinano con altri validatori il fatto che hanno eseguito correttamente la transizione di stato. Il nucleo del computer globale, in termini di protezione contro situazioni in cui Bob, il robot aspirapolvere, riceve un comando corretto da Alice in ufficio, non si basa sulla fiducia ma sulla verifica incrociata da parte di una moltitudine di partecipanti alla rete basata sulle informazioni disponibili dalla blockchain. Non solo dalla blockchain, tra l'altro. È complesso, e non approfondiremo ora, ma essenzialmente, una moltitudine di validatori si alternano a sorvegliare e hanno incentivi, alcuni incentivi interni all'interno del protocollo, per evitare che la macchina universale e in grado di calcolare qualsiasi cosa esegua questa operazione in modo errato. Un validatore elabora efficacemente le transazioni che arrivano al computer globale, e altri validatori aiutano a prevenire situazioni in cui uno dei validatori ha eseguito un calcolo errato. Più sono avanzati gli algoritmi di consenso dei validatori, maggiore è la protezione che abbiamo per la funzione di transizione di stato o, in altre parole, il cuore del nostro computer globale.",
  "The second part of this scheme is the data availability service—what we've always called the database in Bitcoin or Ethereum. In fact, we'll have to abandon that concept because there's a fundamental change in the architecture of all projects, and for those specifically targeting the global computer, this change is most crucial. For a simple present-day example: there are various implementations of Layer 2 networks on top of Ethereum—such as Arbitrum, Optimism, and others. If you start looking into their main differences and how they operate, you'll find that, in some cases, an L2 network in Ethereum sends a larger amount of data, solely from the first-layer blockchain, i.e., from the Ethereum blockchain. All the necessary puzzle pieces to confirm that the computation on the L2 layer was correct can be found in the first-layer Ethereum blockchain. On the other hand, other approaches suggest that beyond the first layer of Ethereum, something else is stored that needs to be found to prove the correctness of transactions. So, right now, before our eyes, there is again a question of improvement, but specifically of such an architecture where transactions go on the left, in the middle, we have the heart in the form of the state transition function, validators, and their consensus allows for the correct execution of this state transition. But there is also a question of data availability, which is necessary to ensure both cross-verification and, essentially, the existence of the service itself. Some approaches and patterns for creating L2 on top of Ethereum today ask the question: \"What if a certain L2 layer loses the data it doesn't store within the main Ethereum blockchain?\"": "La seconda parte di questo schema è il servizio di disponibilità dei dati, ciò che abbiamo sempre chiamato database in Bitcoin o Ethereum. In realtà, dovremo abbandonare quel concetto perché c'è un cambiamento fondamentale nell'architettura di tutti i progetti, e per quelli che mirano specificamente al computer globale, questo cambiamento è cruciale. Per un esempio attuale: ci sono varie implementazioni di reti Layer 2 su Ethereum, come Arbitrum, Optimism e altri. Se iniziate a esaminare le loro principali differenze e il loro funzionamento, scoprirete che, in alcuni casi, una rete L2 su Ethereum invia una maggiore quantità di dati, esclusivamente dalla blockchain del primo livello, cioè dalla blockchain di Ethereum. Tutti i pezzi del puzzle necessari per confermare che il calcolo sul livello L2 era corretto si trovano nella blockchain di Ethereum del primo livello. D'altra parte, altri approcci suggeriscono che oltre il primo livello di Ethereum, è memorizzato qualcos'altro che deve essere trovato per dimostrare la correttezza delle transazioni. Quindi, proprio ora, davanti ai nostri occhi, c'è di nuovo una questione di miglioramento, ma specificamente di un'architettura in cui le transazioni procedono a sinistra, nel mezzo abbiamo il cuore sotto forma di funzione di transizione di stato, validatori e il loro consenso permette l'esecuzione corretta di questa transizione di stato. Ma c'è anche una questione di disponibilità dei dati, necessaria per garantire sia la verifica incrociata che, essenzialmente, l'esistenza del servizio stesso. Alcuni approcci e modelli per creare L2 su Ethereum oggi pongono la domanda: \"Cosa succede se un certo livello L2 perde i dati che non memorizza all'interno della blockchain principale di Ethereum?\"",
  "Let's complement this picture with how Polkadot is structured. Polkadot has two consensus mechanisms: the \"babe\" consensus, responsible for the parachain-level consensus and is fast, and the \"grandpa\" consensus, which is slower and verifies everything afterward. So, if you delve into the wiki article titled \"The Path of a Block in the Polkadot Network,\" you will encounter interesting abbreviations. After achieving the \"babe\" consensus at the parachain level, the \"grandpa\" consensus introduces the concept of \"proof of validity and data availability.\" Going deeper, you'll find the term \"chunk\" of redundant pieces of information, inspired by CD RW technologies from the 90s and 2000s. This addresses the question of how to preserve information when absolute trust in a specific entity in the network is not feasible. The concept of \"chunk\" of redundant information is one of these patterns.": "Completiamo questo quadro con la struttura di Polkadot. Polkadot ha due meccanismi di consenso: il consenso \"babe\", responsabile del consenso a livello di parachain ed è veloce, e il consenso \"grandpa\", che è più lento e verifica tutto successivamente. Quindi, se approfondite l'articolo wiki intitolato \"Il percorso di un blocco nella rete Polkadot\", incontrerete interessanti abbreviazioni. Dopo aver raggiunto il consenso \"babe\" a livello di parachain, il consenso \"grandpa\" introduce il concetto di \"prova di validità e disponibilità dei dati\". Approfondendo, troverete il termine \"chunk\" di pezzi ridondanti di informazioni, ispirato alle tecnologie CD RW degli anni '90 e 2000. Questo affronta la questione di come preservare le informazioni quando la fiducia assoluta in una specifica entità nella rete non è fattibile. Il concetto di \"chunk\" di informazioni ridondanti è uno di questi modelli.",
  "Summing up, at the core lies an abstract function that enables any computation and was described by Alan Turing in the 1930s. The personal computer, essentially a side effect of a mathematical problem, emerged from Turing's work. The technologies first applied in Bitcoin, such as consensus that allows the network to exist without a specific data center or entity responsible for data correctness, form a functioning mechanism. It goes beyond providing a specific service for electronic cash transfers; it allows us to audit and control any computation in the network. Additionally, we face the challenge of ensuring data availability, as it's not the primary concern of the world computer. The world computer's task lies at its core, executing computation, managing state transitions, and performing calculations, while the data in this scheme serves as a puzzle piece that is more necessary to support the lower part. Thus, this overall scheme can be seen as an abstract and generalized illustration of the world computer's structure, where the state transition function is at its core.": "In sintesi, al centro c'è una funzione astratta che consente qualsiasi calcolo ed è stata descritta da Alan Turing negli anni '30. Il computer personale, essenzialmente un effetto collaterale di un problema matematico, è emerso dal lavoro di Turing. Le tecnologie prima applicate in Bitcoin, come il consenso che permette alla rete di esistere senza un centro dati specifico o un'entità responsabile della correttezza dei dati, formano un meccanismo funzionante. Va oltre la fornitura di un servizio specifico per i trasferimenti di denaro elettronico; ci consente di verificare e controllare qualsiasi calcolo nella rete. Inoltre, affrontiamo la sfida di garantire la disponibilità dei dati, poiché non è la preoccupazione principale del computer mondiale. Il compito del computer mondiale sta nel suo nucleo, eseguire calcoli, gestire transizioni di stato e effettuare calcoli, mentre i dati in questo schema servono come un pezzo di puzzle che è più necessario per supportare la parte inferiore. Pertanto, questo schema complessivo può essere visto come un'illustrazione astratta e generalizzata della struttura del computer mondiale, dove la funzione di transizione di stato è al suo nucleo.",
  "Part 4: The Path of a New Block of Information in the World Computer": "Parte 4: Il Percorso di un Nuovo Blocco di Informazioni nel Computer Mondiale",
  "The fourth and final part of our lecture is \"The World Computer in Your Home.\" After this, I will begin recording screencasts for the practical part of the sessions.": "La quarta e ultima parte della nostra lezione è \"Il Computer Mondiale nella Tua Casa.\" Dopo questo, inizierò a registrare screencast per la parte pratica delle sessioni.",
  "Now we will try to summarize almost all the theory we have covered so far in terms of one process. The process that describes the path of an information block in the world computer. Let's start again by returning to the theme of web3 and the concept of blockchain. The phrase \"block\" or \"information block\" can be considered identical when stepping away from the last 10 years and taking a more general theory, as explored in the previous parts of the lectures. The concept of a \"block of information\" aligns with web3, but not necessarily with blockchain. Even without any crypto projects, we need to understand that when forming the theory of the world computer without referencing the formation of information blocks, it's currently challenging to envision other models. So, we will consider the path of an information block throughout the entire world computer, not because it is blockchain, but because, for now, there are no other ways to conceptualize the existence of the world computer other than by processing information in specific portions.": "Ora cercheremo di riassumere quasi tutta la teoria che abbiamo coperto finora in termini di un processo. Il processo che descrive il percorso di un blocco di informazioni nel computer mondiale. Cominciamo di nuovo tornando al tema di web3 e al concetto di blockchain. La frase \"blocco\" o \"blocco di informazioni\" può essere considerata identica quando ci allontaniamo dagli ultimi 10 anni e prendiamo in considerazione una teoria più generale, come esplorato nelle parti precedenti delle lezioni. Il concetto di un \"blocco di informazioni\" si allinea con web3, ma non necessariamente con blockchain. Anche senza progetti crypto, dobbiamo capire che quando si forma la teoria del computer mondiale senza fare riferimento alla formazione di blocchi di informazioni, attualmente è difficile immaginare altri modelli. Quindi, considereremo il percorso di un blocco di informazioni in tutto il computer mondiale, non perché è blockchain, ma perché, per ora, non ci sono altri modi per concettualizzare l'esistenza del computer mondiale se non elaborando informazioni in porzioni specifiche.",
  "Block of information = block in web3, but without blockchain and without any crypto project influence. We must currently consider the formation of information blocks when discussing the theory of the world computer. Now, let's move on to the first point. I tried to find close analogies from everyday life to help illustrate the path of an information block in the world computer. The analogy I've chosen is the movement of a bus on a route. Our first meeting point is the bus station.": "Blocco di informazioni = blocco in web3, ma senza blockchain e senza alcuna influenza di progetti crypto. Dobbiamo attualmente considerare la formazione di blocchi di informazioni quando si discute della teoria del computer mondiale. Ora passiamo al primo punto. Ho cercato di trovare analogie vicine dalla vita di tutti i giorni per aiutare a illustrare il percorso di un blocco di informazioni nel computer mondiale. L'analogia che ho scelto è il movimento di un autobus lungo un percorso. Il nostro primo punto di incontro è la fermata dell'autobus.",
  "I marked transactions in pink as small dots. Let's imagine a typical bus stop where people gather, waiting for a bus that operates on a schedule. If we don't consider the hustle and bustle of large cities, where buses are always late, everyone in the world generally knows that the train from village A to village B always arrives around 7:15 am. Transactions that users want to send to the world computer gather at a certain bus stop and wait for the bus to arrive.": "Ho contrassegnato le transazioni in rosa come piccoli punti. Immaginiamo una tipica fermata dell'autobus dove le persone si riuniscono, aspettando un autobus che opera secondo un orario. Se non consideriamo il trambusto delle grandi città, dove gli autobus sono sempre in ritardo, tutti nel mondo sanno generalmente che il treno da villaggio A a villaggio B arriva sempre intorno alle 7:15 del mattino. Le transazioni che gli utenti vogliono inviare al computer mondiale si raccolgono in una certa fermata dell'autobus e aspettano che arrivi l'autobus.",
  "This is how our block is formed. Imagine: the bus arrives, and each person starts boarding one by one, taking their seats. The bus then follows its route. In our case, the block of information overcomes the first frontier. Our transactions, in some form, have settled into the bus and overcome the initial barrier. I will be using terminology primarily from Polkadot, and the third part should have better explained the concept of the world computer in the comparison between Ethereum and Polkadot. My personal opinion, and probably the majority of engineers today would agree, is that the representation of a heterogeneous multicentric world computer is better implemented in Polkadot. However, we will still go through the terms inherited from Ethereum, but towards the end of this part of the lecture.": "Ecco come è formato il nostro blocco. Immagina: l'autobus arriva e ogni persona inizia a salire uno per uno, prendendo il proprio posto. L'autobus segue poi il suo percorso. Nel nostro caso, il blocco di informazioni supera la prima frontiera. Le nostre transazioni, in qualche forma, si sono stabilite sull'autobus e hanno superato la barriera iniziale. Utilizzerò principalmente la terminologia di Polkadot e la terza parte dovrebbe aver meglio spiegato il concetto di computer mondiale nel confronto tra Ethereum e Polkadot. La mia opinione personale, e probabilmente la maggior parte degli ingegneri oggi sarebbe d'accordo, è che la rappresentazione di un computer mondiale eterogeneo multicentrico è meglio implementata in Polkadot. Tuttavia, passeremo comunque attraverso i termini ereditati da Ethereum, ma verso la fine di questa parte della lezione.",
  "What is the line that separates the bus stop from the bus's further movement? This line represents the collators of the network – participants in the network nodes who collect transactions. You can think of a collator not as a bus driver but as a controller who stays at the bus stop. In other words, this controller checks whether you have a ticket when you enter the bus. It doesn't recheck in the database how valid the ticket is but looks at the basic parameters of the ticket and checks if everything seems fine. In reality, collators perform almost all the calculations required, verifying the ticket number and other data, but they are not required to guarantee that the check is done correctly. Therefore, collators are controllers who remain at the bus stop, primarily ensuring passenger boarding, seating, and sending the bus further along the route.": "Qual è la linea che separa la fermata dell'autobus dal movimento successivo dell'autobus? Questa linea rappresenta i collatori della rete - partecipanti ai nodi della rete che raccolgono le transazioni. Puoi pensare a un collatore non come un autista di autobus ma come un controllore che rimane alla fermata dell'autobus. In altre parole, questo controllore controlla se hai un biglietto quando entri sull'autobus. Non ricontrolla nel database quanto sia valido il biglietto ma guarda i parametri di base del biglietto e controlla se tutto sembra a posto. In realtà, i collatori eseguono quasi tutti i calcoli necessari, verificando il numero del biglietto e altri dati, ma non sono tenuti a garantire che il controllo sia eseguito correttamente. Pertanto, i collatori sono controllori che rimangono alla fermata dell'autobus, garantendo principalmente l'imbarco dei passeggeri, il posizionamento e l'invio dell'autobus lungo il percorso.",
  "Beyond the drawn border, we enter the first validation area where paravalidators are located. These are validators of the entire ecosystem, the entire network, specifically assigned for a certain time to check each transaction and thus perform actual computations in the world computer. Our not-yet-fully-formed block of information is marked with a dashed line. It is still a candidate block of information since it has not undergone any actual verification. The collator, who collected the block of information and checked the transactions at the entrance, does not participate in any way in securing the cybersecurity of the computations conducted. Its task is only to seat all transactions and form the first block. At this stage, the transformation from a candidate to a real block of information begins.": "Oltre il confine disegnato, entriamo nella prima area di convalida dove si trovano i paravalidatori. Questi sono validatori dell'intero ecosistema, dell'intera rete, specificamente assegnati per un certo periodo per controllare ogni transazione e quindi eseguire calcoli effettivi nel computer mondiale. Il nostro blocco di informazioni non ancora completamente formato è contrassegnato da una linea tratteggiata. È ancora un blocco di informazioni candidato poiché non ha subito alcuna verifica effettiva. Il collatore, che ha raccolto il blocco di informazioni e controllato le transazioni all'ingresso, non partecipa in alcun modo alla sicurezza informatica dei calcoli effettuati. Il suo compito è solo di sistemare tutte le transazioni e formare il primo blocco. In questa fase, inizia la trasformazione da un blocco candidato a un blocco di informazioni reale.",
  "I have divided it into three parts, but forgot one more. Let's consider four parts of this candidate block. The top part, known to users of various web3 applications as the header or block header, is the quintessence, the most popular piece of information circulating and reflected from the block explorer to the console clients of all nodes mining, staking, and so on. The header is a key element of the block, but it is practically formed at the last stage at this point.": "L'ho diviso in tre parti, ma ho dimenticato un'altra. Consideriamo quindi quattro parti di questo blocco candidato. La parte superiore, conosciuta dagli utenti di varie applicazioni web3 come l'intestazione o l'intestazione del blocco, è la quintessenza, il pezzo di informazione più popolare che circola e si riflette dall'esploratore di blocchi ai client console di tutti i nodi che fanno mining, staking, e così via. L'intestazione è un elemento chiave del blocco, ma è praticamente formata nell'ultima fase a questo punto.",
  "Firstly, we have our actual requests for state transitions or computations. There is a list of changes that need to be made: convert A to A', B to B', C to C', applying a set of algorithms to them. For this, we will now build another boundary immediately and go beyond it to perform this part of the work, and then only proceed beyond it. Already at the block preparation stage, we have to cross the second boundary within the world computer to go for the algorithms that need to be applied to prepare the block. As I mentioned before, theoretically, the controller at the bus stop here does the same, but I wouldn't pay much attention to that. The block preparation stage, especially when we talk about examples simultaneously from Polkadot and Ethereum as a world computer, they differ slightly and show us the insignificance of checks at this stage because it is precisely on the second step, after passing the first boundary and receiving the block of information from collators, that the attention-worthy calculations of this world computer begin.": "Innanzitutto, abbiamo le nostre richieste effettive per transizioni di stato o calcoli. C'è un elenco di modifiche che devono essere apportate: convertire A in A', B in B', C in C', applicando loro un insieme di algoritmi. Per questo, costruiremo immediatamente un'altra barriera e la supereremo per eseguire questa parte del lavoro, e poi procederemo oltre. Già nella fase di preparazione del blocco, dobbiamo superare la seconda barriera all'interno del computer mondiale per passare agli algoritmi che devono essere applicati per preparare il blocco. Come ho già detto, teoricamente, il controllore alla fermata dell'autobus fa lo stesso qui, ma non ci farei troppo caso. La fase di preparazione del blocco, specialmente quando parliamo di esempi contemporaneamente da Polkadot ed Ethereum come computer mondiale, differiscono leggermente e ci mostrano l'irrilevanza dei controlli in questa fase perché è proprio al secondo passo, dopo aver superato la prima barriera e ricevuto il blocco di informazioni dai collatori, che iniziano i calcoli degni di attenzione di questo computer mondiale.",
  "To perform these calculations, the validator, at this stage, can only do so by turning to the relay chain, the central database, and taking from there the algorithms from the runtime. In the case of Ethereum, it was the same virtual machines in the previous architectural concept, which could be applied, so there was no need to go anywhere. Almost every node had a complete copy of the algorithms that could be applied. But in terms of a heterogeneous network, where each segment or each individual chain may have its own set of algorithms, a validator, before actually executing all the transitions, calculations obtained in the form of a block candidate from the collator, must consult. It must consult the relay chain, consult the main blockchain in the network and take from there the necessary algorithms, apply them, and perform state transitions.": "Per effettuare questi calcoli, il validatore, in questa fase, può farlo solo rivolgendosi alla catena di rilancio, al database centrale, e prendendo da lì gli algoritmi dal runtime. Nel caso di Ethereum, erano le stesse macchine virtuali nel concetto architettonico precedente, che potevano essere applicate, quindi non c'era bisogno di andare da nessuna parte. Quasi ogni nodo aveva una copia completa degli algoritmi che potevano essere applicati. Ma in termini di una rete eterogenea, dove ogni segmento o ogni singola catena potrebbe avere il proprio set di algoritmi, un validatore, prima di eseguire effettivamente tutte le transizioni, i calcoli ottenuti sotto forma di un candidato blocco dal collatore, deve consultare. Deve consultare la catena di rilancio, consultare la blockchain principale nella rete e prendere da lì gli algoritmi necessari, applicarli e eseguire le transizioni di stato.",
  "During the execution of calculations, a Merkle tree is simultaneously formed, and we won't dwell on it because Merkle trees are not that complicated from the perspective of computer science. Still, I notice that to understand how to apply them in engineering and in the architecture of a project, how they are applied, not just by reading on Wikipedia, you need to break your head a bit, imagine examples. In this example, we won't delve too much into it, but I think for those who are already familiar with some basic definitions, have read about Merkle trees, it will become a bit clearer about how and at what moments another Merkle tree is assembled. The Merkle tree is formed when we actually perform calculations and output values appear. These output values are packed into a binary tree format, then the addition is performed between them in computer science language, and the top node reaches the header. Let's denote it with a big letter \"H.\" It's a small and pleasant aspect of considering such schemes.": "Durante l'esecuzione dei calcoli, viene contemporaneamente formato un albero di Merkle, e non ci soffermeremo su di esso perché gli alberi di Merkle non sono così complicati dal punto di vista dell'informatica. Tuttavia, noto che per capire come applicarli in ingegneria e nell'architettura di un progetto, come vengono applicati, non solo leggendo su Wikipedia, è necessario faticare un po', immaginare esempi. In questo esempio, non ci addentreremo troppo, ma penso che per coloro che sono già familiari con alcune definizioni di base, hanno letto sugli alberi di Merkle, diventerà un po' più chiaro su come e in quali momenti viene assemblato un altro albero di Merkle. L'albero di Merkle si forma quando effettivamente eseguiamo calcoli e compaiono i valori di output. Questi valori di output vengono impacchettati in un formato ad albero binario, quindi viene eseguita l'addizione tra di essi nel linguaggio informatico, e il nodo superiore raggiunge l'intestazione. Denotiamolo con una grande lettera \"H.\" È un aspetto piccolo e piacevole considerare tali schemi.",
  "In this scheme, we can note how the block header is actually related to the computations performed inside. Let's look again - our block candidate came from the collator. There is a set of transactions that need to be executed, perform calculations. The validator went through another internal boundary, one more, behind the algorithms, applied them, and recorded all the results at the lowest level of the Merkle tree. The other nodes are essentially systemic. They do not come from any data; they don't come from anywhere. At the second level, the node does not come from any information. It is obtained by summing values in these two leaves, and when we go up with you, we get only the root of this tree, which is enough to protect all output values. We won't get the same header if we change any of these calculations. And this is one of the magical and simple features, like hash-oriented storage, of how we can protect a whole block of information by talking only about one header. Therefore, headers are so important and play a cornerstone role even in architectures when we transition from one chain or one virtual machine to many combined in the network. It is enough for us to ensure the security of storing headers to be sure that all transactions that were executed at the block preparation stage were executed correctly, and they cannot be replaced.": "In questo schema, possiamo notare come l'intestazione del blocco sia effettivamente correlata ai calcoli eseguiti all'interno. Guardiamo di nuovo - il nostro candidato blocco è arrivato dal collatore. C'è un insieme di transazioni che devono essere eseguite, eseguire calcoli. Il validatore ha attraversato un altro confine interno, un altro, dietro agli algoritmi, li ha applicati e ha registrato tutti i risultati al livello più basso dell'albero di Merkle. Gli altri nodi sono essenzialmente sistemici. Non provengono da alcun dato; non provengono da nessuna parte. Al secondo livello, il nodo non proviene da alcuna informazione. Viene ottenuto sommando i valori in queste due foglie, e quando saliamo con voi, otteniamo solo la radice di questo albero, che è sufficiente per proteggere tutti i valori di output. Non otterremo la stessa intestazione se cambiamo uno qualsiasi di questi calcoli. E questa è una delle caratteristiche magiche e semplici, come lo storage orientato all'hash, di come possiamo proteggere un intero blocco di informazioni parlando solo di un'intestazione. Pertanto, le intestazioni sono così importanti e svolgono un ruolo fondamentale anche nelle architetture quando passiamo da una catena o da una macchina virtuale a molte combinate nella rete. Ci basta assicurarci la sicurezza di memorizzare le intestazioni per essere sicuri che tutte le transazioni eseguite nella fase di preparazione del blocco siano state eseguite correttamente e non possono essere sostituite.",
  "And one field is still left unfilled. In the process of preparing the block of information, it is the author's field, that is, the validator who actually performed all the changes, prepared the Merkle tree, and recorded the header. Since we are considering an example with the bus moving along the route from the stop, let's call the validator a \"controller\" who goes right inside the bus, passes each seat, approaches each person, checks for real what is written on their tickets, makes some mark, validates it, and, accordingly, puts their signature. The controller, for example, number 134, meaning, naturally, each validator has some unique identifier, their address, and we also somehow uniquely renamed it here.": "E un campo è ancora rimasto vuoto. Nel processo di preparazione del blocco di informazioni, è il campo dell'autore, cioè il validatore che ha effettivamente eseguito tutte le modifiche, preparato l'albero di Merkle e registrato l'intestazione. Poiché stiamo considerando un esempio con l'autobus che si muove lungo il percorso dalla fermata, chiamiamo il validatore un \"controllore\" che entra direttamente nell'autobus, passa da ogni posto, si avvicina a ogni persona, controlla effettivamente ciò che è scritto sui loro biglietti, fa qualche segno, lo convalida e, di conseguenza, mette la loro firma. Il controllore, ad esempio, numero 134, significa, naturalmente, che ogni validatore ha un identificatore unico, il loro indirizzo, e lo abbiamo anche rinominato in modo univoco qui.",
  "And it seems that at this point, we could have shaded and made our block boundaries bolder, but no, and this is one of the interesting changes that have occurred in the last 5 years in terms of decentralized ecosystems, namely the shift from proof of work. When validators of the network, at that time miners, never had to coordinate anything with each other. You produced a block and sent it to the network and moved on. In fact, it was not a consensus of agreed consent. It was a consensus of obvious agreement with the fact that had occurred. What is interesting changes when the architecture becomes more complex, and we have come closer from a simple calculator like Bitcoin with a ledger towards an actual virtual computer, is that at each stage, the connectivity of participants who ensure security and block production has increased. Because, in fact, no one who risks their stake, the one who ensures this security and wants to earn by processing your transactions, has something to lose, unlike proof of work. In proof of work, you bought the equipment, yes, you put money into it, you spend electricity, but there is actually no protection against the fact that you can attack the network with your power, the same 51% attack, where someone with a lot of miners can try to rewrite the chain.": "E sembra che a questo punto avremmo potuto ombreggiare e rendere più audaci i confini del nostro blocco, ma no, e questo è uno dei cambiamenti interessanti che sono avvenuti negli ultimi 5 anni in termini di ecosistemi decentralizzati, ovvero il passaggio dal proof of work. Quando i validatori della rete, all'epoca i minatori, non dovevano mai coordinarsi tra loro. Producevi un blocco e lo inviavi alla rete e andavi avanti. In realtà, non era un consenso di consenso concordato. Era un consenso di accordo ovvio con il fatto che era accaduto. Cosa interessante cambia quando l'architettura diventa più complessa, e ci siamo avvicinati da un semplice calcolatore come Bitcoin con un registro verso un vero computer virtuale, è che ad ogni stadio, la connettività dei partecipanti che garantiscono la sicurezza e la produzione di blocchi è aumentata. Perché, in realtà, nessuno che rischia il proprio capitale, colui che garantisce questa sicurezza e vuole guadagnare elaborando le tue transazioni, ha qualcosa da perdere, a differenza del proof of work. Nel proof of work, hai acquistato l'attrezzatura, sì, hai investito denaro, hai speso energia, ma in realtà non c'è alcuna protezione contro il fatto che puoi attaccare la rete con la tua potenza, lo stesso attacco del 51%, dove qualcuno con molti minatori può cercare di riscrivere la catena.",
  "Now we are talking about proof of stake, where a deposit is already made, and if you do something wrong, a part will be withdrawn from it, as a penalty. All nodes, absolutely, in all architectures that I currently observe, mechanisms for messaging between validators began to appear quickly at the block preparation stage. In Polkadot, it is no different. Any validator of a separate parachain that collects a block knows the addresses or already has established contact with another 15-63 validators who are with you on this epoch, on some temporary period, as validators, and each of them randomly becomes a block producer at some point. But being appointed as a producer does not negate a very important component of this process. You do not stop interacting with the other participants. There is always a pool of validators assigned to a specific epoch, to a certain time slot, for validating a particular parachain or segment of the world computer. Regardless of whether you are a validator-controller specifically assigned to produce the next block in the world computer of this segment, you still stay in touch with the other validators, and you have constant contact with them.": "Ora stiamo parlando della prova di puntata, dove un deposito è già stato effettuato e, se fai qualcosa di sbagliato, ne verrà prelevata una parte, come penalità. Tutti i nodi, assolutamente, in tutte le architetture che attualmente osservo, i meccanismi per la messaggistica tra i validatori hanno iniziato a comparire rapidamente nella fase di preparazione del blocco. In Polkadot, non è diverso. Qualsiasi validatore di una parachain separata che raccoglie un blocco conosce gli indirizzi o ha già stabilito contatto con altri 15-63 validatori che sono con te in questa epoca, per un certo periodo temporaneo, come validatori, e ognuno di loro diventa casualmente un produttore di blocchi in un certo momento. Ma essere nominato produttore non annulla un componente molto importante di questo processo. Non smetti di interagire con gli altri partecipanti. C'è sempre un pool di validatori assegnati a una specifica epoca, a uno slot temporale specifico, per convalidare una particolare parachain o segmento del computer mondiale. Indipendentemente dal fatto che tu sia un validatore-controller specificamente assegnato a produrre il prossimo blocco nel computer mondiale di questo segmento, rimani comunque in contatto con gli altri validatori e hai un contatto costante con loro.",
  "Why is this constant contact necessary? It turns out to be quite simple. We do not want, when we move into the inner part, to be afraid or worry that we performed any of the operations incorrectly. As surprising as it may seem, it is beneficial for any validator, before moving on, to first turn to their colleagues assigned to validation and ask them to double-check the calculations. This check is informal, so even if we do not use any logging into an immutable database of requests for verification and the results of this verification, the appointed controller, after talking to the pool of validators, still collects additional responses from all validators assigned to this parachain or network segment. Together with additional confirmations, the controller moves on to the next stage. But even here, it's not quite as simple. At this stage, another process has to be performed. It is important to note that at this stage, our block of information is still a candidate block, and settlement of information is already taking place in the storage. Neither at the very end, nor after we have created and sealed the block and attached it with an archiver in the final part, namely here, in this middle part where all the calculations are actually performed, does the information get saved in the storage. Therefore, our controller, in addition to talking to their colleagues, also ensures the storage of data in some storage, which is also quite metaphysical because the moment you communicate with other validators, this storage gets filled. How is this checked? We will need to move on to the next stage.": "Perché è necessario questo costante contatto? Risulta essere piuttosto semplice. Non vogliamo, quando entriamo nella parte interna, avere paura o preoccuparci di aver eseguito correttamente le operazioni. Sorprendentemente, è vantaggioso per qualsiasi validatore, prima di procedere, rivolgersi ai propri colleghi assegnati alla validazione e chiedere loro di rivedere i calcoli. Questa verifica è informale, quindi anche se non utilizziamo alcun registro in un database immutabile delle richieste di verifica e dei risultati di questa verifica, il controller designato, dopo aver parlato con il pool di validatori, raccoglie comunque risposte aggiuntive da tutti i validatori assegnati a questa parachain o segmento di rete. Insieme alle conferme aggiuntive, il controller passa alla fase successiva. Ma anche qui, non è proprio così semplice. A questo punto, deve essere eseguito un altro processo. È importante notare che a questo punto, il nostro blocco di informazioni è ancora un blocco candidato, e il regolamento delle informazioni è già in corso nello storage. Né alla fine, né dopo aver creato e sigillato il blocco e averlo collegato con un archivio nella parte finale, cioè qui, in questa parte centrale dove vengono effettuati tutti i calcoli, le informazioni vengono salvate nello storage. Pertanto, il nostro controller, oltre a parlare con i propri colleghi, si assicura anche dello storage dei dati in qualche storage, che è anche piuttosto metafisico perché nel momento in cui si comunica con altri validatori, questo storage si riempie. Come viene verificato ciò? Dovremo passare alla fase successiva.",
  "In summary, to complete the middle part, let's look again. We still have only a candidate block at the very beginning. Yes, all transactions are roughly calculated somewhere at the bus stop, everyone has taken their seats according to their tickets. We have passed the first boundary, which is essentially direct established contact between validators and block collators. In Ethereum and Polkadot, these are slightly different schemes now. But everything that happens on the left side at the very beginning does not provide cybersecurity for data and calculations. It's just preparation. Once we have passed and entered the environment of the validators' attention, work with the block of information in the world computer begins. A randomly selected validator, in our case, with a bus route - a controller, actually goes through each of the seats, checks the ticket, checks and performs all the calculations that were made, gathers all the information into a tree. The resulting root node of this tree becomes the header of the proposed block. The validator who actually performs all the calculations with this block of information communicates with the other participants who perform a similar function for the same route in an undefined time slot. And while communicating with them and asking them to verify all the calculations, we are actually filling a certain storage of data in the network. It is not a specific physical storage; there is no specific IP address, no specific hard drive onto which they all load through some VPN or login and password scheme, of course not. In the process of communicating with other validators, data remains on their local machines, and this data will further participate in the transformation of this candidate into a new block of information. In essence, the sealed block that will be settled in the relay chain is collected. We have assembled a block. All the metadata around the calculations is already filled, which means we can try to move on to the next frontier.": "In sintesi, per completare la parte centrale, diamo un'occhiata di nuovo. Abbiamo ancora solo un blocco candidato all'inizio. Sì, tutte le transazioni sono approssimativamente calcolate da qualche parte alla fermata dell'autobus, ognuno ha preso il proprio posto in base al biglietto. Abbiamo superato il primo confine, che è essenzialmente il contatto diretto stabilito tra i validatori e i collatori di blocchi. In Ethereum e Polkadot, questi sono schemi leggermente diversi ora. Ma tutto ciò che accade sul lato sinistro all'inizio non fornisce sicurezza informatica per i dati e i calcoli. È solo preparazione. Una volta superato e entrati nell'ambiente dell'attenzione dei validatori, il lavoro con il blocco di informazioni nel computer mondiale inizia. Un validatore selezionato casualmente, nel nostro caso, con un percorso in autobus - un controllore, effettivamente passa attraverso ciascuno dei posti, controlla il biglietto, controlla e esegue tutti i calcoli che sono stati fatti, raccoglie tutte le informazioni in un albero. Il nodo radice risultante di questo albero diventa l'intestazione del blocco proposto. Il validatore che effettivamente esegue tutti i calcoli con questo blocco di informazioni comunica con gli altri partecipanti che svolgono una funzione simile per lo stesso percorso in uno slot temporale non definito. E mentre comunica con loro e chiede loro di verificare tutti i calcoli, stiamo effettivamente riempiendo un certo archivio di dati nella rete. Non si tratta di un archivio fisico specifico; non c'è un indirizzo IP specifico, né un disco rigido specifico su cui tutti caricano tramite qualche schema VPN o login e password, ovviamente no. Nel processo di comunicazione con gli altri validatori, i dati rimangono sulle loro macchine locali, e questi dati parteciperanno ulteriormente alla trasformazione di questo candidato in un nuovo blocco di informazioni. In sostanza, il blocco sigillato che sarà sistemato nella catena di rilancio viene raccolto. Abbiamo assemblato un blocco. Tutti i metadati attorno ai calcoli sono già compilati, il che significa che possiamo provare a passare alla prossima frontiera.",
  "At this moment, let's delve into the passage of the next boundary. The most crucial aspect at the final stage becomes the block header. We are less concerned with the execution of computations; we can simplify our perspective here, as computations may vary based on the architecture, whether it's Ethereum or Polkadot. The key point is that, on the intermediate stage, from what I observe in the theory and practice of implementing the world computer concept, most computations happen at an intermediate level. The last level remains only to execute essential checks. Almost all these checks in a multi-chain architecture are related to the concatenation or merging of block headers into one block.": "In questo momento, approfondiamo il passaggio del prossimo confine. L'aspetto più cruciale nella fase finale diventa l'intestazione del blocco. Siamo meno preoccupati dell'esecuzione dei calcoli; possiamo semplificare la nostra prospettiva qui, poiché i calcoli possono variare in base all'architettura, che sia Ethereum o Polkadot. Il punto chiave è che, nella fase intermedia, da quanto osservo nella teoria e nella pratica dell'implementazione del concetto di computer mondiale, la maggior parte dei calcoli avviene a un livello intermedio. L'ultimo livello rimane solo per eseguire controlli essenziali. Quasi tutti questi controlli in un'architettura multi-chain sono legati alla concatenazione o fusione delle intestazioni dei blocchi in un unico blocco.",
  "In the final part of our journey, the most important element in the world computer's information block becomes the cornerstone – the header. The second component is more about meta-information. If the header is the actual result of all computations, the additional meta-information being transmitted consists of receipts and signatures of the validators who participated in the intermediate stage of this process. At the final stage, we can visualize the whole picture solely as the assembly of the same tree, not as a list of transactions. In the relay chain's final part, the crucial aspect is the assembly of headers from many similar processes, but linked to different segments of the world computer, different parachains.": "Nella parte finale del nostro viaggio, l'elemento più importante nel blocco di informazioni del computer mondiale diventa la pietra angolare - l'intestazione. Il secondo componente riguarda maggiormente le meta-informazioni. Se l'intestazione è il risultato effettivo di tutti i calcoli, le meta-informazioni aggiuntive trasmesse consistono di ricevute e firme dei validatori che hanno partecipato alla fase intermedia di questo processo. Nella fase finale, possiamo visualizzare l'intera immagine unicamente come l'assemblaggio dello stesso albero, non come un elenco di transazioni. Nella parte finale della catena di rilancio, l'aspetto cruciale è l'assemblaggio delle intestazioni da molti processi simili, ma collegati a segmenti diversi del computer mondiale, diverse parachains.",
  "Each parachain, each set of validators – we've discussed one example, but in reality, such block preparations for parachains happen 30-40 times. The number of parachain slots or the number of L2 networks in Ethereum will result in a similar number of processes with a similar architecture. However, in the final stage, we will see an approximately identical picture everywhere – how the block header will be formed from a multitude of headers from other blocks. In this process, we need to introduce one more entity and jump back across the boundary to the second stage.": "Ogni parachain, ogni insieme di validatori - abbiamo discusso un esempio, ma in realtà, tali preparativi di blocco per le parachains avvengono 30-40 volte. Il numero di slot parachain o il numero di reti L2 in Ethereum comporterà un numero simile di processi con un'architettura simile. Tuttavia, nella fase finale, vedremo un'immagine approssimativamente identica ovunque - come l'intestazione del blocco sarà formata da una moltitudine di intestazioni da altri blocchi. In questo processo, dobbiamo introdurre un'altra entità e tornare indietro attraverso il confine alla seconda fase.",
  "Finalizers. In fact, they are also validators, but relay chain validators. In the Polkadot architecture, we have a thousand validators divided into two groups. The first, a very small group, is responsible only for forming the block header and a new block consisting of the headers of the State of the States blocks. The second group – parachain validators – is further divided into many subgroups, but this group is called parachain validators. In L2 networks above Ethereum, this story will eventually gain more understanding, more denominators. For now, let's focus on the Polkadot architecture. Finalizers, besides checking an additional set of meta-information and rechecking a validator with a specific ID, randomly chosen to generate this block of all blocks, also help recheck meta-information, check, and assemble all headers into one. It's a bit complex, yes, if we look at it from the perspective of tree assembly.": "Finalizzatori. In realtà, sono anche validatori, ma validatori della catena di rilancio. Nell'architettura di Polkadot, abbiamo mille validatori divisi in due gruppi. Il primo, un gruppo molto piccolo, è responsabile solo per la formazione dell'intestazione del blocco e di un nuovo blocco composto dalle intestazioni dei blocchi dello Stato dei blocchi degli Stati. Il secondo gruppo - validatori delle parachain - è ulteriormente diviso in molti sottogruppi, ma questo gruppo è chiamato validatori delle parachain. Nelle reti L2 sopra Ethereum, questa storia guadagnerà alla fine una maggiore comprensione, più denominatori. Per ora, concentriamoci sull'architettura di Polkadot. I finalizzatori, oltre a controllare un insieme aggiuntivo di meta-informazioni e ricontrollare un validatore con un ID specifico, scelto casualmente per generare questo blocco di tutti i blocchi, aiutano anche a ricontrollare le meta-informazioni, controllare e assemblare tutte le intestazioni in una. È un po' complesso, sì, se lo guardiamo dal punto di vista dell'assemblaggio dell'albero.",
  "In addition to this, in the Polkadot architecture and in Ethereum with the latest changes, a data availability check takes place. For this, finalizers visit parachain validators and try to request actual information about each block stored in the network. If they receive data from at least 1/3 of the validators, using technology that allows redundant storage of information, and subsequently, if someone loses it, one or two or three validators can still restore it, there is a critical threshold at 1/3. If 1/3 of the nodes respond and say that we have data about the block being produced, finalizers tell the block that it is already a fully formed information block, that all computations have been done correctly, that we have already taken the header of this block and combined it with someone else's headers from other segments of the network. We have already formed the main header of the entire network. After that, finalizers place many checkmarks on the final block, which combines all performed computations.": "Oltre a questo, nell'architettura di Polkadot e in Ethereum con gli ultimi cambiamenti, si verifica un controllo di disponibilità dei dati. Per questo, i finalizzatori visitano i validatori delle parachain e cercano di richiedere informazioni effettive su ciascun blocco memorizzato nella rete. Se ricevono dati da almeno 1/3 dei validatori, utilizzando una tecnologia che consente la memorizzazione ridondante delle informazioni, e successivamente, se qualcuno le perde, uno o due o tre validatori possono comunque ripristinarle, c'è una soglia critica al 1/3. Se 1/3 dei nodi risponde e dice che abbiamo dati sul blocco in produzione, i finalizzatori dicono al blocco che è già un blocco di informazioni completamente formato, che tutti i calcoli sono stati eseguiti correttamente, che abbiamo già preso l'intestazione di questo blocco e l'abbiamo combinata con le intestazioni di qualcun altro da altri segmenti della rete. Abbiamo già formato l'intestazione principale di tutta la rete. Dopo di che, i finalizzatori pongono molti segni di spunta sul blocco finale, che combina tutti i calcoli eseguiti.",
  "Currently, this is the situation from the perspective of the most engineering-implemented multi-chain heterogeneous ecosystem, which is Polkadot. It is the most engineering-implemented multi-chain heterogeneous ecosystem, not too far from Ethereum. I would like to focus on the comparison, and if someone is interested in understanding how information blocks flow in Ethereum with L2 networks, you can try to do that now. I will return to this question when some elements of Ethereum, in terms of heterogeneity and multi-chain aspects, are completed. It might take 1-2 years, and then we can build such a picture. Nevertheless, we can generally accept a scheme with three main stages:": "Attualmente, questa è la situazione dal punto di vista dell'ecosistema eterogeneo multi-chain più implementato ingegneristicamente, che è Polkadot. È l'ecosistema eterogeneo multi-chain più implementato ingegneristicamente, non troppo distante da Ethereum. Mi piacerebbe concentrarmi sul confronto, e se qualcuno è interessato a capire come fluiscono i blocchi di informazioni in Ethereum con le reti L2, può provare a farlo ora. Tornerò su questa questione quando alcuni elementi di Ethereum, in termini di eterogeneità e aspetti multi-chain, saranno completati. Potrebbe richiedere 1-2 anni, e poi possiamo costruire un tale quadro. Tuttavia, possiamo generalmente accettare uno schema con tre fasi principali:",
  "**1. Formation of a candidate for the information block:**": "**1. Formazione di un candidato per il blocco delle informazioni:**",
  "In this stage, the initial candidate for the information block is formed.": "In questa fase, viene formato il candidato iniziale per il blocco delle informazioni.",
  "**2. Execution of all computations, data storage, data availability, rechecking with other nodes, ensuring that all state transitions are performed correctly according to specific algorithms, and storing these algorithms in the main citadel:**": "**2. Esecuzione di tutti i calcoli, archiviazione dei dati, disponibilità dei dati, ricontrollo con altri nodi, garantendo che tutte le transizioni di stato siano eseguite correttamente secondo algoritmi specifici e memorizzando questi algoritmi nel citadel principale:**",
  "This stage involves the actual execution of computations, saving data to certain layers, ensuring data availability, rechecking with other nodes to confirm that all state transitions are in accordance with algorithms stored somewhere in the main citadel.": "Questa fase coinvolge l'esecuzione effettiva dei calcoli, il salvataggio dei dati su determinati livelli, garantendo la disponibilità dei dati, il ricontrollo con altri nodi per confermare che tutte le transizioni di stato siano conformi agli algoritmi memorizzati da qualche parte nel citadel principale.",
  "**3. Finalization, which will not recheck the computations but will verify the meta-information, how this meta-information is stored. It will then assemble the final block, which is the state of the states, and release it as a common information block for the entire segmented multi-chain network:**": "**3. Finalizzazione, che non ricontrollerà i calcoli ma verificherà le meta-informazioni, come queste meta-informazioni sono memorizzate. Assemblerà quindi il blocco finale, che è lo stato degli stati, e lo rilascerà come un blocco di informazioni comune per l'intera rete multi-chain segmentata:**",
  "The final stage involves checking the meta-information, verifying how this meta-information is stored, assembling the final block (state of the states), and releasing it as a common information block for the entire segmented multi-chain network.": "La fase finale coinvolge il controllo delle meta-informazioni, la verifica di come queste meta-informazioni sono memorizzate, l'assemblaggio del blocco finale (stato degli stati) e il rilascio come un blocco di informazioni comune per l'intera rete multi-chain segmentata.",
  "At this point, we can say that our information is saved. It has passed through the heart, the heart has executed its data transfer correctly, and we can already use the output values. Some will use them to open a smart-contract-purchased apartment with a smart lock, while others might show off their NFT, just received for 10 ethers.": "A questo punto, possiamo dire che le nostre informazioni sono salvate. Sono passate attraverso il cuore, il cuore ha eseguito correttamente il trasferimento dei dati e possiamo già utilizzare i valori in uscita. Alcuni li utilizzeranno per aprire un appartamento acquistato con un contratto intelligente con una serratura intelligente, mentre altri potrebbero mostrare il loro NFT, appena ricevuto per 10 ethers.",
  "In general, this is approximately how it works. This concludes the theoretical part. I think it took about 2 hours, and ahead of us are practical sessions that I will be recording over the next few months. They will help us understand the observed data from the console window, decentralized applications, block explorers, where we will gradually understand how all these theoretical numbers and letters actually look in implementation using Polkadot as an example. I will also start getting hands-on with implementations at the L2 level using one of the well-known frameworks for building L2. Thank you to everyone who has been watching.": "In generale, è approssimativamente così che funziona. Questo conclude la parte teorica. Penso che ci siano volute circa 2 ore e davanti a noi ci sono sessioni pratiche che registrerò nei prossimi mesi. Ci aiuteranno a comprendere i dati osservati dalla finestra della console, le applicazioni decentralizzate, gli esploratori di blocchi, dove capiremo gradualmente come tutti questi numeri e lettere teorici appaiono effettivamente nell'implementazione utilizzando Polkadot come esempio. Inizierò anche ad impegnarmi con le implementazioni a livello L2 utilizzando uno dei framework ben noti per la costruzione di L2. Grazie a tutti coloro che hanno guardato."
}