{
  "Part 3: Emergence of the World Computer": "Partie 3: Émergence de l'ordinateur mondial",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.\"": "Dans la troisième partie intitulée \"Émergence de l'ordinateur mondial,\" nous tenterons, couche par couche, de recréer l'implémentation technique de l'ordinateur mondial en utilisant des exemples d'Ethereum et de Polkadot, comme précédemment.",
  "Learn": "Apprendre",
  "In the third part titled \"Emergence of the World Computer,\" we will attempt, layer by layer, to recreate the engineering implementation of the world computer using examples from Ethereum and Polkadot, as before.": "Dans la troisième partie intitulée \"Émergence de l'ordinateur mondial,\" nous tenterons, couche par couche, de recréer l'implémentation technique de l'ordinateur mondial en utilisant des exemples d'Ethereum et de Polkadot, comme précédemment.",
  "Let's start with Ethereum. Ethereum began in 2015 with a state that can be characterized as a combination of the proof-of-work consensus algorithm, enabling the world computer to exist in a decentralized state (as discussed in Part 2). Additionally, the Ethereum Virtual Machine (EVM) was introduced, serving as a Turing-complete computational machine. Together, these two elements formed the first version of the world computer, sometimes referred to as a precursor. Within this context, decentralized applications, or smart contracts, began to emerge.": "Commençons par Ethereum. Ethereum a débuté en 2015 avec un état qui peut être caractérisé comme une combinaison de l'algorithme de consensus de preuve de travail, permettant à l'ordinateur mondial d'exister dans un état décentralisé (comme discuté dans la partie 2). De plus, la Machine Virtuelle Ethereum (EVM) a été introduite, servant de machine computationnelle complète de Turing. Ensemble, ces deux éléments ont formé la première version de l'ordinateur mondial, parfois appelée précurseur. Dans ce contexte, des applications décentralisées, ou contrats intelligents, ont commencé à émerger.",
  "Over the next 5 years, Ethereum lived a relatively unchanged life, undergoing some engineering tunings, such as a continuous increase in gas limits, with the exception of events like the Shanghai fork. Notably, during the second DEFCON held in Shanghai, a denial-of-service attack exploited a function in the virtual machine that consumed minimal gas but triggered significant computations on the Ethereum network. This led to memory overflow, effectively disrupting an entire Ethereum node. This incident highlights the intricate details that arise when dealing with a large and abstract solution like creating a virtual machine.": "Au cours des 5 années suivantes, Ethereum a vécu une vie relativement inchangée, subissant quelques ajustements techniques, tels qu'une augmentation continue des limites de gaz, à l'exception d'événements comme la fourchette de Shanghai. Notamment, lors du deuxième DEFCON tenu à Shanghai, une attaque par déni de service a exploité une fonction dans la machine virtuelle qui consommait un gaz minimal mais déclenchait des calculs significatifs sur le réseau Ethereum. Cela a conduit à un débordement de mémoire, perturbant efficacement un nœud Ethereum entier. Cet incident met en lumière les détails complexes qui surviennent lorsqu'on traite avec une solution large et abstraite comme la création d'une machine virtuelle.",
  "Moving forward, a significant shift occurred around the end of the decade, particularly in 2020, with the advent of Ethereum 2.0. However, Ethereum 2.0 has now been deprecated, and I would characterize the real breakthrough as starting around 2019-2020. During this period, there was a true technological breakthrough in Ethereum, moving towards the concept of Ethereum 2.0. The moment of engineering change in Ethereum's architecture can be considered the event known as \"the merge,\" where the functionalities of the beacon chain were combined. The merge marked a significant shift in the paradigm of Ethereum, transitioning it into a slightly different state than what was on the board. The actual engineering change in Ethereum's architecture can be associated with \"the merge,\" where the functionalities of the beacon chain were integrated. For a detailed history of this, you can refer to the ethereum.org website, which provides an excellent article on the coexistence of the traditional Ethereum blockchain with the parallel blockchain launched in 2015 and the Ethereum Virtual Machine.": "En avançant, un changement significatif s'est produit vers la fin de la décennie, particulièrement en 2020, avec l'avènement d'Ethereum 2.0. Cependant, Ethereum 2.0 a maintenant été obsolète, et je caractériserais la véritable percée comme commençant vers 2019-2020. Pendant cette période, il y a eu une véritable percée technologique dans Ethereum, se dirigeant vers le concept d'Ethereum 2.0. Le moment du changement technique dans l'architecture d'Ethereum peut être considéré comme l'événement connu sous le nom de \"la fusion,\" où les fonctionnalités de la chaîne de balises ont été combinées. La fusion a marqué un changement significatif dans le paradigme d'Ethereum, le faisant passer dans un état légèrement différent de ce qui était prévu. Le changement technique réel dans l'architecture d'Ethereum peut être associé à \"la fusion,\" où les fonctionnalités de la chaîne de balises ont été intégrées. Pour une histoire détaillée de cela, vous pouvez vous référer au site ethereum.org, qui propose un excellent article sur la coexistence de la blockchain Ethereum traditionnelle avec la blockchain parallèle lancée en 2015 et la Machine Virtuelle Ethereum.",
  "When the merge occurred, we witnessed a new architectural representation, both at the network level and for individual nodes interacting with the Ethereum network. What was the actual change? For many, the merge signifies the transition from proof-of-work to proof-of-stake, which is indeed significant. It implies increased efficiency and fine-tuning, but it's still a tuning relative to one of the parameters. However, the more noteworthy internal engineering change for each network client was the split. There was no longer a single specific network client or a monolithic architecture. Instead, we got two components of a single node interacting with the Ethereum network.": "Lorsque la fusion s'est produite, nous avons assisté à une nouvelle représentation architecturale, à la fois au niveau du réseau et pour les nœuds individuels interagissant avec le réseau Ethereum. Quel était le changement réel? Pour beaucoup, la fusion signifie la transition de la preuve de travail à la preuve d'enjeu, ce qui est en effet significatif. Cela implique une efficacité accrue et un ajustement fin, mais c'est toujours un réglage par rapport à l'un des paramètres. Cependant, le changement d'ingénierie interne le plus remarquable pour chaque client réseau était la division. Il n'y avait plus un client réseau spécifique ou une architecture monolithique. Au lieu de cela, nous avons obtenu deux composants d'un seul nœud interagissant avec le réseau Ethereum.",
  "The first part, which I labeled \"beacon chain\" on the diagram, essentially represents a collective image of all the innovations that came into the Ethereum client at the moment of the merge. The second part is the preserved virtual machine. Nevertheless, it's worth adding something here too. Dialogues truly began about replacing the virtual machine, which was exclusively tailored to work with smart contracts and smart contracts in a specific language—Solidity. This is because, by 2015, there were practically no interpreters left for smart contracts in languages other than Solidity, and the architecture appeared somewhat one-sided from the perspective of an Ethereum programmer. You learn a snippet of JavaScript in the form of Solidity, write smart contract code on it, and get your DApp, like Uniswap, for example.": "La première partie, que j'ai étiquetée \"chaîne de balises\" sur le diagramme, représente essentiellement une image collective de toutes les innovations qui sont entrées dans le client Ethereum au moment de la fusion. La deuxième partie est la machine virtuelle préservée. Néanmoins, il est également utile d'ajouter quelque chose ici. Les discussions ont vraiment commencé sur le remplacement de la machine virtuelle, qui était exclusivement conçue pour fonctionner avec des contrats intelligents et des contrats intelligents dans un langage spécifique - Solidity. Cela est dû au fait qu'en 2015, il n'y avait pratiquement plus d'interprètes pour les contrats intelligents dans des langues autres que Solidity, et l'architecture semblait quelque peu unilatérale du point de vue d'un programmeur Ethereum. Vous apprenez un extrait de JavaScript sous forme de Solidity, écrivez du code de contrat intelligent dessus et obtenez votre DApp, comme Uniswap, par exemple.",
  "Since the emergence of a more complex Ethereum architecture, discussions have revolved around the idea that the virtual machine, which existed as a somewhat monolithic element from 2015, can also be replaced in the new architecture. The conversation shifted towards replacing it with something like WebAssembly (Wasm) or a more interesting solution from the perspective of writing code for the world computer. You could say, \"Wasm with a question mark.\"": "Depuis l'émergence d'une architecture Ethereum plus complexe, les discussions ont tourné autour de l'idée que la machine virtuelle, qui existait comme un élément quelque peu monolithique à partir de 2015, peut également être remplacée dans la nouvelle architecture. La conversation s'est tournée vers son remplacement par quelque chose comme WebAssembly (Wasm) ou une solution plus intéressante du point de vue de l'écriture de code pour l'ordinateur mondial. On pourrait dire, \"Wasm avec un point d'interrogation.\"",
  "From the perspective of the Beacon Chain, it indeed operates on proof-of-stake, but what's more interesting is the inclusion of Gasper. This represents a modification of the original ideas about Casper. Casper, often referred to as the friendly ghost finality gadget, was introduced, perhaps even as early as Defcon 3 or 4, and maybe even discussed at Defcon 2—I don't recall precisely. But at the EthCC conference in Paris, which definitely took place in 2018, Vlad Zamfir and Vitalik, from different rooms, were discussing the emergence of Casper as a friendly ghost, overseeing participants in proof-of-stake and coming to the aid of the network when a node misbehaves. From this idea of Casper, Gasper emerges. Without delving into terminology too much, the consensus algorithm undergoes a shift, changing not only in terms of simplicity but also becoming more complex, similar to Polkadot. As I mentioned earlier, Polkadot has two consensus algorithms, Babe and Grandpa. Similarly, with Ethereum's Beacon Chain functionality, achieving consensus and finality is not as instantaneous. It involves epochs, and the network operates on a more complex scenario, reaching a state that is already somewhat dynamic, not frozen, and is essentially carved in stone.": "Du point de vue de la chaîne de balises, elle fonctionne en effet sur la preuve d'enjeu, mais ce qui est plus intéressant, c'est l'inclusion de Gasper. Cela représente une modification des idées originales sur Casper. Casper, souvent appelé le gadget de finalité du fantôme amical, a été introduit, peut-être même dès Defcon 3 ou 4, et peut-être même discuté à Defcon 2 - je ne me souviens pas précisément. Mais lors de la conférence EthCC à Paris, qui a certainement eu lieu en 2018, Vlad Zamfir et Vitalik, depuis des pièces différentes, discutaient de l'émergence de Casper en tant que fantôme amical, surveillant les participants à la preuve d'enjeu et venant en aide au réseau en cas de comportement incorrect d'un nœud. De cette idée de Casper, Gasper émerge. Sans entrer trop dans la terminologie, l'algorithme de consensus subit un changement, changeant non seulement en termes de simplicité mais devenant également plus complexe, similaire à Polkadot. Comme je l'ai mentionné précédemment, Polkadot a deux algorithmes de consensus, Babe et Grandpa. De même, avec la fonctionnalité de la chaîne de balises d'Ethereum, parvenir à un consensus et à une finalité n'est pas instantané. Cela implique des époques, et le réseau fonctionne sur un scénario plus complexe, atteignant un état déjà quelque peu dynamique, non figé, et essentiellement gravé dans la pierre.",
  "What can be added in relation to 2024? For me, it was a prolonged observation and an attempt to understand whether Ethereum would eventually implement sharding or not. Sharding is the ability to exist not with a single blockchain but with multiple blockchains within one network. As I observed the merge and the simultaneous rise of Layer 2 (L2) networks, questions arose in my mind about whether sharding would indeed materialize. Sharding seemed interesting to me due to its homogeneity—having multiple chains that are almost identical, lacking any specific characteristics. It appeared to be an interesting approach, but not as flexible as a heterogeneous approach. In L2 networks, even several years ago, I could see the heterogeneity of Ethereum, its ability to work with various types of more specific blockchains. I was curious about the direction it would take—whether sharding, with its homogeneity, would displace L2 solutions or whether L2 solutions with a heterogeneous approach would saturate the Beacon Chain and the main nodes of the Ethereum network.": "Que peut-on ajouter en relation avec 2024? Pour moi, c'était une observation prolongée et une tentative de comprendre si Ethereum implémenterait finalement le sharding ou non. Le sharding est la capacité d'exister non pas avec une seule blockchain mais avec plusieurs blockchains au sein d'un même réseau. Alors que j'observais la fusion et la montée simultanée des réseaux de couche 2 (L2), des questions ont surgi dans mon esprit sur la réalisation éventuelle du sharding. Le sharding me semblait intéressant en raison de son homogénéité - avoir plusieurs chaînes presque identiques, sans caractéristiques spécifiques. Cela semblait être une approche intéressante, mais pas aussi flexible qu'une approche hétérogène. Dans les réseaux L2, même il y a plusieurs années, je pouvais voir l'hétérogénéité d'Ethereum, sa capacité à fonctionner avec divers types de blockchains plus spécifiques. J'étais curieux de la direction qu'il prendrait - que le sharding, avec son homogénéité, déplacerait les solutions L2 ou que les solutions L2 avec une approche hétérogène satureraient la chaîne de balises et les principaux nœuds du réseau Ethereum.",
  "Today, in 2024, based on articles on ethereum.org, it seems that sharding as a concept has been pushed back, and the focus is on helping various L2 networks integrate with the Beacon Chain and align with the main chain's functionality, which is now divided into two elements in the Ethereum network's architecture.": "Aujourd'hui, en 2024, sur la base d'articles sur ethereum.org, il semble que le sharding en tant que concept ait été repoussé, et l'accent est mis sur l'aide à l'intégration de divers réseaux L2 avec la chaîne de balises et sur l'alignement avec la fonctionnalité de la chaîne principale, qui est maintenant divisée en deux éléments dans l'architecture du réseau Ethereum.",
  "Therefore, without delving into the details of how L2 networks are structured—although we'll touch upon that when we fill in the second part of the board—we should imagine that Ethereum is now a kind of Beacon Chain, a beacon, a guiding star for numerous L2 networks. These L2 networks can have more specific functionality, executing their logic according to a set of individual functions. This is somewhat in line with the idea of a Swiss Army knife—not making Ethereum a Swiss Army knife, but L2 networks are starting to differentiate in architecture. They duplicate the functionality of the abstract computing machine of Ethereum but perform it with lower gas costs or within their specific segment. Some are already thinking about tuning and making their L2 layer more efficient, focusing on specific functional capabilities. Thus, in my opinion, we are witnessing the emergence of heterogeneity in the world computer that aimed to be homogeneous. Also, it's essential not to forget that decentralized applications (dApps) still exist within the main blockchain, within that same blockchain that started in 2015. This means that during the merge, during the transition to the new architectural state, there was no wipeout, no erasure of the previous history. All decentralized applications and smart contracts underlying these applications continued to exist, and they continue to exist today, and probably tomorrow. This is a question that we will explore using Polkadot as an example, but there is still a feeling that it will be possible to settle a decentralized application in the Beacon Chain—dApps.": "Par conséquent, sans entrer dans les détails de la structure des réseaux L2 - bien que nous aborderons cela lorsque nous compléterons la deuxième partie du tableau - nous devrions imaginer qu'Ethereum est maintenant une sorte de Beacon Chain, un phare, une étoile guide pour de nombreux réseaux L2. Ces réseaux L2 peuvent avoir des fonctionnalités plus spécifiques, exécutant leur logique selon un ensemble de fonctions individuelles. Cela est quelque peu en ligne avec l'idée d'un couteau suisse - ne faisant pas d'Ethereum un couteau suisse, mais les réseaux L2 commencent à se différencier en architecture. Ils dupliquent la fonctionnalité de la machine informatique abstraite d'Ethereum mais l'exécutent avec des coûts de gaz plus bas ou dans leur segment spécifique. Certains pensent déjà à ajuster et à rendre leur couche L2 plus efficace, en se concentrant sur des capacités fonctionnelles spécifiques. Ainsi, à mon avis, nous assistons à l'émergence de l'hétérogénéité dans l'ordinateur mondial qui visait à être homogène. De plus, il est essentiel de ne pas oublier que les applications décentralisées (dApps) existent toujours dans la blockchain principale, dans cette même blockchain qui a commencé en 2015. Cela signifie que lors de la fusion, lors de la transition vers le nouvel état architectural, il n'y a pas eu d'effacement, pas d'effacement de l'histoire précédente. Toutes les applications décentralisées et les contrats intelligents sous-jacents à ces applications ont continué d'exister, et ils continuent d'exister aujourd'hui, et probablement demain. C'est une question que nous explorerons en utilisant Polkadot comme exemple, mais il y a encore un sentiment qu'il sera possible d'installer une application décentralisée dans la Beacon Chain - dApps.",
  "In summary, let's imagine the engineering implementation of today's Ethereum as a world computer. We have each network node consisting of two parts. The first layer is responsible for the Ethereum Virtual Machine (EVM), the actual functionality of the virtual machine or Turing complete machine, if we talk in theoretical terms. Perhaps we will see the emergence of alternatives to the virtual machine designed in 2015. These alternatives will likely surpass it in terms of more abstract programming possibilities than writing smart contracts in Solidity. Meanwhile, smart contracts in Solidity continue to feel comfortable. If you want to write functionality for the Ethereum main chain without creating any infrastructure on top of Ethereum, without offloading any calculations to make them cheaper, and so on, decentralized applications that you can write as smart contracts can still be housed in Ethereum's main blockchain. At the same time, Beacon Chain functionality has emerged, separating the consensus logic between validators from the main protocol of the computing machine. This allows for additional flexibility in how consensus should work and how it should be further modified without affecting the virtual machine itself. The example of Shanghai and Defcon 2, where a small opcode error caused a shutdown of part of the infrastructure, hints that it would be good to have such complex functionalities separated into two parts.": "En résumé, imaginons l'implémentation technique de l'Ethereum d'aujourd'hui comme un ordinateur mondial. Nous avons chaque nœud de réseau composé de deux parties. La première couche est responsable de la Machine Virtuelle Ethereum (EVM), la fonctionnalité réelle de la machine virtuelle ou de la machine complète de Turing, si nous parlons en termes théoriques. Peut-être verrons-nous l'émergence d'alternatives à la machine virtuelle conçue en 2015. Ces alternatives la surpasseront probablement en termes de possibilités de programmation plus abstraites que l'écriture de contrats intelligents en Solidity. Pendant ce temps, les contrats intelligents en Solidity continuent de se sentir à l'aise. Si vous souhaitez écrire une fonctionnalité pour la chaîne principale Ethereum sans créer d'infrastructure supplémentaire sur Ethereum, sans décharger de calculs pour les rendre moins chers, etc., les applications décentralisées que vous pouvez écrire en tant que contrats intelligents peuvent toujours être hébergées dans la blockchain principale d'Ethereum. En même temps, la fonctionnalité de la Beacon Chain a émergé, séparant la logique de consensus entre les validateurs du protocole principal de la machine informatique. Cela permet une flexibilité supplémentaire dans la façon dont le consensus devrait fonctionner et comment il devrait être modifié sans affecter la machine virtuelle elle-même. L'exemple de Shanghai et de Defcon 2, où une petite erreur d'opcode a provoqué l'arrêt d'une partie de l'infrastructure, laisse entendre qu'il serait bon d'avoir de telles fonctionnalités complexes séparées en deux parties.",
  "What's interesting about the Beacon Chain? It is a more complex, comprehensive algorithm for achieving network synchronicity and finalization with the introduction of concepts such as \"epoch,\" and the presence of a ghost living within the network.": "Qu'est-ce qui est intéressant à propos de la Beacon Chain? C'est un algorithme plus complexe et complet pour atteindre la synchronicité et la finalisation du réseau avec l'introduction de concepts tels que \"époque,\" et la présence d'un fantôme vivant dans le réseau.",
  "Lastly, what is important to consider now is that Ethereum is effectively putting an end to homogeneity, to the idea of getting a hundred identical blockchains working with the same virtual machine, where smart contracts written in Solidity can reside. Instead, various projects are proposing their own architectures or the same virtual machine taken beyond the main blockchain's limits. Alternatively, they are trying to build their more specific application, which, at the level of the Beacon Chain's main chain, is a smart contract written in Solidity. This is the current representation of Ethereum, which did not become Ethereum 2.0. It remains the same Ethereum—a project that once started with proof of work + Turing complete machine, transforming into this architecture.": "Enfin, ce qu'il est important de considérer maintenant, c'est qu'Ethereum met effectivement fin à l'homogénéité, à l'idée d'avoir une centaine de blockchains identiques fonctionnant avec la même machine virtuelle, où les contrats intelligents écrits en Solidity peuvent résider. Au lieu de cela, divers projets proposent leurs propres architectures ou la même machine virtuelle poussée au-delà des limites de la blockchain principale. Sinon, ils essaient de construire leur application plus spécifique, qui, au niveau de la chaîne principale de la Beacon Chain, est un contrat intelligent écrit en Solidity. C'est la représentation actuelle d'Ethereum, qui n'est pas devenu Ethereum 2.0. Il reste le même Ethereum - un projet qui a commencé avec la preuve de travail + machine complète de Turing, se transformant en cette architecture.",
  "Now, let's take a look at how Polkadot emerged and evolved over the last 5 years. Polkadot came into existence five years after Ethereum, born out of the team that developed one of the best clients for Ethereum—Parity. Many might remember their web client, which, compared to Geth and other implementations, was probably much more pleasant to work with, at least from personal experience and the experience of colleagues.": "Maintenant, examinons comment Polkadot est apparu et a évolué au cours des 5 dernières années. Polkadot est né cinq ans après Ethereum, issu de l'équipe qui a développé l'un des meilleurs clients pour Ethereum - Parity. Beaucoup se souviendront de leur client web, qui, comparé à Geth et autres implémentations, était probablement beaucoup plus agréable à utiliser, du moins d'après mon expérience personnelle et celle de mes collègues.",
  "In the end, after a couple of months of the relay chain's existence without any decentralized application functionality, without the ability to connect your parachain or L2 network, without user capabilities, the network transitioned from an authority state to proof of stake. This gave developers the ability to upload their runtimes.": "Finalement, après quelques mois d'existence de la chaîne de relais sans aucune fonctionnalité d'application décentralisée, sans la possibilité de connecter votre parachain ou réseau L2, sans capacités utilisateur, le réseau est passé d'un état d'autorité à une preuve d'enjeu. Cela a donné aux développeurs la possibilité de télécharger leurs runtimes.",
  "At this point, it's also interesting to discuss the differences between today's Ethereum and how the central part of Polkadot is structured. From the perspective of the heart, which we've already discussed, the picture will be absolutely the same not only for Ethereum and Polkadot but for any project that wants to be presented as an abstract computing machine. However, from an engineering and architectural standpoint, it's fascinating to observe Beacon Chain & Relay Chain. Here, we have a virtual machine, which has been inherited since 2015, but alternatives are being proposed. In the relay chain, there's the ability to upload your runtime. The runtime is, in fact, your virtual machine. For example, some parachains completely emulate the Ethereum Virtual Machine. It's written as a runtime, meaning you can essentially upload an Ethereum Virtual Machine analog to the parachain level in Polkadot or write more specific logic that works with four or five functions. Recall part one about the ideas— you can write your Swiss Army knife, but it won't require creating the entire infrastructure. You can implement specific functionality with certain functions at the runtime level, put it into the Polkadot relay chain, and the immutability of this runtime will be ensured by Polkadot validators.": "À ce stade, il est également intéressant de discuter des différences entre l'Ethereum d'aujourd'hui et la structure centrale de Polkadot. Du point de vue du cœur, que nous avons déjà discuté, l'image sera absolument la même non seulement pour Ethereum et Polkadot mais pour tout projet qui souhaite être présenté comme une machine informatique abstraite. Cependant, d'un point de vue technique et architectural, il est fascinant d'observer Beacon Chain & Relay Chain. Ici, nous avons une machine virtuelle, qui a été héritée depuis 2015, mais des alternatives sont proposées. Dans la chaîne de relais, il est possible de télécharger votre runtime. Le runtime est en fait votre machine virtuelle. Par exemple, certaines parachains émulent complètement la machine virtuelle Ethereum. Cela est écrit en tant que runtime, ce qui signifie que vous pouvez essentiellement télécharger un analogue de la machine virtuelle Ethereum au niveau de la parachain dans Polkadot ou écrire une logique plus spécifique qui fonctionne avec quatre ou cinq fonctions. Rappelez-vous la première partie sur les idées - vous pouvez écrire votre couteau suisse, mais cela ne nécessitera pas la création de l'infrastructure entière. Vous pouvez implémenter une fonctionnalité spécifique avec certaines fonctions au niveau du runtime, la mettre dans la chaîne de relais Polkadot, et l'immutabilité de ce runtime sera assurée par les validateurs de Polkadot.",
  "What happens next? Over the course of about a year, a layer of parachains begins to form around the relay chain. In terms of Ethereum implementation, you could say that L2 networks are quite similar to parachains. However, there's one interesting cross-network distinction that I find fascinating in Polkadot, and I'm trying to further understand how it will develop—namely, the second layer of validation and data availability checks. After a couple of years, Polkadot takes a shape like this. It's not just a relay chain where proof-of-stake validators protect the runtime of future parachains; an additional and crucial layer of data validation and availability checking emerges from parachains.": "Qu'arrive-t-il ensuite? Au cours d'environ un an, une couche de parachains commence à se former autour de la chaîne de relais. En termes d'implémentation Ethereum, on pourrait dire que les réseaux L2 sont assez similaires aux parachains. Cependant, il y a une distinction intéressante entre les réseaux que je trouve fascinante dans Polkadot, et j'essaie de comprendre comment elle va se développer - à savoir, la deuxième couche de validation et de vérification de la disponibilité des données. Après quelques années, Polkadot prend une forme comme celle-ci. Ce n'est pas seulement une chaîne de relais où les validateurs de preuve d'enjeu protègent le runtime des futurs parachains; une couche supplémentaire et cruciale de validation des données et de vérification de la disponibilité émerge des parachains.",
  "As you look at this diagram, try to notice the analogies that arise and the differences in engineering implementation details. So, what does this represent, and how does this scheme compare with Ethereum? We have an L2 project, in this case, with Polkadot, it's a parachain. A parachain also generates information blocks, which then go to the relay chain to be combined and release a relay chain block as the sum of all headers, headers, and more headers. The parachain collects transactions in a block using collators, which are not involved in validation. They don't stake anything in the relay chain; they only use the runtime, which is in the relay chain. They fetch it, apply it to transactions, perform necessary state transitions, form a block, and, crucially, provide proof of validity—a stamp containing cryptographic proofs that the collator correctly assembled the block. This information goes to the external validation ring of the relay chain. In this ring, there are internal validators of Polkadot—parachain collators. Again, they don't stake anything directly from the relay chain's point of view. Parachain implementations sometimes introduce their consensus among collators, and some don't. For example, in Robonomics, implementing a parachain, we find this paradigm more interesting, less burdensome, and it makes the network simpler while still remaining functionally substantial. Any collator, without reaching consensus with anyone—verified by us—can propose a block and some proof to the external layer. This is precisely why blocks are proposed, proofs of block assembly validity are offered, and there's an external ring. We don't need any consensus from parachain validators. Anyone can generate a block and send it, and if this node of the collator sends incorrect information to the parachain validators on the external ring, the validator at this level will reject it. It won't pass into the central part. But let's say the block was provided correctly by the collator. Our transactions got in; the collator calculated them, applying the runtime stored in the relay chain, executed all state transitions, gathered some proof of validity—validity of the assembled block—and passed it to the external ring of the relay chain. Here, every epoch, which is also part of the finalization, every epoch has validators from the relay chain diverging into parachains. Some of them stay in the center, and the others go to parachains. Their number ranges from 16 to 64 validators, and this figure, I believe, will change in the specification—somewhere more, somewhere less. However, parachain validators re-verify the information from one selected group of validators about everything coming from the collator being correct, that work has been done in accordance with the runtime, and that the proof of validity is indeed valid. The selected segment of relay chain validators who already have something staked respond, or rather, chirp among themselves. They respond to the chosen main block producer of the parachain, so to speak, saying,": "En regardant ce diagramme, essayez de remarquer les analogies qui se présentent et les différences dans les détails de mise en œuvre de l'ingénierie. Alors, que représente cela, et comment ce schéma se compare-t-il à Ethereum? Nous avons un projet L2, dans ce cas, avec Polkadot, c'est une parachain. Une parachain génère également des blocs d'informations, qui vont ensuite à la chaîne de relais pour être combinés et lib��rer un bloc de chaîne de relais comme la somme de tous les en-têtes, en-têtes et plus d'en-têtes. La parachain collecte des transactions dans un bloc en utilisant des collateurs, qui ne sont pas impliqués dans la validation. Ils ne misent rien dans la chaîne de relais; ils utilisent uniquement le runtime, qui se trouve dans la chaîne de relais. Ils le récupèrent, l'appliquent aux transactions, effectuent les transitions d'état nécessaires, forment un bloc et, de manière cruciale, fournissent une preuve de validité - un tampon contenant des preuves cryptographiques que le collateur a correctement assemblé le bloc. Ces informations vont à l'anneau de validation externe de la chaîne de relais. Dans cet anneau, il y a des validateurs internes de Polkadot - les collateurs de parachain. Encore une fois, ils ne misent rien directement du point de vue de la chaîne de relais. Les implémentations de parachain introduisent parfois leur consensus entre les collateurs, et certaines ne le font pas. Par exemple, dans Robonomics, en implémentant une parachain, nous trouvons ce paradigme plus intéressant, moins contraignant, et cela rend le réseau plus simple tout en restant fonctionnellement substantiel. Tout collateur, sans consensus avec quiconque - vérifié par nous - peut proposer un bloc et une preuve à la couche externe. C'est précisément pourquoi des blocs sont proposés, des preuves de validité de l'assemblage du bloc sont offertes, et il y a un anneau externe. Nous n'avons pas besoin de consensus des validateurs de parachain. N'importe qui peut générer un bloc et l'envoyer, et si ce nœud du collateur envoie des informations incorrectes aux validateurs de parachain sur l'anneau externe, le validateur à ce niveau le rejettera. Il ne passera pas dans la partie centrale. Mais disons que le bloc a été fourni correctement par le collateur. Nos transactions sont entrées; le collateur les a calculées, en appliquant le runtime stocké dans la chaîne de relais, a exécuté toutes les transitions d'état, a rassemblé une preuve de validité - la validité du bloc assemblé - et l'a transmise à l'anneau externe de la chaîne de relais. Ici, à chaque époque, qui fait également partie de la finalisation, chaque époque a des validateurs de la chaîne de relais divergeant vers les parachains. Certains restent au centre, et d'autres vont vers les parachains. Leur nombre varie de 16 à 64 validateurs, et ce chiffre, je crois, changera dans la spécification - quelque part plus, quelque part moins. Cependant, les validateurs de parachain révérifient les informations d'un groupe sélectionné de validateurs sur tout ce qui vient du collateur comme étant correct, que le travail a été fait conformément au runtime, et que la preuve de validité est effectivement valide. Le segment sélectionné des validateurs de la chaîne de relais qui ont déjà misé répondent, ou plutôt, gazouillent entre eux. Ils répondent au principal producteur de blocs choisi de la parachain, pour ainsi dire, en disant,",
  "\"Yes, we agree. There are no problems. You can carry it through the entire external ring inside.\"": "\"Oui, nous sommes d'accord. Il n'y a pas de problèmes. Vous pouvez le faire passer à travers tout l'anneau externe à l'intérieur.\"",
  "And thus, almost all information formed on the parachain collators, with verification on the external ring, enters the internal one. The lower part, not that it's physically at the bottom, still constitutes the external ring—data availability. Data starts to be checked at this stage, meaning that on the external ring, not only the correctness of block assembly is verified, but the process of preparing for distribution within the Polkadot network begins, ensuring that the block information will not be lost in the future. Here, precisely, is what I mentioned in the second part about chunks, like CD RW. At this stage of block preparation for transfer to the internal ring, the data availability layer is formed as a service, something that is currently also attempted by some projects in Ethereum. Some projects put additional redundant information directly into smart contracts, necessary for checking what is happening on the L2 layer and, if necessary, slashing or punishing those who did it incorrectly. It's impossible to overcome the external ring without distributing block information and without rechecking dozens of nodes with stakes laid down on the assumption that the runtime must work correctly.": "Et ainsi, presque toutes les informations formées sur les collecteurs de parachain, avec vérification sur l'anneau externe, entrent dans l'anneau interne. La partie inférieure, non pas qu'elle soit physiquement en bas, constitue toujours l'anneau externe - la disponibilité des données. Les données commencent à être vérifiées à ce stade, ce qui signifie que sur l'anneau externe, non seulement la correction de l'assemblage des blocs est vérifiée, mais le processus de préparation à la distribution au sein du réseau Polkadot commence, garantissant que les informations de bloc ne seront pas perdues à l'avenir. Ici, précisément, est ce que j'ai mentionné dans la deuxième partie à propos des morceaux, comme CD RW. À ce stade de la préparation du bloc pour le transfert vers l'anneau interne, la couche de disponibilité des données est formée en tant que service, quelque chose qui est actuellement également tenté par certains projets dans Ethereum. Certains projets ajoutent des informations redondantes supplémentaires directement dans les contrats intelligents, nécessaires pour vérifier ce qui se passe sur la couche L2 et, si nécessaire, punir ceux qui l'ont fait incorrectement. Il est impossible de contourner l'anneau externe sans distribuer les informations de bloc et sans re-vérifier des dizaines de nœuds avec des enjeux posés sur l'hypothèse que le runtime doit fonctionner correctement.",
  "Thus, information that has passed through the external ring is already quite trustworthy, probably yes, you can say that, and on the internal ring, work is mainly done not with parachain blocks, but their block headers are collected into one big header. That is, from many headers, one header of a relay chain block is assembled—a mechanism of linking in Shared Security, as mentioned in Polkadot, which ensures the security of parachains. One could say that parachains are validated and reach a state where the service exists in a distributed decentralized form on the external ring. In the internal ring, the information that has entered attempts to come together in one hyperblock, which should precisely link everything together. There are no calculations happening there; there is no recalculation of absolutely everything. The assembly of the final block takes place, so to speak, in the current iteration of the world computer, to put a point on the question of whether the transaction has passed in a particular parachain. We must assemble a hyperblock that contains not all the information from the parachains but gathers all the headers verified on the external ring of parachains into one large block. And thus, our world computer in Polkadot operates.": "Ainsi, les informations qui ont traversé l'anneau externe sont déjà assez fiables, probablement oui, vous pouvez le dire, et sur l'anneau interne, le travail est principalement fait non pas avec les blocs de parachain, mais leurs en-têtes de bloc sont collectés en un seul grand en-tête. C'est-à-dire que, à partir de nombreux en-têtes, un en-tête d'un bloc de chaîne de relais est assemblé - un mécanisme de liaison dans Shared Security, comme mentionné dans Polkadot, qui garantit la sécurité des parachains. On pourrait dire que les parachains sont validés et atteignent un état où le service existe sous une forme décentralisée distribuée sur l'anneau externe. Dans l'anneau interne, les informations qui sont entrées tentent de se rassembler dans un hyperbloc, qui devrait précisément tout relier. Il n'y a pas de calculs qui se passent là-bas; il n'y a pas de recalcul de tout absolument. L'assemblage du bloc final a lieu, pour ainsi dire, dans l'itération actuelle de l'ordinateur mondial, pour mettre un point sur la question de savoir si la transaction a passé dans une parachain particulière. Nous devons assembler un hyperbloc qui ne contient pas toutes les informations des parachains mais rassemble tous les en-têtes vérifiés sur l'anneau externe des parachains en un seul grand bloc. Et ainsi, notre ordinateur mondial dans Polkadot fonctionne.",
  "Let's take another look at these two schemes together: relay chain, beacon chain, runtime, secured by proof of stake, where someone stakes their funds to validate that they will always perform their work correctly. There's a virtual machine where you can also stake your funds, and if you perform any computation or state transition not in accordance with the Ethereum Virtual Machine's specification, you'll be penalized.": "Jetons un autre coup d'œil à ces deux schémas ensemble : chaîne de relais, chaîne de balise, exécution, sécurisée par la preuve d'enjeu, où quelqu'un mise ses fonds pour valider qu'ils effectueront toujours correctement leur travail. Il y a une machine virtuelle où vous pouvez également miser vos fonds, et si vous effectuez une quelconque computation ou transition d'état non conforme à la spécification de la Machine Virtuelle Ethereum, vous serez pénalisé.",
  "In Polkadot, there's an additional external layer, which seems to be one of the main advantages, such pleasant perks of the engineering implementation that, in my opinion, should be present here. It should appear between L2 networks and the beacon chain, which exists in Ethereum. By the way, some say that the term \"beacon chain\" is dying out again and is misunderstood, but I really like to use it in analogy with the \"relay chain,\" a term from Ethereum's roadmap.": "Dans Polkadot, il y a une couche externe supplémentaire, qui semble être l'un des principaux avantages, de tels avantages agréables de l'implémentation technique qui, à mon avis, devraient être présents ici. Elle devrait apparaître entre les réseaux L2 et la chaîne de balise, qui existe dans Ethereum. Au fait, certains disent que le terme \"chaîne de balise\" est en train de disparaître à nouveau et est mal compris, mais j'aime vraiment l'utiliser en analogie avec la \"chaîne de relais,\" un terme du plan de route d'Ethereum.",
  "And perhaps one more interesting story in this part of the lecture: so far, we can hardly imagine proper cross-chain messages between L2 networks in Ethereum. Maybe I missed something in the papers, but when you don't have an external ring and issues like collators, paravalidators, and data availability services are not resolved, thinking about how two L2 layers can communicate is challenging. Yet, in Polkadot, it exists. Even horizontally, through the relay chain, meaning directly, one can send a transaction securely from one parachain to another, without trusting any bridges between these two parachains. This is another crucial functionality that will likely need to be implemented at the level of connecting L2 networks. Smart contracts in Ethereum communicate well. We have created many chains of linked smart contracts, where one triggers another. With this, there is no problem. But when we say that almost all applications are moving to the L2 layer in a heterogeneous network, I hear that if you live in a specific area, you won't be able to get out. That's not the case at the level of parachains and implementation in Polkadot. Both architectures are worth watching, as, in my opinion, the engineering implementation follows the mainstream path of becoming a global computer. They differ slightly, but there are many similarities. There's an enormous amount of engineering work everywhere. As we see, human civilization, in the form of a multitude of researchers, engineers, and growing developers with significant resources for further development, is moving roughly in the same direction from the smallest early stage to probably some future establishment of the world's computer, all on the same tracks.": "Et peut-être une autre histoire intéressante dans cette partie du cours : jusqu'à présent, nous pouvons à peine imaginer des messages inter-chaînes appropriés entre les réseaux L2 dans Ethereum. Peut-être ai-je manqué quelque chose dans les documents, mais lorsque vous n'avez pas d'anneau externe et que des problèmes tels que les collecteurs, les paravalidateurs et les services de disponibilité des données ne sont pas résolus, penser à comment deux couches L2 peuvent communiquer est un défi. Pourtant, dans Polkadot, cela existe. Même horizontalement, à travers la chaîne de relais, ce qui signifie directement, on peut envoyer une transaction en toute sécurité d'une parachain à une autre, sans avoir à faire confiance à des ponts entre ces deux parachains. Il s'agit d'une autre fonctionnalité cruciale qui devra probablement être mise en œuvre au niveau de la connexion des réseaux L2. Les contrats intelligents dans Ethereum communiquent bien. Nous avons créé de nombreuses chaînes de contrats intelligents liés, où l'un déclenche l'autre. Avec cela, il n'y a pas de problème. Mais lorsque nous disons que presque toutes les applications passent à la couche L2 dans un réseau hétérogène, j'entends que si vous vivez dans une zone spécifique, vous ne pourrez pas en sortir. Ce n'est pas le cas au niveau des parachains et de la mise en œuvre dans Polkadot. Les deux architectures valent la peine d'être surveillées, car, à mon avis, la mise en œuvre de l'ingénierie suit le chemin dominant de devenir un ordinateur mondial. Elles diffèrent légèrement, mais il y a de nombreuses similitudes. Il y a un énorme travail d'ingénierie partout. Comme nous le voyons, la civilisation humaine, sous la forme d'une multitude de chercheurs, d'ingénieurs et de développeurs en pleine croissance avec des ressources importantes pour le développement ultérieur, se déplace grossièrement dans la même direction depuis les premiers stades les plus petits jusqu'à probablement l'établissement futur de l'ordinateur mondial, tous sur les mêmes pistes.",
  "Part 1: The Idea of a World Computer": "Partie 1 : L'idée d'un ordinateur mondial",
  "This is the first part of a four-part lecture titled \"World Computer in Your Home.\" In the first part, titled \"The Idea of a World Computer,\" I want to analyze and share my own reflections that have, in a broader historical context, gathered around the hashtag \"world computer.\"": "C'est la première partie d'une conférence en quatre parties intitulée \"Ordinateur mondial chez vous.\" Dans la première partie, intitulée \"L'idée d'un ordinateur mondial,\" je veux analyser et partager mes propres réflexions qui, dans un contexte historique plus large, se sont rassemblées autour du hashtag \"ordinateur mondial.\"",
  "To begin with, let's try to gather a generalized understanding of what a world computer is, without delving into terminology or specific technical details. If you take your mobile phone in hand and look at the icons, you can notice that practically every application on the phone has two major segments or areas of operation.": "Pour commencer, essayons de rassembler une compréhension généralisée de ce qu'est un ordinateur mondial, sans entrer dans les détails terminologiques ou techniques spécifiques. Si vous prenez votre téléphone portable en main et regardez les icônes, vous pouvez remarquer que pratiquement chaque application sur le téléphone a deux segments principaux ou domaines d'opération.",
  "The first is the local part, meaning, for example, your calculator or notes application. This is a completely local application that requires almost no external communication. Although even applications like the notes app on an iPhone are a bit more than that, let's focus on the more austere Open Source side of applications for Android phones, so to speak.": "Le premier est la partie locale, ce qui signifie, par exemple, votre application de calculatrice ou de notes. Il s'agit d'une application complètement locale qui ne nécessite presque aucune communication externe. Bien que même des applications comme l'application de notes sur un iPhone soient un peu plus que cela, concentrons-nous sur le côté plus austère des applications Open Source pour les téléphones Android, pour ainsi dire.",
  "The second part requires cloud infrastructure, and here, when the question of cloud infrastructure arises, a multitude of quite complex stories begins: who owns this cloud infrastructure, what capabilities do developers have to add features to an application, and in general, how does the user own this application? What capabilities and responsibilities does the user have when dealing with an application that exists not only on their phone but also in some infrastructure beyond their pocket or palm? The world computer is precisely one example of how the developer community responds to these obvious questions. Obvious questions about creating higher-quality applications for your mobile phone, laptop, server, and any other smart device that needs to connect to the network and obtain knowledge from there.": "La deuxième partie nécessite une infrastructure cloud, et ici, lorsque la question de l'infrastructure cloud se pose, une multitude d'histoires assez complexes commence : qui possède cette infrastructure cloud, quelles capacités les développeurs ont pour ajouter des fonctionnalités à une application, et en général, comment l'utilisateur possède-t-il cette application ? Quelles capacités et responsabilités l'utilisateur a-t-il lorsqu'il traite avec une application qui existe non seulement sur son téléphone mais également dans une infrastructure au-delà de sa poche ou de sa paume ? L'ordinateur mondial est précisément un exemple de la manière dont la communauté des développeurs répond à ces questions évidentes. Des questions évidentes sur la création d'applications de meilleure qualité pour votre téléphone portable, votre ordinateur portable, votre serveur et tout autre appareil intelligent qui doit se connecter au réseau et obtenir des connaissances à partir de là.",
  "The world computer is, accordingly, the same cloud, the same infrastructure that exists on the internet, with which developers can interact and publish their applications. As a user, you can install, download, and run them on your PC. However, with one interesting, crucial feature: no one actually owns the infrastructure or cloud of the world computer. There is no specific company, jurisdiction, or individual on Earth who can determine and say whether you can publish your application there or not, whether you have the right to access this world computer infrastructure to receive the provided service. Therefore, the world computer is a cloud in which any developer can place their application, and any user with access solely to the internet network and not to a specific IP address behind a firewall can use the application by paying for computations from their pocket.": "L'ordinateur mondial est, en conséquence, le même cloud, la même infrastructure qui existe sur internet, avec laquelle les développeurs peuvent interagir et publier leurs applications. En tant qu'utilisateur, vous pouvez les installer, les télécharger et les exécuter sur votre PC. Cependant, avec une fonctionnalité intéressante et cruciale : personne ne possède réellement l'infrastructure ou le cloud de l'ordinateur mondial. Il n'y a pas de société spécifique, de juridiction ou d'individu sur Terre qui peut déterminer et dire si vous pouvez publier votre application là-bas ou non, si vous avez le droit d'accéder à cette infrastructure d'ordinateur mondial pour recevoir le service fourni. Par conséquent, l'ordinateur mondial est un cloud dans lequel tout développeur peut placer son application, et tout utilisateur ayant uniquement accès au réseau internet et non à une adresse IP spécifique derrière un pare-feu peut utiliser l'application en payant pour les calculs à partir de leur poche.",
  "Here's the story in a generalized format. There is no mention of \"blockchain,\" no mention of \"smart contracts,\" but these concepts are underneath. Let's still acknowledge: a world computer is a cloud infrastructure that is sovereign, owned by no one, allowing each developer to avoid censorship from platform owners offering app downloads. It also prevents users from being in a situation where they don't understand how an app works on their phone. In my opinion, these are important and cool features deserving respect and attention from those who want to create more futuristic, cooler applications. This is precisely what my team and I have been doing for eight years, choosing perhaps the most challenging area - creating services for robotics on the world computer, which seems to be right outside your door, quietly scraping and saying, \"I want to come into your home.\"": "Voici l'histoire sous une forme généralisée. Il n'est pas question de \"blockchain,\" pas de mention de \"smart contracts,\" mais ces concepts sont en dessous. Reconnaissons tout de même : un ordinateur mondial est une infrastructure cloud souveraine, appartenant à personne, permettant à chaque développeur d'éviter la censure des propriétaires de plateformes proposant des téléchargements d'applications. Cela empêche également les utilisateurs de se retrouver dans une situation où ils ne comprennent pas comment fonctionne une application sur leur téléphone. À mon avis, ce sont des fonctionnalités importantes et intéressantes qui méritent le respect et l'attention de ceux qui veulent créer des applications plus futuristes et plus cool. C'est précisément ce que mon équipe et moi faisons depuis huit ans, en choisissant peut-être le domaine le plus difficile - la création de services pour la robotique sur l'ordinateur mondial, qui semble être juste devant votre porte, grattant silencieusement et disant : \"Je veux entrer chez vous.\"",
  "Now, let's move on to a timeline and look through my personal experience at how the concept of the world computer evolved. First, let's go back to 2012. This year is notable because Bitcoin already exists as a global internet service, accessible to everyone, not owned by anyone specific. By 2012, besides Bitcoin, its so-called forks start appearing. One of the most well-known is Litecoin.": "Maintenant, passons à une chronologie et examinons mon expérience personnelle de l'évolution du concept de l'ordinateur mondial. Tout d'abord, revenons à 2012. Cette année est notable car Bitcoin existe déjà en tant que service internet mondial, accessible à tous, n'appartenant à personne en particulier. En 2012, en plus de Bitcoin, ses prétendues forks commencent à apparaître. L'un des plus connus est Litecoin.",
  "Litecoin is notable because its developer did the most important work for the entire community. He collected the most crucial configurable variables or constants from different parts of Bitcoin's code after the protocol was launched. This allowed specifying block generation time, block reward, and, statistically, Litecoin is more frequently forked than Bitcoin. When we say \"fork of Bitcoin,\" I can confidently say that, in most cases, it will be a fork of Litecoin.": "Litecoin est notable car son développeur a réalisé le travail le plus important pour l'ensemble de la communauté. Il a collecté les variables ou constantes configurables les plus cruciales de différentes parties du code de Bitcoin après le lancement du protocole. Cela a permis de spécifier le temps de génération de bloc, la récompense de bloc, et, statistiquement, Litecoin est plus fréquemment forké que Bitcoin. Lorsque nous disons \"fork de Bitcoin,\" je peux affirmer avec confiance que, dans la plupart des cas, il s'agira d'un fork de Litecoin.",
  "Namecoin is also a fork of Bitcoin, and if memory serves me right, it was initially a direct fork from Bitcoin, and then Litecoin appeared a few months later in 2011. However, Namecoin turned out to be a bit different, paving the way for many developers mentally on where ideas underlying Bitcoin's internet service could evolve. Namecoin went beyond being just a coin; it could store identity as a database and allow an internet service to place your domain name. This was the first example where an internet service spawned from Bitcoin could have a different nature, not just like Litecoin with fast transactions but the ability to pay for storing certain information with its internal currency, an internal token. For example, the name in the .bit domain zone.": "Namecoin est également un fork de Bitcoin, et si ma mémoire est bonne, c'était initialement un fork direct de Bitcoin, puis Litecoin est apparu quelques mois plus tard en 2011. Cependant, Namecoin s'est avéré être un peu différent, ouvrant la voie à de nombreux développeurs sur la manière dont les idées sous-jacentes au service Internet de Bitcoin pourraient évoluer. Namecoin est allé au-delà d'être juste une monnaie; il pouvait stocker l'identité comme une base de données et permettre à un service Internet de placer votre nom de domaine. C'était le premier exemple où un service Internet issu de Bitcoin pouvait avoir une nature différente, pas seulement comme Litecoin avec des transactions rapides mais la capacité de payer pour stocker certaines informations avec sa monnaie interne, un jeton interne. Par exemple, le nom dans la zone de domaine .bit.",
  "Developers worldwide were experimenting with Bitcoin, mostly creating forks, making them faster, cheaper electronic cash. Alongside this, the first services appeared, seeing opportunities not only in financial applications but also in cross-industrial applications in other areas like Namecoin. Namecoin provided the first globally accessible and unowned internet service through which you could launch your website without being under the jurisdiction of a specific organization but within a distributed globally accessible network. This moment is crucial for us to move on to the early precursors of the world computer's ideas.": "Les développeurs du monde entier expérimentaient avec Bitcoin, créant principalement des forks, les rendant plus rapides, moins chers en espèces électroniques. Parallèlement à cela, les premiers services sont apparus, voyant des opportunités non seulement dans les applications financières mais aussi dans les applications interindustrielles dans d'autres domaines comme Namecoin. Namecoin a fourni le premier service Internet accessible et non possédé à l'échelle mondiale à travers lequel vous pourriez lancer votre site Web sans être sous la juridiction d'une organisation spécifique mais au sein d'un réseau accessible mondialement distribué. Ce moment est crucial pour passer aux précurseurs précoces des idées de l'ordinateur mondial.",
  "The first practical ideas of the world computer emerged in 2014, two years after the appearance of the first wave of Bitcoin forks and the creation of meaningful services dedicated not only to electronic cash but also exploring broader themes. We encounter ideas that precede the launch of Ethereum.": "Les premières idées pratiques de l'ordinateur mondial ont émergé en 2014, deux ans après l'apparition de la première vague de forks de Bitcoin et la création de services significatifs dédiés non seulement à la monnaie électronique mais explorant également des thèmes plus larges. Nous rencontrons des idées qui précèdent le lancement d'Ethereum.",
  "In 2014, at several meetups worldwide, in Miami and, I believe, in Europe, Vitalik Buterin articulated sensible ideas. He suggests that we can develop not just a set of internet services that essentially function as a Swiss army knife, right? We can develop a virtual machine. Those with an education in Computer Science probably remember what an infinite tape is in Turing machines, and if we go back to the theory of computational machines, we probably recall the theoretical origins of creating our personal computers, essentially the server infrastructure we have today. It's interesting that, fifty years after the development of von Neumann architecture and the complete Turing machine theory, and with the dawn of internet technologies only by 2014, and only after experiments with Bitcoin, the first idea emerges on our planet of creating a fully virtual computational machine based on the same theory that has been tested in the computer science industry for the past 50 years. The mechanics are the same as when creating any personal computer or server in a data center, but based more on achievements in internet technologies and the achievements of the world that will later be called Web3.": "En 2014, lors de plusieurs rencontres dans le monde entier, à Miami et, je crois, en Europe, Vitalik Buterin a articulé des idées sensées. Il suggère que nous pouvons développer non seulement un ensemble de services Internet qui fonctionnent essentiellement comme un couteau suisse, n'est-ce pas? Nous pouvons développer une machine virtuelle. Ceux qui ont une formation en informatique se souviennent probablement de ce qu'est une bande infinie dans les machines de Turing, et si nous revenons à la théorie des machines computationnelles, nous nous souvenons probablement des origines théoriques de la création de nos ordinateurs personnels, essentiellement l'infrastructure serveur que nous avons aujourd'hui. Il est intéressant de noter que, cinquante ans après le développement de l'architecture de von Neumann et de la théorie complète de la machine de Turing, et avec l'avènement des technologies Internet seulement en 2014, et seulement après des expériences avec Bitcoin, la première idée émerge sur notre planète de créer une machine computationnelle entièrement virtuelle basée sur la même théorie qui a été testée dans l'industrie de l'informatique depuis les 50 dernières années. Les mécanismes sont les mêmes que lors de la création de tout ordinateur personnel ou serveur dans un centre de données, mais basés davantage sur les réalisations dans les technologies Internet et les réalisations du monde qui seront plus tard appelées Web3.",
  "Ethereum itself is not a Swiss army knife, not a set of specific internet services. It is, in the direct sense, a cloud, a computational machine. What lies at its core, I will tell you in the next lecture. Here, the most important thing for us is to focus on where the idea of Ethereum began. It started with the realization that, in two years, dozens of different internet services were invented that were interesting because they were globally accessible, available without censorship for developers to deploy. Users could use them only with an internal currency. However, what was not liked in all these concepts was that almost every interesting service required its own massive distributed infrastructure. Unlike familiar internet services, you couldn't just launch your globally accessible infrastructure if you were a very small person or a small team because such a network would be vulnerable, and the service itself would become unsafe. To overcome the problems that were side effects or negative externalities of creating your own globally accessible sovereign internet service, the concept of Ethereum emerged. Ethereum, as a full-fledged cloud capable of handling any formalized computation, allows you to write your program code, a complete program essentially, and run it in the same blockchain alongside hundreds of other applications. This possibility, sounding from the small stages of 2014, naturally captivated the minds of many and seemed absolutely logical for someone with a basic education in Computer Science. If you could understand what Turing completeness was by 2014, if you could envision the historical theory of creating a personal computer, you would definitely not overlook the Ethereum whitepaper and would say that this is exactly what the entire developer community needs.": "Ethereum lui-même n'est pas un couteau suisse, pas un ensemble de services internet spécifiques. C'est, dans le sens direct, un nuage, une machine de calcul. Ce qui se trouve à son cœur, je vous le dirai dans la prochaine conférence. Ici, la chose la plus importante pour nous est de nous concentrer sur l'endroit où l'idée d'Ethereum a commencé. Elle a commencé avec la réalisation qu'en deux ans, des dizaines de services internet différents ont été inventés qui étaient intéressants parce qu'ils étaient accessibles mondialement, disponibles sans censure pour les développeurs à déployer. Les utilisateurs pouvaient les utiliser uniquement avec une monnaie interne. Cependant, ce qui n'était pas aimé dans tous ces concepts était que presque chaque service intéressant nécessitait son propre infrastructure distribuée massive. Contrairement aux services internet familiers, vous ne pouviez pas simplement lancer votre infrastructure accessible mondialement si vous étiez une personne très petite ou une petite équipe car un tel réseau serait vulnérable, et le service lui-même deviendrait dangereux. Pour surmonter les problèmes qui étaient des effets secondaires ou des externalités négatives de la création de votre propre service internet souverain accessible mondialement, le concept d'Ethereum a émergé. Ethereum, en tant que nuage à part entière capable de gérer toute computation formalisée, vous permet d'écrire votre code de programme, un programme complet essentiellement, et de l'exécuter dans la même blockchain aux côtés de centaines d'autres applications. Cette possibilité, émanant des petites étapes de 2014, a naturellement captivé l'esprit de nombreux et semblait absolument logique pour quelqu'un avec une éducation de base en informatique. Si vous pouviez comprendre ce qu'était la complétude de Turing en 2014, si vous pouviez envisager la théorie historique de la création d'un ordinateur personnel, vous ne manqueriez certainement pas le livre blanc d'Ethereum et diriez que c'est exactement ce dont toute la communauté de développeurs a besoin.",
  "I believe the year 2014 and Ethereum mark the first, though not explicitly named, instances of the concept of a global computer. It started with the idea that we don't need a Swiss knife; instead, we need infrastructure or a universal cloud that addresses global-level security challenges. Developers, at a low cost, should be able to deploy their applications there without concerning themselves with issues like securing the network or creating a network of providers for this computer or your specific internet service.": "Je crois que l'année 2014 et Ethereum marquent les premières, bien que non explicitement nommées, instances du concept d'un ordinateur mondial. Tout a commencé avec l'idée que nous n'avons pas besoin d'un couteau suisse; au lieu de cela, nous avons besoin d'une infrastructure ou d'un nuage universel qui répond aux défis de sécurité de niveau mondial. Les développeurs, à faible coût, devraient pouvoir déployer leurs applications là-bas sans se soucier de problèmes tels que la sécurisation du réseau ou la création d'un réseau de fournisseurs pour cet ordinateur ou votre service internet spécifique.",
  "In 2015, Ethereum was effectively launched. From that moment onwards, even until 2020, I haven't encountered significant counterarguments against the idea of creating not just specific internet services but embracing and developing the concept of a virtual computer, virtual server, cloud, or a global computer, as I prefer to call it.": "En 2015, Ethereum a été effectivement lancé. À partir de ce moment-là, même jusqu'en 2020, je n'ai pas rencontré de contre-arguments significatifs contre l'idée de créer non seulement des services internet spécifiques mais d'embrasser et de développer le concept d'un ordinateur virtuel, d'un serveur virtuel, d'un nuage, ou d'un ordinateur mondial, comme je préfère l'appeler.",
  "Various variations emerge, perhaps some remember the then-popular EOS suggesting a slightly different consumption paradigm. Despite my personal aversion to that project, with its 21st validator and all, it seemed sufficient for many. But it introduced the idea that owning tokens grants you a portion of bandwidth, which, in the realm of Robonomics architecture, remains interesting to me to this day.": "Diverses variations émergent, peut-être que certains se souviennent de l'EOS alors populaire suggérant un paradigme de consommation légèrement différent. Malgré mon aversion personnelle pour ce projet, avec ses 21 validateurs et tout, il semblait suffisant pour beaucoup. Mais il a introduit l'idée que posséder des jetons vous accorde une partie de la bande passante, ce qui, dans le domaine de l'architecture Robonomics, reste intéressant pour moi à ce jour.",
  "Simultaneously, other ideas on how to modernize the Ethereum network arise. Projects like Definity, Solana, and others come into play. Around the same time, Gavin Wood introduces Polkadot, who assisted Vitalik in creating Ethereum. From a multitude of technological projects between 2015 and 2020, we move from a race to create individual internet service variants to witnessing, on a communication protocol level, the emergence of something like Ethereum killers. Many projects started under this slogan, taking the idea of a unified cloud for multiple internet services and modifying some aspects. For instance, EOS proposed an alternative utilization scheme, where only token-backed ownership allowed access to bandwidth. There were projects where the programming language for writing code was more interesting. For example, during a hackathon for BMW, when we won with an implementation on Ethereum, the automaker immediately stated that we wouldn't go any further unless we had formally verified contracts, which was impossible to achieve on Ethereum at that time.": "Simultanément, d'autres idées sur la façon de moderniser le réseau Ethereum émergent. Des projets comme Definity, Solana et d'autres entrent en jeu. Au même moment, Gavin Wood introduit Polkadot, qui a aidé Vitalik à créer Ethereum. D'une multitude de projets technologiques entre 2015 et 2020, nous passons d'une course pour créer des variantes de services Internet individuels à la constatation, au niveau du protocole de communication, de l'émergence de quelque chose comme des tueurs d'Ethereum. De nombreux projets ont commencé sous ce slogan, reprenant l'idée d'un cloud unifié pour plusieurs services Internet et modifiant certains aspects. Par exemple, EOS a proposé un schéma d'utilisation alternatif, où seule la propriété adossée à des jetons permettait l'accès à la bande passante. Il y avait des projets où le langage de programmation pour écrire du code était plus intéressant. Par exemple, lors d'un hackathon pour BMW, lorsque nous avons gagné avec une implémentation sur Ethereum, le constructeur automobile a immédiatement déclaré que nous n'irions pas plus loin à moins que nous n'ayons des contrats formellement vérifiés, ce qui était impossible à réaliser sur Ethereum à l'époque.",
  "At this moment, as you read about the ideas of Eternity and other networks, you may think, \"I should try working with them too.\" Service developers understood this, as did, as I mentioned, projects like Definity, which recently launched the World Computer and is gaining traction. Simultaneously, the idea of Polkadot emerges as a heterogeneous multi-chain framework. Ethereum, around the mid-2010s, also received a roadmap for scalability and development. By 2024, almost all concepts converge on the idea of having not just one database or blockchain but a multitude. Various transaction processing methods, two-layer consensus algorithms, optimistic majority approaches, and a plethora of technical implementation variations emerge, all aiming at the same global computer concept.": "À ce moment, alors que vous lisez sur les idées d'Éternité et d'autres réseaux, vous pourriez penser, \"Je devrais essayer de travailler avec eux aussi.\" Les développeurs de services ont compris cela, tout comme, comme je l'ai mentionné, des projets comme Definity, qui a récemment lancé l'ordinateur mondial et gagne du terrain. Simultanément, l'idée de Polkadot émerge comme un cadre multi-chaînes hétérogène. Ethereum, vers le milieu des années 2010, a également reçu une feuille de route pour la scalabilité et le développement. D'ici 2024, presque tous les concepts convergent vers l'idée de ne pas avoir seulement une base de données ou une blockchain mais une multitude. Diverses méthodes de traitement des transactions, des algorithmes de consensus à deux couches, des approches majoritaires optimistes et une pléthore de variations d'implémentation technique émergent, tous visant le même concept d'ordinateur mondial.",
  "Let's now go through a timeline snapshot:": "Voyons maintenant un instantané de la chronologie:",
  "**2009-2012**: Emergence of the first globally accessible internet service for electronic cash - Bitcoin.": "**2009-2012**: Émergence du premier service Internet accessible mondialement pour l'argent électronique - Bitcoin.",
  "**Early 2012**: The first fork war occurs, with projects emerging to replicate similar services. Some multi-billion projects create their forks. Simultaneously, projects like Namecoin propose interesting ideas.": "**Début 2012**: La première guerre des forks se produit, avec des projets émergeant pour reproduire des services similaires. Certains projets de plusieurs milliards créent leurs forks. Simultanément, des projets comme Namecoin proposent des idées intéressantes.",
  "**2014**: The concept of a world computer emerges, requiring a deep understanding of computer science theory and immersion in Bitcoin's development.": "**2014**: Le concept d'un ordinateur mondial émerge, nécessitant une compréhension approfondie de la théorie de l'informatique et une immersion dans le développement de Bitcoin.",
  "**2015-2020**: The concept moves from theory to practice. Modifications and variations of Ethereum arise, introducing different ideas with varying degrees of quality. The term \"World Computer\" became established.": "**2015-2020**: Le concept passe de la théorie à la pratique. Des modifications et des variations d'Ethereum émergent, introduisant différentes idées avec des degrés de qualité variables. Le terme \"ordinateur mondial\" s'est établi.",
  "**2024**: We reach the World Computer, a term now well-established, marking the transition from a simple calculator on your phone to a globally accessible institution. The idea of the World Computer encompasses future money, programming money, storage for identification records, and important documents.": "**2024**: Nous atteignons l'ordinateur mondial, un terme désormais bien établi, marquant la transition d'une simple calculatrice sur votre téléphone à une institution accessible mondialement. L'idée de l'ordinateur mondial englobe l'argent futur, la programmation monétaire, le stockage des enregistrements d'identification et des documents importants.",
  "In conclusion, from a simple calculator to a globally accessible institution, the idea of the World Computer has evolved. It's seen as a place for the future of money and the storage of vital records. The concept of a World Computer has progressed from theoretical discussions to practical engineering implementations. In the next lecture, the discussion will delve into what a World Computer actually represents. It is fundamentally a state transition function, a concept to be explored further in the upcoming lecture, emphasizing its importance and the need to safeguard it.": "En conclusion, d'une simple calculatrice à une institution accessible mondialement, l'idée de l'ordinateur mondial a évolué. Il est considéré comme un lieu pour l'avenir de l'argent et le stockage de documents vitaux. Le concept d'un ordinateur mondial est passé de discussions théoriques à des mises en œuvre d'ingénierie pratiques. Dans la prochaine conférence, la discussion portera sur ce que représente réellement un ordinateur mondial. Il s'agit fondamentalement d'une fonction de transition d'état, un concept à explorer davantage dans la prochaine conférence, en soulignant son importance et la nécessité de le protéger.",
  "Part 2: The Heart of the World Computer": "Partie 2 : Le cœur de l'ordinateur mondial",
  "What lies at the core of projects like Ethereum or Polkadot, or any other web3 project claiming the title of the world computer, and why does the comparison with the heart in the human body fit so well into the abstract architecture of the world computer?": "Qu'est-ce qui se trouve au cœur de projets comme Ethereum ou Polkadot, ou tout autre projet web3 revendiquant le titre d'ordinateur mondial, et pourquoi la comparaison avec le cœur dans le corps humain s'intègre si bien dans l'architecture abstraite de l'ordinateur mondial?",
  "Let's try to understand these questions in this part of the lecture, and to begin with, we'll have to break the chains of Bitcoin maximalists a bit. Most likely, you've already read one or several popular science articles dedicated to Bitcoin in your life, and the main thing that is practically noted everywhere is the three main advantages of Bitcoin as electronic cash:": "Essayons de comprendre ces questions dans cette partie du cours, et pour commencer, nous devrons un peu briser les chaînes des maximalistes de Bitcoin. Il est très probable que vous ayez déjà lu un ou plusieurs articles de vulgarisation scientifique dédiés à Bitcoin dans votre vie, et la principale chose qui est pratiquement notée partout est les trois principaux avantages de Bitcoin en tant que monnaie électronique :",
  "Censorship resistance": "Résistance à la censure",
  "Immutability of data stored in the Bitcoin blockchain": "Immutabilité des données stockées dans la blockchain Bitcoin",
  "Transparency of transactions": "Transparence des transactions",
  "Let's quickly go through each of these properties, and most importantly, at the end, we'll need to step back a bit from them, as the world computer inherits them as some kind of successor to Bitcoin.": "Passons rapidement en revue chacune de ces propriétés, et surtout, à la fin, nous devrons nous éloigner un peu d'elles, car l'ordinateur mondial les hérite comme une sorte de successeur de Bitcoin.",
  "**Firstly**, immutability of data. Of course, this property, from the perspective of electronic cash, has significant advantages and importance. After you send a transaction or receive bitcoins, after one or two blocks, you gradually begin to feel the immutability of data in the blockchain. In the first 15 minutes, you can observe, using a blockchain explorer, how the transaction should settle. You already see it in the network, but it is not finalized, meaning these bitcoins are not yet in your account. However, after several blocks, there is confidence that these funds will not disappear from your account. As time passes, the probability of values being somehow overwritten from your account becomes almost negligible, practically reducing to zero. This is our property of data immutability. How cool it is when you can share information with the recipient, send them a link to the blockchain explorer, and you don't need to obtain any paper or document from the bank stating that you sent a payment on a certain date and time - this is the second advantage of Bitcoin that is very helpful in practice and is probably the most pleasant perk when comparing a bank transfer and a Bitcoin transfer.": "**Premièrement**, l'immutabilité des données. Bien sûr, cette propriété, du point de vue de la monnaie électronique, présente des avantages et une importance significatifs. Après avoir envoyé une transaction ou reçu des bitcoins, après un ou deux blocs, vous commencez progressivement à ressentir l'immutabilité des données dans la blockchain. Dans les 15 premières minutes, vous pouvez observer, en utilisant un explorateur de blockchain, comment la transaction devrait se régler. Vous le voyez déjà dans le réseau, mais ce n'est pas finalisé, ce qui signifie que ces bitcoins ne sont pas encore sur votre compte. Cependant, après plusieurs blocs, il y a la certitude que ces fonds ne disparaîtront pas de votre compte. Avec le temps, la probabilité que les valeurs soient d'une manière ou d'une autre écrasées de votre compte devient presque négligeable, pratiquement réduite à zéro. C'est notre propriété d'immutabilité des données. Quelle chance lorsque vous pouvez partager des informations avec le destinataire, lui envoyer un lien vers l'explorateur de blockchain, et vous n'avez pas besoin d'obtenir un papier ou un document de la banque indiquant que vous avez effectué un paiement à une certaine date et heure - c'est le deuxième avantage de Bitcoin qui est très utile en pratique et est probablement le plus agréable avantage lors de la comparaison d'un virement bancaire et d'un transfert Bitcoin.",
  "**Secondly**, transparency of transactions. There is practically no fear when using Bitcoin that you will find yourself in a region of the world or connected to an internet provider through which you cannot perform operations with the Bitcoin network. There are practically no options other than locking you in a dark room without internet access so that you cannot use the Bitcoin network.": "**Deuxièmement**, la transparence des transactions. Il n'y a pratiquement aucune crainte lors de l'utilisation de Bitcoin que vous vous retrouviez dans une région du monde ou connecté à un fournisseur d'accès Internet à travers lequel vous ne pouvez pas effectuer d'opérations avec le réseau Bitcoin. Il n'y a pratiquement aucune option autre que de vous enfermer dans une pièce sombre sans accès Internet afin que vous ne puissiez pas utiliser le réseau Bitcoin.",
  "These three properties are, of course, very important. Now, in order to understand the question \"What is at the heart of the world computer,\" we will need to step back from them, abstract ourselves, and make a small leap of faith, a jump, approximately, 100 years back to the 1930s.": "Ces trois propriétés sont bien sûr très importantes. Maintenant, pour comprendre la question \"Qu'est-ce qui est au cœur de l'ordinateur mondial\", nous devrons nous éloigner d'elles, nous abstraire et faire un petit saut de foi, un saut, d'environ 100 ans en arrière, dans les années 1930.",
  "In 1936, Alan Turing made a proposal to the scientific community to solve the formalization problem and, in fact, a more qualitative description of such a concept as an algorithm. Interestingly, from Alan Turing's proposal, the architecture and development of all computer science in the future emerged, but he in no way pursued the idea of creating a personal computer, and he knew nothing about data centers or clouds. His task was to provide a way to define an algorithm in the context of the tasks faced by mathematicians. It's a fascinating picture over the span of a century that the achievement of computer science turns out to be a by-product of a rather mundane problem among mathematicians.": "En 1936, Alan Turing a fait une proposition à la communauté scientifique pour résoudre le problème de la formalisation et, en fait, une description plus qualitative d'un tel concept qu'un algorithme. Fait intéressant, à partir de la proposition d'Alan Turing, l'architecture et le développement de toute l'informatique future ont émergé, mais il n'a en aucun cas poursuivi l'idée de créer un ordinateur personnel, et il ne savait rien des centres de données ou des clouds. Sa tâche était de fournir un moyen de définir un algorithme dans le contexte des tâches auxquelles les mathématiciens étaient confrontés. C'est une image fascinante sur la durée d'un siècle que la réalisation de l'informatique se révèle être un sous-produit d'un problème plutôt banal parmi les mathématiciens.",
  "Let's delve into what Alan Turing proposed, without delving too deeply into algorithm theory and the purpose for which he suggested it. Alan Turing proposed the Turing machine, which represents an infinite tape (we can call it memory cells to make it easier), traversed by a reading and writing head. This head, positioned over a certain cell, can read data, apply some simple operations to them, and write new values.": "Plongeons dans ce que Alan Turing a proposé, sans trop nous attarder sur la théorie des algorithmes et le but pour lequel il l'a suggéré. Alan Turing a proposé la machine de Turing, qui représente une bande infinie (nous pouvons l'appeler des cellules de mémoire pour simplifier), parcourue par une tête de lecture et d'écriture. Cette tête, positionnée sur une certaine cellule, peut lire des données, leur appliquer quelques opérations simples, et écrire de nouvelles valeurs.",
  "Today, when you hear phrases like this, it might seem to you: \"Well, yes, it's a hard drive, a computer, or something like that.\" That's absolutely correct. This description gave rise to the first computer architecture. However, the main task of the Turing machine was to provide a means of representing a system or entity capable of performing any formalized computations. One can imagine a box or room, even filled with lamps, into which you insert your punch card, card, or transmit a Bluetooth signal, and the machine starts working, performing simple operations that ultimately solve your problem. Thus, the Turing machine is a universal computational mechanism that primarily solves the universal and essential task of providing a mechanism through which any simple computation or, more accurately, any formalized computation can be performed—computations that can be decomposed into the language of mathematics": "Aujourd'hui, lorsque vous entendez des phrases comme celle-ci, cela peut vous sembler : \"Eh bien, oui, c'est un disque dur, un ordinateur, ou quelque chose comme ça.\" C'est tout à fait correct. Cette description a donné naissance à la première architecture informatique. Cependant, la tâche principale de la machine de Turing était de fournir un moyen de représenter un système ou une entité capable d'effectuer toutes les calculs formalisés. On peut imaginer une boîte ou une pièce, même remplie de lampes, dans laquelle vous insérez votre carte perforée, votre carte, ou transmettez un signal Bluetooth, et la machine se met à fonctionner, effectuant des opérations simples qui résolvent finalement votre problème. Ainsi, la machine de Turing est un mécanisme computationnel universel qui résout principalement la tâche universelle et essentielle de fournir un mécanisme à travers lequel toute computation simple ou, plus précisément, toute computation formalisée peut être effectuée - des calculs qui peuvent être décomposés dans le langage des mathématiques",
  "In essence, the task of the last 100 years, after finding some solution in the field of mathematics, was precisely to give it a physical form, to find the set of transistors that could be placed on a board, learn how to solder them all, reduce the processes of the computing processor, and so on. No wonder that the theory from 1936 finds application in 2014 for the ideas of the world computer. These 100 years were occupied, in general, in another area—the field of physically implementing this computer.": "En essence, la tâche des 100 dernières années, après avoir trouvé une solution dans le domaine des mathématiques, était précisément de lui donner une forme physique, de trouver l'ensemble de transistors qui pourraient être placés sur une carte, d'apprendre à les souder tous, de réduire les processus du processeur informatique, et ainsi de suite. Il n'est pas étonnant que la théorie de 1936 trouve une application en 2014 pour les idées de l'ordinateur mondial. Ces 100 années ont été occupées, en général, dans un autre domaine—le domaine de la mise en œuvre physique de cet ordinateur.",
  "When the planet became saturated, and we had personal computers, computational machines even inside smart devices, and when data centers started growing on the planet, the question shifted from the hardware solution to how the computational machine might look not at the physical or mathematically abstract level but at some non-physical, perhaps metaphysical, level relative to the entire planet. However, the foundation remains the same: the state transition function and nothing else.": "Lorsque la planète est devenue saturée, et que nous avions des ordinateurs personnels, des machines informatiques même à l'intérieur de dispositifs intelligents, et lorsque les centres de données ont commencé à croître sur la planète, la question est passée de la solution matérielle à la façon dont la machine informatique pourrait ressembler non pas au niveau physique ou mathématiquement abstrait mais à un niveau non physique, peut-être métaphysique, par rapport à l'ensemble de la planète. Cependant, la fondation reste la même: la fonction de transition d'état et rien d'autre.",
  "As an addition to what has been said, so that we don't only dwell on the theory of 1936 and don't just break the shackles of Bitcoin maximalists, open the Ethereum white paper. There you will find the crucial phrase \"Turing complete machine\"—this is the main definition of Ethereum. A Turing complete machine means that Ethereum can handle any simple operations described in a formal language, operations that are possible. This is not some set of operations that Ethereum can provide as a calculator or a sophisticated calculator for scientists. Instead, it is an abstraction inside which it is possible to load any possible variations, manipulations with variables, constants, additions, calculations with any states, and so on. You won't find anything different from what Turing proposed in the 1930s in the Ethereum concept. You will find an engineering implementation of how to do it. If we move on and open the Polkadot wiki, it's a bit more challenging to find. For this, you should use the search, enter \"State transition,\" and in the search results, find several mentions that Polkadot guarantees nothing else but the state transition. Neither the storage of data in the Polkadot blockchain nor any additional services—only the purest change of state caused by incoming transactions and processed by Polkadot validators. Now, let's try to delve more into this.": "En complément de ce qui a été dit, afin que nous ne nous attardions pas seulement sur la théorie de 1936 et ne brisions pas seulement les chaînes des maximalistes de Bitcoin, ouvrez le livre blanc d'Ethereum. Vous y trouverez la phrase cruciale \"machine Turing complète\"—c'est la principale définition d'Ethereum. Une machine Turing complète signifie qu'Ethereum peut gérer toutes les opérations simples décrites dans un langage formel, des opérations qui sont possibles. Il ne s'agit pas d'un ensemble d'opérations qu'Ethereum peut fournir en tant que calculatrice ou calculatrice sophistiquée pour les scientifiques. Au lieu de cela, c'est une abstraction à l'intérieur de laquelle il est possible de charger toutes les variations possibles, les manipulations avec des variables, des constantes, des additions, des calculs avec tous les états, et ainsi de suite. Vous ne trouverez rien de différent de ce que Turing a proposé dans les années 1930 dans le concept d'Ethereum. Vous trouverez une mise en œuvre d'ingénierie de comment le faire. Si nous continuons et ouvrons le wiki de Polkadot, il est un peu plus difficile à trouver. Pour cela, vous devriez utiliser la recherche, entrer \"Transition d'état,\" et dans les résultats de recherche, trouver plusieurs mentions que Polkadot ne garantit rien d'autre que la transition d'état. Ni le stockage de données dans la blockchain de Polkadot ni aucun service supplémentaire—seulement le changement le plus pur d'état causé par les transactions entrantes et traité par les validateurs de Polkadot. Maintenant, essayons d'approfondir davantage cela.",
  "Now, let's add a bit to this linear diagram to move from the theory of the 1930s to today's realities, where we describe the abstract picture of the world computer. To do this, let's consider an example with Alice and Bob. Alice, being in the office, wants to start Bob's home vacuum robot for cleaning. If we look at today's concepts of how the link between Alice's mobile application and the robot vacuum at home is implemented, you will see roughly the following picture: Alice's mobile application generates a transaction in some cloud where calculations take place, and the output of these calculations is the output values that effectively turn into a command to start the vacuum robot. It would be useful for us, from the field of robotics and Robonomics as concepts in the world of web3, to understand that in the cloud, there is a digital twin of this robot, and its state is changed. We can, in general, not go that far and stop at the fact that Alice sends a transaction to the cloud, and the cloud, having performed all the necessary calculations and manipulations, generates a command to start Bob's vacuum robot.": "Maintenant, ajoutons un peu à ce diagramme linéaire pour passer de la théorie des années 1930 aux réalités d'aujourd'hui, où nous décrivons l'image abstraite de l'ordinateur mondial. Pour ce faire, considérons un exemple avec Alice et Bob. Alice, étant au bureau, veut démarrer le robot aspirateur de Bob à la maison pour le nettoyage. Si nous examinons les concepts actuels sur la manière dont le lien entre l'application mobile d'Alice et le robot aspirateur à la maison est mis en œuvre, vous verrez à peu près l'image suivante : l'application mobile d'Alice génère une transaction dans un cloud où des calculs ont lieu, et la sortie de ces calculs est les valeurs de sortie qui se transforment efficacement en une commande pour démarrer le robot aspirateur. Il serait utile pour nous, du domaine de la robotique et de Robonomics en tant que concepts dans le monde de web3, de comprendre qu'il existe dans le cloud un jumeau numérique de ce robot, et son état est modifié. Nous pouvons, en général, ne pas aller aussi loin et nous arrêter au fait qu'Alice envoie une transaction au cloud, et le cloud, après avoir effectué tous les calculs et manipulations nécessaires, génère une commande pour démarrer le robot aspirateur de Bob.",
  "In this scheme today, there are several main questions: if you were interacting with a physical computer in front of you or were in a room with the vacuum robot, you would approach, press a physical button, and set it in motion. What changes when instead of arrows, there is not a manual drive but a communication layer, the internet? A multitude of questions arises about how we can safely connect Alice and this cloud, how we can be sure that Alice has access to this cloud. The question of the communication network arises—how we can protect Alice from someone else addressing her vacuum robot, requesting, for example, to make a video of her entire apartment instead of cleaning, and a similar aspect arises: why would the vacuum robot listen to this cloud with such honor and integrity? Why would the robot fully trust this cloud?": "Dans ce schéma aujourd'hui, il y a plusieurs questions principales : si vous interagissiez avec un ordinateur physique devant vous ou étiez dans une pièce avec le robot aspirateur, vous vous approcheriez, appuyeriez sur un bouton physique et le mettriez en mouvement. Que se passe-t-il lorsque, au lieu de flèches, il n'y a pas de commande manuelle mais une couche de communication, l'internet ? Une multitude de questions se pose sur la manière dont nous pouvons connecter en toute sécurité Alice et ce cloud, comment nous pouvons être sûrs qu'Alice a accès à ce cloud. La question du réseau de communication se pose - comment pouvons-nous protéger Alice contre quelqu'un d'autre qui s'adresse à son robot aspirateur, demandant, par exemple, de faire une vidéo de tout son appartement au lieu de nettoyer, et un aspect similaire se pose : pourquoi le robot aspirateur écouterait-il ce cloud avec tant d'honneur et d'intégrité ? Pourquoi le robot ferait-il entièrement confiance à ce cloud ?",
  "Today's approach with the architecture of cloud solutions that connect your mobile phone, or rather, the application on your mobile phone, and some technology on the other side, smart devices, is based on the significant achievements in building physical computers. Computers in data centers today are something extraordinary—the level of technical processes is simply amazing. However, from the perspective of communication technologies, when you already have some experience working with internet applications, it seems that somewhere there, at the level of a technical school or college, or maybe not right next to how developers, architects of Intel processors are solving their tasks now. Almost all questions about connecting Alice to Bob boil down solely to outputting a specific access certificate on a specific IP address from both sides, linking them together, and the cloud will own and do anything. The most important thing in this scheme is to do anything, meaning to perform state transitions or operations that occur without any guarantees that for Alice, for Bob, these will be executed according to the same logic. No one can say anything about how the cloud is arranged. It is a black box where computations are not formalized, and neither Alice nor Bob knows how the computation is performed.": "L'approche actuelle avec l'architecture des solutions cloud qui connectent votre téléphone mobile, ou plutôt, l'application sur votre téléphone mobile, et une certaine technologie de l'autre côté, des appareils intelligents, repose sur les réalisations significatives dans la construction d'ordinateurs physiques. Les ordinateurs dans les centres de données aujourd'hui sont quelque chose d'extraordinaire - le niveau des processus techniques est tout simplement incroyable. Cependant, du point de vue des technologies de communication, lorsque vous avez déjà une certaine expérience de travail avec des applications internet, il semble qu'à un moment donné, au niveau d'une école technique ou d'un collège, ou peut-être pas juste à côté de la façon dont les développeurs, les architectes des processeurs Intel résolvent leurs tâches maintenant. Presque toutes les questions sur la connexion d'Alice à Bob se résument uniquement à la sortie d'un certificat d'accès spécifique sur une adresse IP spécifique des deux côtés, les reliant ensemble, et le cloud possédera et fera tout. La chose la plus importante dans ce schéma est de faire n'importe quoi, c'est-à-dire d'effectuer des transitions d'état ou des opérations qui se produisent sans aucune garantie que pour Alice, pour Bob, celles-ci seront exécutées selon la même logique. Personne ne peut dire quoi que ce soit sur la façon dont le cloud est organisé. C'est une boîte noire où les calculs ne sont pas formalisés, et ni Alice ni Bob ne savent comment le calcul est effectué.",
  "The place where you must fully trust—relying on the reputation of the company that owns these data centers, and you must completely trust the network access providers who issue a certificate and verify the security of your connection. In fact, if we talk about the boom of internet applications, this is a huge problem. The problem is that there are actually some citadels located in specific jurisdictions that operate on a relatively simple technology stack to connect you as easily as possible to the cloud, which represents a black box. Dissatisfaction with this approach actually arouses interest in the world computer because it will arrange things a bit differently. And how? Let's try to supplement the scheme we drew with blue color right now.": "L'endroit où vous devez avoir entièrement confiance - en vous appuyant sur la réputation de l'entreprise qui possède ces centres de données, et vous devez faire entièrement confiance aux fournisseurs d'accès réseau qui délivrent un certificat et vérifient la sécurité de votre connexion. En fait, si nous parlons du boom des applications internet, c'est un énorme problème. Le problème est qu'il y a en fait des citadelles situées dans des juridictions spécifiques qui fonctionnent sur une pile technologique relativement simple pour vous connecter aussi facilement que possible au cloud, qui représente une boîte noire. Le mécontentement de cette approche suscite en fait l'intérêt pour l'ordinateur mondial car il arrangera les choses un peu différemment. Et comment ? Essayons de compléter le schéma que nous avons dessiné avec de la couleur bleue dès maintenant.",
  "So, to supplement our linear graph, our linear diagram from both sides, let's take a look at the discoveries that have significance in computer science and that are directly or indirectly related to achievements from the world of web3.": "Ainsi, pour compléter notre graphe linéaire, notre diagramme linéaire des deux côtés, jetons un coup d'œil aux découvertes qui ont une importance en informatique et qui sont directement ou indirectement liées aux réalisations du monde de web3.",
  "Let's start with Leslie Lamport in 1976. Those who attended my presentations, lectures from 2015-2020, probably remember how often I liked to mention that before the invention of Bitcoin, problems related to creating a decentralized network were well described by Leslie Lamport in 1976 in the Byzantine Generals problem. The solution to the Byzantine Generals problem is at the core of Tendermint PBFT algorithms and all synchronous algorithms used from Telegram Open Network to Tendermint, to Cosmos, and other blockchain projects that, accordingly, followed the path of Byzantine Generals.": "Commençons par Leslie Lamport en 1976. Ceux qui ont assisté à mes présentations, conférences de 2015 à 2020, se souviennent probablement à quel point j'aimais mentionner que avant l'invention de Bitcoin, les problèmes liés à la création d'un réseau décentralisé étaient bien décrits par Leslie Lamport en 1976 dans le problème des généraux byzantins. La solution au problème des généraux byzantins est au cœur des algorithmes PBFT de Tendermint et de tous les algorithmes synchrones utilisés du Telegram Open Network à Tendermint, à Cosmos, et d'autres projets de blockchain qui ont suivi le chemin des généraux byzantins.",
  "The second interesting achievement in internet technologies is torrent trackers. We don't have any specific, already erased, cloud or a black box that stores files. Still, users worldwide, by exchanging torrent files, can download exactly the file they were looking for, and this works without data substitution. No one uploads any viruses to you by replacing the file. There might sometimes be a virus embedded in the file, but the idea of receiving a link to download and actually downloading something other than what you were offered to download using torrent technology is impossible. Similar processes exist in the IPFS network, a hash-oriented storage - a way of connecting various participants with trust in the information you convey without using a black box, precisely.": "Le deuxième exploit intéressant dans les technologies internet est les trackers de torrents. Nous n'avons pas de cloud spécifique, déjà effacé, ou une boîte noire qui stocke des fichiers. Pourtant, les utilisateurs du monde entier, en échangeant des fichiers torrent, peuvent télécharger exactement le fichier qu'ils cherchaient, et cela fonctionne sans substitution de données. Personne ne vous télécharge de virus en remplaçant le fichier. Il peut parfois y avoir un virus intégré dans le fichier, mais l'idée de recevoir un lien pour télécharger et réellement télécharger quelque chose d'autre que ce que vous étiez censé télécharger en utilisant la technologie torrent est impossible. Des processus similaires existent dans le réseau IPFS, un stockage orienté hachage - une manière de connecter divers participants en toute confiance dans les informations que vous transmettez sans utiliser de boîte noire, précisément.",
  "And of course, Bitcoin. Bitcoin, as a more collective example, I'm sure Satoshi Nakamoto was well aware of Leslie Lamport's solution to the Byzantine Generals problem and, of course, observed how the idea of torrent trackers was developing. If we don't emphasize the properties that the Bitcoin blockchain obtained, such as immutability, transparency of transactions, and, to some extent, censorship resistance, then Bitcoin is an internet service that performs state transition, some changes in state based on transactions without a central node. It is an example of a collective construction of a global network in which there is a constantly functioning state transition function that we can trust, and to ensure trust, neither jurisdictions nor specific IP addresses nor the most primitive technologies used and still used today in building cloud services are used. The collective image of Bitcoin allowed overlaying the general concept from the 1930s of a Turing-complete machine on the existence of a universal abstract function for everything.": "Et bien sûr, Bitcoin. Bitcoin, comme exemple plus collectif, je suis sûr que Satoshi Nakamoto était bien conscient de la solution de Leslie Lamport au problème des généraux byzantins et, bien sûr, a observé comment l'idée des trackers de torrents se développait. Si nous n'insistons pas sur les propriétés que la blockchain Bitcoin a obtenues, telles que l'immutabilité, la transparence des transactions et, dans une certaine mesure, la résistance à la censure, alors Bitcoin est un service internet qui effectue une transition d'état, quelques changements d'état basés sur des transactions sans nœud central. C'est un exemple d'une construction collective d'un réseau mondial dans lequel il y a une fonction de transition d'état constamment fonctionnelle en laquelle nous pouvons avoir confiance, et pour assurer cette confiance, ni les juridictions ni les adresses IP spécifiques ni les technologies les plus primitives utilisées et encore utilisées aujourd'hui dans la construction de services cloud ne sont utilisées. L'image collective de Bitcoin a permis de superposer le concept général des années 1930 d'une machine complète de Turing sur l'existence d'une fonction abstraite universelle pour tout.",
  "So, what do we need to add to this scheme to envision a global computer? From the bottom, we provide consensus validators or, in general, validators. It can be said that the \"Data availability layer\" is probably a phrase many have heard around Ethereum this year, and it has become an advantage of Bitcoin as well. However, in the organization scheme of the global computer, this is one piece of the puzzle and, as I mentioned, it complements the main function that lies at the heart of the global computer—the function of universal state transition. Going back to the very beginning, the analogy of the heart in the human body is interesting here. It's not a thinking thing, indeed. Yes, it doesn't generate, you could say, the brain is much more important. Still, life is impossible without the heart. It simply pumps blood. Similarly, at the core of the global computer, all transactions are pumped through the state transition function, resulting in outputs. But to organize this in a distributed internet network without the need to trust some citadel, we need to supplement the picture with two components.": "Alors, que devons-nous ajouter à ce schéma pour envisager un ordinateur mondial? Du bas, nous fournissons des validateurs de consensus ou, en général, des validateurs. On peut dire que la \"couche de disponibilité des données\" est probablement une phrase que beaucoup ont entendue autour d'Ethereum cette année, et c'est également devenu un avantage de Bitcoin. Cependant, dans le schéma d'organisation de l'ordinateur mondial, c'est une pièce du puzzle et, comme je l'ai mentionné, cela complète la fonction principale qui se trouve au cœur de l'ordinateur mondial - la fonction de transition d'état universelle. En revenant au tout début, l'analogie du cœur dans le corps humain est intéressante ici. Ce n'est pas une chose pensante, en effet. Oui, il ne génère pas, vous pourriez dire que le cerveau est beaucoup plus important. Pourtant, la vie est impossible sans le cœur. Il pompe simplement le sang. De même, au cœur de l'ordinateur mondial, toutes les transactions sont pompées à travers la fonction de transition d'état, produisant des sorties. Mais pour organiser cela dans un réseau internet distribué sans avoir besoin de faire confiance à une citadelle, nous devons compléter l'image avec deux composants.",
  "The first component is a set of computers or nodes that are ready to execute the state transition. When you send transactions, they don't just go here; they go to the validators. Validators perform computations, recalling what I've already mentioned in this ongoing conversation. They take your transaction, retrieve information from the blockchain about how to process that transaction, apply that processing, and then coordinate with other validators the fact that they correctly executed the state transition. The core of the global computer, in terms of protection against situations where Bob, the vacuum cleaner robot, receives a correct command from Alice in the office, is not based on trust but on cross-verification by a multitude of network participants based on available information from the blockchain. Not only from the blockchain, by the way. It's complex, and we won't delve into it right now, but essentially, a multitude of validators take turns watching and have incentives, some internal incentives within the protocol, to prevent the universal and capable-of-calculating-anything machine from executing this operation incorrectly. A validator effectively processes transactions that come into the global computer, and other validators help prevent situations where one of the validators performed an incorrect calculation. The better the consensus algorithms of the validators, the better protection we have for the state transition function or, in other words, the heart of our global computer.": "Le premier composant est un ensemble d'ordinateurs ou de nœuds prêts à exécuter la transition d'état. Lorsque vous envoyez des transactions, elles ne vont pas seulement ici; elles vont aux validateurs. Les validateurs effectuent des calculs, se rappelant de ce que j'ai déjà mentionné dans cette conversation en cours. Ils prennent votre transaction, récupèrent des informations de la blockchain sur la manière de traiter cette transaction, appliquent ce traitement, puis coordonnent avec d'autres validateurs le fait qu'ils ont correctement exécuté la transition d'état. Le cœur de l'ordinateur mondial, en termes de protection contre les situations où Bob, le robot aspirateur, reçoit une commande correcte d'Alice au bureau, ne repose pas sur la confiance mais sur la vérification croisée par une multitude de participants du réseau basée sur les informations disponibles de la blockchain. Pas seulement de la blockchain, d'ailleurs. C'est complexe, et nous n'entrerons pas dans les détails pour le moment, mais essentiellement, une multitude de validateurs se relaient pour surveiller et ont des incitations, certaines incitations internes au protocole, pour empêcher la machine universelle et capable de tout calculer d'exécuter cette opération de manière incorrecte. Un validateur traite efficacement les transactions qui entrent dans l'ordinateur mondial, et d'autres validateurs aident à prévenir les situations où l'un des validateurs a effectué un calcul incorrect. Plus les algorithmes de consensus des validateurs sont bons, meilleure est la protection que nous avons pour la fonction de transition d'état ou, en d'autres termes, le cœur de notre ordinateur mondial.",
  "The second part of this scheme is the data availability service—what we've always called the database in Bitcoin or Ethereum. In fact, we'll have to abandon that concept because there's a fundamental change in the architecture of all projects, and for those specifically targeting the global computer, this change is most crucial. For a simple present-day example: there are various implementations of Layer 2 networks on top of Ethereum—such as Arbitrum, Optimism, and others. If you start looking into their main differences and how they operate, you'll find that, in some cases, an L2 network in Ethereum sends a larger amount of data, solely from the first-layer blockchain, i.e., from the Ethereum blockchain. All the necessary puzzle pieces to confirm that the computation on the L2 layer was correct can be found in the first-layer Ethereum blockchain. On the other hand, other approaches suggest that beyond the first layer of Ethereum, something else is stored that needs to be found to prove the correctness of transactions. So, right now, before our eyes, there is again a question of improvement, but specifically of such an architecture where transactions go on the left, in the middle, we have the heart in the form of the state transition function, validators, and their consensus allows for the correct execution of this state transition. But there is also a question of data availability, which is necessary to ensure both cross-verification and, essentially, the existence of the service itself. Some approaches and patterns for creating L2 on top of Ethereum today ask the question: \"What if a certain L2 layer loses the data it doesn't store within the main Ethereum blockchain?\"": "La deuxième partie de ce schéma est le service de disponibilité des données - ce que nous avons toujours appelé la base de données dans Bitcoin ou Ethereum. En fait, nous devrons abandonner ce concept car il y a un changement fondamental dans l'architecture de tous les projets, et pour ceux ciblant spécifiquement l'ordinateur mondial, ce changement est le plus crucial. Pour un exemple simple actuel : il existe différentes implémentations de réseaux de couche 2 sur Ethereum - tels que Arbitrum, Optimism et autres. Si vous commencez à examiner leurs principales différences et leur fonctionnement, vous constaterez que, dans certains cas, un réseau L2 sur Ethereum envoie une plus grande quantité de données, uniquement à partir de la blockchain de première couche, c'est-à-dire de la blockchain Ethereum. Toutes les pièces de puzzle nécessaires pour confirmer que le calcul sur la couche L2 était correct peuvent être trouvées dans la blockchain Ethereum de première couche. D'autre part, d'autres approches suggèrent qu'au-delà de la première couche d'Ethereum, quelque chose d'autre est stocké qui doit être trouvé pour prouver la justesse des transactions. Ainsi, en ce moment, sous nos yeux, il y a à nouveau une question d'amélioration, mais spécifiquement d'une telle architecture où les transactions se déroulent à gauche, au milieu, nous avons le cœur sous forme de fonction de transition d'état, de validateurs et leur consensus permet l'exécution correcte de cette transition d'état. Mais il y a aussi une question de disponibilité des données, nécessaire pour assurer à la fois la vérification croisée et, essentiellement, l'existence du service lui-même. Certaines approches et modèles pour créer L2 sur Ethereum aujourd'hui posent la question : \"Et si une certaine couche L2 perdait les données qu'elle ne stocke pas dans la blockchain principale d'Ethereum ?\"",
  "Let's complement this picture with how Polkadot is structured. Polkadot has two consensus mechanisms: the \"babe\" consensus, responsible for the parachain-level consensus and is fast, and the \"grandpa\" consensus, which is slower and verifies everything afterward. So, if you delve into the wiki article titled \"The Path of a Block in the Polkadot Network,\" you will encounter interesting abbreviations. After achieving the \"babe\" consensus at the parachain level, the \"grandpa\" consensus introduces the concept of \"proof of validity and data availability.\" Going deeper, you'll find the term \"chunk\" of redundant pieces of information, inspired by CD RW technologies from the 90s and 2000s. This addresses the question of how to preserve information when absolute trust in a specific entity in the network is not feasible. The concept of \"chunk\" of redundant information is one of these patterns.": "Complétons cette image avec la structure de Polkadot. Polkadot a deux mécanismes de consensus : le consensus \"babe\", responsable du consensus au niveau des parachains et rapide, et le consensus \"grandpa\", qui est plus lent et vérifie tout ensuite. Ainsi, si vous plongez dans l'article wiki intitulé \"Le chemin d'un bloc dans le réseau Polkadot\", vous rencontrerez des abréviations intéressantes. Après avoir atteint le consensus \"babe\" au niveau des parachains, le consensus \"grandpa\" introduit le concept de \"preuve de validité et de disponibilité des données\". En creusant plus profondément, vous trouverez le terme \"chunk\" de morceaux redondants d'informations, inspiré des technologies CD RW des années 90 et 2000. Cela répond à la question de comment préserver les informations lorsque la confiance absolue en une entité spécifique dans le réseau n'est pas réalisable. Le concept de \"chunk\" d'informations redondantes est l'un de ces modèles.",
  "Summing up, at the core lies an abstract function that enables any computation and was described by Alan Turing in the 1930s. The personal computer, essentially a side effect of a mathematical problem, emerged from Turing's work. The technologies first applied in Bitcoin, such as consensus that allows the network to exist without a specific data center or entity responsible for data correctness, form a functioning mechanism. It goes beyond providing a specific service for electronic cash transfers; it allows us to audit and control any computation in the network. Additionally, we face the challenge of ensuring data availability, as it's not the primary concern of the world computer. The world computer's task lies at its core, executing computation, managing state transitions, and performing calculations, while the data in this scheme serves as a puzzle piece that is more necessary to support the lower part. Thus, this overall scheme can be seen as an abstract and generalized illustration of the world computer's structure, where the state transition function is at its core.": "En résumé, au cœur se trouve une fonction abstraite qui permet toute computation et qui a été décrite par Alan Turing dans les années 1930. L'ordinateur personnel, essentiellement un effet secondaire d'un problème mathématique, est issu du travail de Turing. Les technologies d'abord appliquées dans Bitcoin, telles que le consensus qui permet au réseau d'exister sans un centre de données spécifique ou une entité responsable de la justesse des données, forment un mécanisme fonctionnel. Cela va au-delà de fournir un service spécifique pour les transferts d'argent électronique ; cela nous permet d'auditer et de contrôler toute computation dans le réseau. De plus, nous sommes confrontés au défi d'assurer la disponibilité des données, car ce n'est pas la préoccupation principale de l'ordinateur mondial. La tâche de l'ordinateur mondial réside dans son noyau, exécutant la computation, gérant les transitions d'état et effectuant des calculs, tandis que les données dans ce schéma servent de pièce de puzzle plus nécessaire pour soutenir la partie inférieure. Ainsi, ce schéma global peut être vu comme une illustration abstraite et généralisée de la structure de l'ordinateur mondial, où la fonction de transition d'état est au cœur de celui-ci.",
  "Part 4: The Path of a New Block of Information in the World Computer": "Partie 4 : Le Chemin d'un Nouveau Bloc d'Information dans l'Ordinateur Mondial",
  "The fourth and final part of our lecture is \"The World Computer in Your Home.\" After this, I will begin recording screencasts for the practical part of the sessions.": "La quatrième et dernière partie de notre cours est \"L'Ordinateur Mondial dans Votre Maison.\" Après cela, je commencerai à enregistrer des screencasts pour la partie pratique des sessions.",
  "Now we will try to summarize almost all the theory we have covered so far in terms of one process. The process that describes the path of an information block in the world computer. Let's start again by returning to the theme of web3 and the concept of blockchain. The phrase \"block\" or \"information block\" can be considered identical when stepping away from the last 10 years and taking a more general theory, as explored in the previous parts of the lectures. The concept of a \"block of information\" aligns with web3, but not necessarily with blockchain. Even without any crypto projects, we need to understand that when forming the theory of the world computer without referencing the formation of information blocks, it's currently challenging to envision other models. So, we will consider the path of an information block throughout the entire world computer, not because it is blockchain, but because, for now, there are no other ways to conceptualize the existence of the world computer other than by processing information in specific portions.": "Maintenant, nous allons essayer de résumer presque toute la théorie que nous avons couverte jusqu'à présent en termes d'un processus. Le processus qui décrit le chemin d'un bloc d'information dans l'ordinateur mondial. Commençons à nouveau en revenant sur le thème de web3 et le concept de blockchain. Le terme \"bloc\" ou \"bloc d'information\" peut être considéré comme identique en s'éloignant des dix dernières années et en adoptant une théorie plus générale, comme exploré dans les parties précédentes des cours. Le concept d'un \"bloc d'information\" est en accord avec web3, mais pas nécessairement avec la blockchain. Même sans aucun projet crypto, nous devons comprendre que lors de la formation de la théorie de l'ordinateur mondial sans faire référence à la formation de blocs d'information, il est actuellement difficile d'envisager d'autres modèles. Ainsi, nous allons considérer le chemin d'un bloc d'information à travers l'ensemble de l'ordinateur mondial, non pas parce que c'est de la blockchain, mais parce que, pour l'instant, il n'y a pas d'autres moyens de conceptualiser l'existence de l'ordinateur mondial autre que par le traitement de l'information en portions spécifiques.",
  "Block of information = block in web3, but without blockchain and without any crypto project influence. We must currently consider the formation of information blocks when discussing the theory of the world computer. Now, let's move on to the first point. I tried to find close analogies from everyday life to help illustrate the path of an information block in the world computer. The analogy I've chosen is the movement of a bus on a route. Our first meeting point is the bus station.": "Bloc d'information = bloc dans web3, mais sans blockchain et sans aucune influence de projet crypto. Nous devons actuellement considérer la formation de blocs d'information lors de la discussion de la théorie de l'ordinateur mondial. Maintenant, passons au premier point. J'ai essayé de trouver des analogies proches de la vie quotidienne pour aider à illustrer le chemin d'un bloc d'information dans l'ordinateur mondial. L'analogie que j'ai choisie est le mouvement d'un bus sur un itinéraire. Notre premier point de rencontre est la gare routière.",
  "I marked transactions in pink as small dots. Let's imagine a typical bus stop where people gather, waiting for a bus that operates on a schedule. If we don't consider the hustle and bustle of large cities, where buses are always late, everyone in the world generally knows that the train from village A to village B always arrives around 7:15 am. Transactions that users want to send to the world computer gather at a certain bus stop and wait for the bus to arrive.": "J'ai marqué les transactions en rose comme de petits points. Imaginons un arrêt de bus typique où les gens se rassemblent, attendant un bus qui fonctionne selon un horaire. Si nous ne considérons pas l'agitation des grandes villes, où les bus sont toujours en retard, tout le monde dans le monde sait généralement que le train du village A au village B arrive toujours vers 7h15. Les transactions que les utilisateurs veulent envoyer à l'ordinateur mondial se rassemblent à un certain arrêt de bus et attendent que le bus arrive.",
  "This is how our block is formed. Imagine: the bus arrives, and each person starts boarding one by one, taking their seats. The bus then follows its route. In our case, the block of information overcomes the first frontier. Our transactions, in some form, have settled into the bus and overcome the initial barrier. I will be using terminology primarily from Polkadot, and the third part should have better explained the concept of the world computer in the comparison between Ethereum and Polkadot. My personal opinion, and probably the majority of engineers today would agree, is that the representation of a heterogeneous multicentric world computer is better implemented in Polkadot. However, we will still go through the terms inherited from Ethereum, but towards the end of this part of the lecture.": "C'est ainsi que notre bloc est formé. Imaginez : le bus arrive, et chaque personne commence à monter un par un, prenant leur place. Le bus suit ensuite son itinéraire. Dans notre cas, le bloc d'informations surmonte la première frontière. Nos transactions, sous une forme quelconque, se sont installées dans le bus et ont surmonté la barrière initiale. Je vais utiliser principalement la terminologie de Polkadot, et la troisième partie aurait dû mieux expliquer le concept de l'ordinateur mondial dans la comparaison entre Ethereum et Polkadot. Mon opinion personnelle, et probablement la majorité des ingénieurs aujourd'hui seraient d'accord, est que la représentation d'un ordinateur mondial multicentrique hétérogène est mieux mise en œuvre dans Polkadot. Cependant, nous passerons toujours par les termes hérités d'Ethereum, mais vers la fin de cette partie du cours.",
  "What is the line that separates the bus stop from the bus's further movement? This line represents the collators of the network – participants in the network nodes who collect transactions. You can think of a collator not as a bus driver but as a controller who stays at the bus stop. In other words, this controller checks whether you have a ticket when you enter the bus. It doesn't recheck in the database how valid the ticket is but looks at the basic parameters of the ticket and checks if everything seems fine. In reality, collators perform almost all the calculations required, verifying the ticket number and other data, but they are not required to guarantee that the check is done correctly. Therefore, collators are controllers who remain at the bus stop, primarily ensuring passenger boarding, seating, and sending the bus further along the route.": "Quelle est la ligne qui sépare l'arrêt de bus du mouvement ultérieur du bus ? Cette ligne représente les collecteurs du réseau - les participants aux nœuds du réseau qui collectent les transactions. Vous pouvez penser à un collecteur non pas comme un chauffeur de bus mais comme un contrôleur qui reste à l'arrêt de bus. En d'autres termes, ce contrôleur vérifie si vous avez un billet lorsque vous montez dans le bus. Il ne vérifie pas dans la base de données la validité du billet mais regarde les paramètres de base du billet et vérifie si tout semble en ordre. En réalité, les collecteurs effectuent presque tous les calculs nécessaires, vérifiant le numéro de billet et d'autres données, mais ils ne sont pas tenus de garantir que la vérification est effectuée correctement. Par conséquent, les collecteurs sont des contrôleurs qui restent à l'arrêt de bus, assurant principalement l'embarquement des passagers, l'attribution des places et l'envoi du bus plus loin le long de l'itinéraire.",
  "Beyond the drawn border, we enter the first validation area where paravalidators are located. These are validators of the entire ecosystem, the entire network, specifically assigned for a certain time to check each transaction and thus perform actual computations in the world computer. Our not-yet-fully-formed block of information is marked with a dashed line. It is still a candidate block of information since it has not undergone any actual verification. The collator, who collected the block of information and checked the transactions at the entrance, does not participate in any way in securing the cybersecurity of the computations conducted. Its task is only to seat all transactions and form the first block. At this stage, the transformation from a candidate to a real block of information begins.": "Au-delà de la frontière dessinée, nous entrons dans la première zone de validation où se trouvent les paravalidateurs. Ce sont des validateurs de l'ensemble de l'écosystème, de l'ensemble du réseau, spécifiquement assignés pour un certain temps pour vérifier chaque transaction et ainsi effectuer des calculs réels dans l'ordinateur mondial. Notre bloc d'informations pas encore entièrement formé est marqué d'une ligne en pointillés. C'est toujours un bloc d'informations candidat car il n'a subi aucune vérification réelle. Le collecteur, qui a collecté le bloc d'informations et vérifié les transactions à l'entrée, ne participe en aucune manière à la sécurisation de la cybersécurité des calculs effectués. Sa tâche est seulement de placer toutes les transactions et de former le premier bloc. À ce stade, la transformation d'un candidat en un vrai bloc d'informations commence.",
  "I have divided it into three parts, but forgot one more. Let's consider four parts of this candidate block. The top part, known to users of various web3 applications as the header or block header, is the quintessence, the most popular piece of information circulating and reflected from the block explorer to the console clients of all nodes mining, staking, and so on. The header is a key element of the block, but it is practically formed at the last stage at this point.": "Je l'ai divisé en trois parties, mais j'en ai oublié une autre. Considérons donc quatre parties de ce bloc candidat. La partie supérieure, connue des utilisateurs de diverses applications web3 sous le nom d'en-tête ou d'en-tête de bloc, est la quintessence, la pièce d'information la plus populaire circulant et reflétée depuis l'explorateur de blocs jusqu'aux clients de console de tous les nœuds miniers, de mise en jeu, et ainsi de suite. L'en-tête est un élément clé du bloc, mais il est pratiquement formé à la dernière étape à ce stade.",
  "Firstly, we have our actual requests for state transitions or computations. There is a list of changes that need to be made: convert A to A', B to B', C to C', applying a set of algorithms to them. For this, we will now build another boundary immediately and go beyond it to perform this part of the work, and then only proceed beyond it. Already at the block preparation stage, we have to cross the second boundary within the world computer to go for the algorithms that need to be applied to prepare the block. As I mentioned before, theoretically, the controller at the bus stop here does the same, but I wouldn't pay much attention to that. The block preparation stage, especially when we talk about examples simultaneously from Polkadot and Ethereum as a world computer, they differ slightly and show us the insignificance of checks at this stage because it is precisely on the second step, after passing the first boundary and receiving the block of information from collators, that the attention-worthy calculations of this world computer begin.": "Tout d'abord, nous avons nos demandes réelles de transitions d'état ou de calculs. Il y a une liste de changements à apporter : convertir A en A', B en B', C en C', en appliquant une série d'algorithmes à ceux-ci. Pour cela, nous allons maintenant construire une autre frontière immédiatement et aller au-delà pour effectuer cette partie du travail, et ensuite seulement procéder au-delà. Déjà à l'étape de préparation du bloc, nous devons franchir la deuxième frontière à l'intérieur de l'ordinateur mondial pour aller aux algorithmes qui doivent être appliqués pour préparer le bloc. Comme je l'ai mentionné précédemment, théoriquement, le contrôleur à l'arrêt de bus fait la même chose ici, mais je ne prêterais pas beaucoup d'attention à cela. L'étape de préparation du bloc, surtout lorsque nous parlons d'exemples simultanément de Polkadot et d'Ethereum en tant qu'ordinateur mondial, diffèrent légèrement et nous montrent l'insignifiance des vérifications à cette étape car c'est précisément à la deuxième étape, après avoir franchi la première frontière et reçu le bloc d'informations des collecteurs, que les calculs dignes d'attention de cet ordinateur mondial commencent.",
  "To perform these calculations, the validator, at this stage, can only do so by turning to the relay chain, the central database, and taking from there the algorithms from the runtime. In the case of Ethereum, it was the same virtual machines in the previous architectural concept, which could be applied, so there was no need to go anywhere. Almost every node had a complete copy of the algorithms that could be applied. But in terms of a heterogeneous network, where each segment or each individual chain may have its own set of algorithms, a validator, before actually executing all the transitions, calculations obtained in the form of a block candidate from the collator, must consult. It must consult the relay chain, consult the main blockchain in the network and take from there the necessary algorithms, apply them, and perform state transitions.": "Pour effectuer ces calculs, le validateur, à ce stade, ne peut le faire qu'en se tournant vers la chaîne de relais, la base de données centrale, et en prenant de là les algorithmes du runtime. Dans le cas d'Ethereum, il s'agissait des mêmes machines virtuelles dans le concept architectural précédent, qui pouvaient être appliquées, donc il n'était pas nécessaire d'aller ailleurs. Presque chaque nœud avait une copie complète des algorithmes qui pouvaient être appliqués. Mais en termes de réseau hétérogène, où chaque segment ou chaque chaîne individuelle peut avoir son propre ensemble d'algorithmes, un validateur, avant d'exécuter réellement toutes les transitions, les calculs obtenus sous forme de candidat de bloc du collator, doit consulter. Il doit consulter la chaîne de relais, consulter la blockchain principale dans le réseau et prendre de là les algorithmes nécessaires, les appliquer et effectuer des transitions d'état.",
  "During the execution of calculations, a Merkle tree is simultaneously formed, and we won't dwell on it because Merkle trees are not that complicated from the perspective of computer science. Still, I notice that to understand how to apply them in engineering and in the architecture of a project, how they are applied, not just by reading on Wikipedia, you need to break your head a bit, imagine examples. In this example, we won't delve too much into it, but I think for those who are already familiar with some basic definitions, have read about Merkle trees, it will become a bit clearer about how and at what moments another Merkle tree is assembled. The Merkle tree is formed when we actually perform calculations and output values appear. These output values are packed into a binary tree format, then the addition is performed between them in computer science language, and the top node reaches the header. Let's denote it with a big letter \"H.\" It's a small and pleasant aspect of considering such schemes.": "Pendant l'exécution des calculs, un arbre de Merkle est formé simultanément, et nous n'allons pas nous attarder dessus car les arbres de Merkle ne sont pas si compliqués du point de vue de l'informatique. Cependant, je remarque que pour comprendre comment les appliquer en ingénierie et dans l'architecture d'un projet, comment ils sont appliqués, pas seulement en lisant sur Wikipedia, vous devez vous creuser un peu la tête, imaginer des exemples. Dans cet exemple, nous n'allons pas trop nous attarder dessus, mais je pense que pour ceux qui sont déjà familiers avec certaines définitions de base, ont lu sur les arbres de Merkle, il deviendra un peu plus clair sur comment et à quels moments un autre arbre de Merkle est assemblé. L'arbre de Merkle est formé lorsque nous effectuons réellement des calculs et que des valeurs de sortie apparaissent. Ces valeurs de sortie sont emballées dans un format d'arbre binaire, puis l'addition est effectuée entre elles en langage informatique, et le nœud supérieur atteint l'en-tête. Notons-le avec une grande lettre \"H.\" C'est un aspect petit et agréable de considérer de tels schémas.",
  "In this scheme, we can note how the block header is actually related to the computations performed inside. Let's look again - our block candidate came from the collator. There is a set of transactions that need to be executed, perform calculations. The validator went through another internal boundary, one more, behind the algorithms, applied them, and recorded all the results at the lowest level of the Merkle tree. The other nodes are essentially systemic. They do not come from any data; they don't come from anywhere. At the second level, the node does not come from any information. It is obtained by summing values in these two leaves, and when we go up with you, we get only the root of this tree, which is enough to protect all output values. We won't get the same header if we change any of these calculations. And this is one of the magical and simple features, like hash-oriented storage, of how we can protect a whole block of information by talking only about one header. Therefore, headers are so important and play a cornerstone role even in architectures when we transition from one chain or one virtual machine to many combined in the network. It is enough for us to ensure the security of storing headers to be sure that all transactions that were executed at the block preparation stage were executed correctly, and they cannot be replaced.": "Dans ce schéma, nous pouvons noter comment l'en-tête de bloc est en fait lié aux calculs effectués à l'intérieur. Regardons à nouveau - notre candidat de bloc est venu du collator. Il y a un ensemble de transactions qui doivent être exécutées, effectuer des calculs. Le validateur a traversé une autre frontière interne, une de plus, derrière les algorithmes, les a appliqués, et a enregistré tous les résultats au niveau le plus bas de l'arbre de Merkle. Les autres nœuds sont essentiellement systémiques. Ils ne proviennent d'aucune donnée; ils ne viennent de nulle part. Au deuxième niveau, le nœud ne provient d'aucune information. Il est obtenu en additionnant les valeurs dans ces deux feuilles, et lorsque nous remontons avec vous, nous n'obtenons que la racine de cet arbre, qui est suffisante pour protéger toutes les valeurs de sortie. Nous n'obtiendrons pas le même en-tête si nous changeons l'un de ces calculs. Et c'est l'une des fonctionnalités magiques et simples, comme le stockage orienté hachage, de comment nous pouvons protéger un bloc entier d'informations en ne parlant que d'un seul en-tête. Par conséquent, les en-têtes sont si importants et jouent un rôle fondamental même dans les architectures lorsque nous passons d'une chaîne ou d'une machine virtuelle à plusieurs combinées dans le réseau. Il nous suffit de nous assurer de la sécurité du stockage des en-têtes pour être sûr que toutes les transactions qui ont été exécutées à l'étape de préparation du bloc ont été exécutées correctement, et qu'elles ne peuvent pas être remplacées.",
  "And one field is still left unfilled. In the process of preparing the block of information, it is the author's field, that is, the validator who actually performed all the changes, prepared the Merkle tree, and recorded the header. Since we are considering an example with the bus moving along the route from the stop, let's call the validator a \"controller\" who goes right inside the bus, passes each seat, approaches each person, checks for real what is written on their tickets, makes some mark, validates it, and, accordingly, puts their signature. The controller, for example, number 134, meaning, naturally, each validator has some unique identifier, their address, and we also somehow uniquely renamed it here.": "Et un champ est encore laissé vide. Dans le processus de préparation du bloc d'informations, c'est le champ de l'auteur, c'est-à-dire le validateur qui a réellement effectué tous les changements, préparé l'arbre de Merkle et enregistré l'en-tête. Comme nous considérons un exemple avec le bus se déplaçant le long de l'itinéraire depuis l'arrêt, appelons le validateur un \"contrôleur\" qui monte directement dans le bus, passe devant chaque siège, approche chaque personne, vérifie réellement ce qui est écrit sur leurs billets, fait une marque, le valide, et, en conséquence, appose leur signature. Le contrôleur, par exemple, le numéro 134, signifiant, naturellement, chaque validateur a un identifiant unique, leur adresse, et nous l'avons également renommé de manière unique ici.",
  "And it seems that at this point, we could have shaded and made our block boundaries bolder, but no, and this is one of the interesting changes that have occurred in the last 5 years in terms of decentralized ecosystems, namely the shift from proof of work. When validators of the network, at that time miners, never had to coordinate anything with each other. You produced a block and sent it to the network and moved on. In fact, it was not a consensus of agreed consent. It was a consensus of obvious agreement with the fact that had occurred. What is interesting changes when the architecture becomes more complex, and we have come closer from a simple calculator like Bitcoin with a ledger towards an actual virtual computer, is that at each stage, the connectivity of participants who ensure security and block production has increased. Because, in fact, no one who risks their stake, the one who ensures this security and wants to earn by processing your transactions, has something to lose, unlike proof of work. In proof of work, you bought the equipment, yes, you put money into it, you spend electricity, but there is actually no protection against the fact that you can attack the network with your power, the same 51% attack, where someone with a lot of miners can try to rewrite the chain.": "Et il semble qu'à ce stade, nous aurions pu ombrer et rendre nos limites de bloc plus audacieuses, mais non, et c'est l'un des changements intéressants qui se sont produits au cours des 5 dernières années en termes d'écosystèmes décentralisés, à savoir le passage de la preuve de travail. Lorsque les validateurs du réseau, à l'époque mineurs, n'avaient jamais à coordonner quoi que ce soit entre eux. Vous produisiez un bloc et l'envoyiez au r��seau et passiez à autre chose. En fait, ce n'était pas un consensus de consentement convenu. C'était un consensus d'accord évident avec le fait qui s'était produit. Ce qui est intéressant, ce sont les changements lorsque l'architecture devient plus complexe, et nous nous sommes rapprochés d'un simple calculateur comme Bitcoin avec un grand livre vers un véritable ordinateur virtuel, c'est qu'à chaque étape, la connectivité des participants qui garantissent la sécurité et la production de blocs a augmenté. Parce que, en fait, personne ne risque leur mise, celui qui garantit cette sécurité et veut gagner en traitant vos transactions, n'a rien à perdre, contrairement à la preuve de travail. En preuve de travail, vous avez acheté l'équipement, oui, vous y avez investi de l'argent, vous avez dépensé de l'électricité, mais il n'y a en fait aucune protection contre le fait que vous pouvez attaquer le réseau avec votre puissance, la même attaque à 51%, où quelqu'un avec beaucoup de mineurs peut essayer de réécrire la chaîne.",
  "Now we are talking about proof of stake, where a deposit is already made, and if you do something wrong, a part will be withdrawn from it, as a penalty. All nodes, absolutely, in all architectures that I currently observe, mechanisms for messaging between validators began to appear quickly at the block preparation stage. In Polkadot, it is no different. Any validator of a separate parachain that collects a block knows the addresses or already has established contact with another 15-63 validators who are with you on this epoch, on some temporary period, as validators, and each of them randomly becomes a block producer at some point. But being appointed as a producer does not negate a very important component of this process. You do not stop interacting with the other participants. There is always a pool of validators assigned to a specific epoch, to a certain time slot, for validating a particular parachain or segment of the world computer. Regardless of whether you are a validator-controller specifically assigned to produce the next block in the world computer of this segment, you still stay in touch with the other validators, and you have constant contact with them.": "Maintenant, nous parlons de la preuve d'enjeu, où un dépôt est déjà effectué, et si vous faites quelque chose de mal, une partie en sera retirée, comme une pénalité. Tous les nœuds, absolument, dans toutes les architectures que j'observe actuellement, des mécanismes de messagerie entre les validateurs ont commencé à apparaître rapidement à l'étape de préparation du bloc. Dans Polkadot, c'est pareil. Tout validateur d'une parachain séparée qui collecte un bloc connaît les adresses ou a déjà établi un contact avec 15 à 63 autres validateurs qui sont avec vous sur cette époque, sur une période temporaire, en tant que validateurs, et chacun d'eux devient aléatoirement un producteur de bloc à un moment donné. Mais être désigné comme producteur ne nie pas un composant très important de ce processus. Vous ne cessez pas d'interagir avec les autres participants. Il y a toujours un pool de validateurs assignés à une époque spécifique, à un créneau horaire spécifique, pour valider une parachain particulière ou un segment de l'ordinateur mondial. Peu importe que vous soyez un validateur-contrôleur spécifiquement assigné pour produire le prochain bloc dans l'ordinateur mondial de ce segment, vous restez en contact avec les autres validateurs, et vous avez un contact constant avec eux.",
  "Why is this constant contact necessary? It turns out to be quite simple. We do not want, when we move into the inner part, to be afraid or worry that we performed any of the operations incorrectly. As surprising as it may seem, it is beneficial for any validator, before moving on, to first turn to their colleagues assigned to validation and ask them to double-check the calculations. This check is informal, so even if we do not use any logging into an immutable database of requests for verification and the results of this verification, the appointed controller, after talking to the pool of validators, still collects additional responses from all validators assigned to this parachain or network segment. Together with additional confirmations, the controller moves on to the next stage. But even here, it's not quite as simple. At this stage, another process has to be performed. It is important to note that at this stage, our block of information is still a candidate block, and settlement of information is already taking place in the storage. Neither at the very end, nor after we have created and sealed the block and attached it with an archiver in the final part, namely here, in this middle part where all the calculations are actually performed, does the information get saved in the storage. Therefore, our controller, in addition to talking to their colleagues, also ensures the storage of data in some storage, which is also quite metaphysical because the moment you communicate with other validators, this storage gets filled. How is this checked? We will need to move on to the next stage.": "Pourquoi ce contact constant est-il nécessaire? Il s'avère être assez simple. Nous ne voulons pas, lorsque nous passons à la partie interne, avoir peur ou nous inquiéter que nous ayons mal exécuté l'une des opérations. Aussi surprenant que cela puisse paraître, il est bénéfique pour tout validateur, avant de passer à l'étape suivante, de d'abord se tourner vers ses collègues assignés à la validation et leur demander de vérifier à nouveau les calculs. Cette vérification est informelle, donc même si nous n'utilisons pas de journalisation dans une base de données immuable des demandes de vérification et des résultats de cette vérification, le contrôleur désigné, après avoir parlé au groupe de validateurs, recueille quand même des réponses supplémentaires de tous les validateurs assignés à cette parachain ou segment de réseau. Avec des confirmations supplémentaires, le contrôleur passe à l'étape suivante. Mais même ici, ce n'est pas tout à fait aussi simple. À cette étape, un autre processus doit être effectué. Il est important de noter qu'à cette étape, notre bloc d'informations est toujours un bloc candidat, et le règlement des informations se fait déjà dans le stockage. Ni à la toute fin, ni après avoir créé et scellé le bloc et l'avoir attaché avec un archiviste dans la partie finale, c'est-à-dire ici, dans cette partie intermédiaire où tous les calculs sont effectivement effectués, les informations ne sont enregistrées dans le stockage. Par conséquent, notre contrôleur, en plus de parler à ses collègues, s'assure également du stockage des données dans un certain stockage, ce qui est aussi assez métaphysique car au moment où vous communiquez avec d'autres validateurs, ce stockage se remplit. Comment est-ce vérifié? Nous devrons passer à l'étape suivante.",
  "In summary, to complete the middle part, let's look again. We still have only a candidate block at the very beginning. Yes, all transactions are roughly calculated somewhere at the bus stop, everyone has taken their seats according to their tickets. We have passed the first boundary, which is essentially direct established contact between validators and block collators. In Ethereum and Polkadot, these are slightly different schemes now. But everything that happens on the left side at the very beginning does not provide cybersecurity for data and calculations. It's just preparation. Once we have passed and entered the environment of the validators' attention, work with the block of information in the world computer begins. A randomly selected validator, in our case, with a bus route - a controller, actually goes through each of the seats, checks the ticket, checks and performs all the calculations that were made, gathers all the information into a tree. The resulting root node of this tree becomes the header of the proposed block. The validator who actually performs all the calculations with this block of information communicates with the other participants who perform a similar function for the same route in an undefined time slot. And while communicating with them and asking them to verify all the calculations, we are actually filling a certain storage of data in the network. It is not a specific physical storage; there is no specific IP address, no specific hard drive onto which they all load through some VPN or login and password scheme, of course not. In the process of communicating with other validators, data remains on their local machines, and this data will further participate in the transformation of this candidate into a new block of information. In essence, the sealed block that will be settled in the relay chain is collected. We have assembled a block. All the metadata around the calculations is already filled, which means we can try to move on to the next frontier.": "En résumé, pour compléter la partie centrale, regardons à nouveau. Nous n'avons toujours qu'un bloc candidat au tout début. Oui, toutes les transactions sont approximativement calculées quelque part à l'arrêt de bus, tout le monde a pris place selon son billet. Nous avons franchi la première frontière, qui est essentiellement le contact direct établi entre les validateurs et les collecteurs de blocs. Dans Ethereum et Polkadot, ce sont maintenant des schémas légèrement différents. Mais tout ce qui se passe du côté gauche au tout début ne garantit pas la cybersécurité des données et des calculs. C'est juste une préparation. Une fois que nous avons passé et sommes entrés dans l'environnement de l'attention des validateurs, le travail avec le bloc d'informations dans l'ordinateur mondial commence. Un validateur sélectionné de manière aléatoire, dans notre cas, avec un itinéraire de bus - un contrôleur, passe effectivement par chacun des sièges, vérifie le billet, vérifie et effectue tous les calculs qui ont été faits, rassemble toutes les informations dans un arbre. Le nœud racine résultant de cet arbre devient l'en-tête du bloc proposé. Le validateur qui effectue réellement tous les calculs avec ce bloc d'informations communique avec les autres participants qui exécutent une fonction similaire pour le même itinéraire dans une plage horaire indéfinie. Et tout en communiquant avec eux et en leur demandant de vérifier tous les calculs, nous remplissons en fait un certain stockage de données dans le réseau. Ce n'est pas un stockage physique spécifique; il n'y a pas d'adresse IP spécifique, pas de disque dur spécifique sur lequel ils chargent tous à travers un VPN ou un schéma de connexion et de mot de passe, bien sûr. Au cours de la communication avec d'autres validateurs, les données restent sur leurs machines locales, et ces données participeront ensuite à la transformation de ce candidat en un nouveau bloc d'informations. En essence, le bloc scellé qui sera installé dans la chaîne de relais est collecté. Nous avons assemblé un bloc. Toutes les métadonnées autour des calculs sont déjà remplies, ce qui signifie que nous pouvons essayer de passer à la prochaine frontière.",
  "At this moment, let's delve into the passage of the next boundary. The most crucial aspect at the final stage becomes the block header. We are less concerned with the execution of computations; we can simplify our perspective here, as computations may vary based on the architecture, whether it's Ethereum or Polkadot. The key point is that, on the intermediate stage, from what I observe in the theory and practice of implementing the world computer concept, most computations happen at an intermediate level. The last level remains only to execute essential checks. Almost all these checks in a multi-chain architecture are related to the concatenation or merging of block headers into one block.": "En ce moment, plongeons dans le passage de la prochaine frontière. L'aspect le plus crucial à la dernière étape devient l'en-tête de bloc. Nous sommes moins préoccupés par l'exécution des calculs; nous pouvons simplifier notre perspective ici, car les calculs peuvent varier en fonction de l'architecture, qu'il s'agisse d'Ethereum ou de Polkadot. Le point clé est que, à l'étape intermédiaire, d'après ce que j'observe dans la théorie et la pratique de la mise en œuvre du concept d'ordinateur mondial, la plupart des calculs se produisent à un niveau intermédiaire. Le dernier niveau ne sert qu'à exécuter des vérifications essentielles. Presque toutes ces vérifications dans une architecture multi-chaîne sont liées à la concaténation ou à la fusion des en-têtes de bloc en un seul bloc.",
  "In the final part of our journey, the most important element in the world computer's information block becomes the cornerstone – the header. The second component is more about meta-information. If the header is the actual result of all computations, the additional meta-information being transmitted consists of receipts and signatures of the validators who participated in the intermediate stage of this process. At the final stage, we can visualize the whole picture solely as the assembly of the same tree, not as a list of transactions. In the relay chain's final part, the crucial aspect is the assembly of headers from many similar processes, but linked to different segments of the world computer, different parachains.": "Dans la dernière partie de notre voyage, l'élément le plus important dans le bloc d'informations de l'ordinateur mondial devient la pierre angulaire - l'en-tête. Le deuxième composant concerne davantage les métadonnées. Si l'en-tête est le résultat réel de tous les calculs, les métadonnées supplémentaires transmises se composent des reçus et des signatures des validateurs qui ont participé à l'étape intermédiaire de ce processus. À la dernière étape, nous pouvons visualiser l'ensemble de l'image uniquement comme l'assemblage du même arbre, pas comme une liste de transactions. Dans la dernière partie de la chaîne de relais, l'aspect crucial est l'assemblage des en-têtes de nombreux processus similaires, mais liés à différents segments de l'ordinateur mondial, différentes parachaines.",
  "Each parachain, each set of validators – we've discussed one example, but in reality, such block preparations for parachains happen 30-40 times. The number of parachain slots or the number of L2 networks in Ethereum will result in a similar number of processes with a similar architecture. However, in the final stage, we will see an approximately identical picture everywhere – how the block header will be formed from a multitude of headers from other blocks. In this process, we need to introduce one more entity and jump back across the boundary to the second stage.": "Chaque parachaine, chaque ensemble de validateurs - nous avons discuté d'un exemple, mais en réalité, de telles préparations de blocs pour les parachaines se produisent 30 à 40 fois. Le nombre de slots de parachaine ou le nombre de réseaux L2 dans Ethereum entraînera un nombre similaire de processus avec une architecture similaire. Cependant, à la dernière étape, nous verrons une image approximativement identique partout - comment l'en-tête de bloc sera formé à partir d'une multitude d'en-têtes d'autres blocs. Dans ce processus, nous devons introduire une autre entité et revenir en arrière à travers la frontière vers la deuxième étape.",
  "Finalizers. In fact, they are also validators, but relay chain validators. In the Polkadot architecture, we have a thousand validators divided into two groups. The first, a very small group, is responsible only for forming the block header and a new block consisting of the headers of the State of the States blocks. The second group – parachain validators – is further divided into many subgroups, but this group is called parachain validators. In L2 networks above Ethereum, this story will eventually gain more understanding, more denominators. For now, let's focus on the Polkadot architecture. Finalizers, besides checking an additional set of meta-information and rechecking a validator with a specific ID, randomly chosen to generate this block of all blocks, also help recheck meta-information, check, and assemble all headers into one. It's a bit complex, yes, if we look at it from the perspective of tree assembly.": "Finaliseurs. En fait, ce sont aussi des validateurs, mais des validateurs de la chaîne de relais. Dans l'architecture Polkadot, nous avons mille validateurs divisés en deux groupes. Le premier, un très petit groupe, est responsable uniquement de la formation de l'en-tête de bloc et d'un nouveau bloc composé des en-têtes des blocs de l'État des blocs d'États. Le deuxième groupe - les validateurs de parachaine - est ensuite divisé en de nombreux sous-groupes, mais ce groupe est appelé les validateurs de parachaine. Dans les réseaux L2 au-dessus d'Ethereum, cette histoire finira par gagner plus de compréhension, plus de dénominateurs. Pour l'instant, concentrons-nous sur l'architecture Polkadot. Les finaliseurs, en plus de vérifier un ensemble supplémentaire de métadonnées et de re-vérifier un validateur avec un ID spécifique, choisi au hasard pour générer ce bloc de tous les blocs, aident également à re-vérifier les métadonnées, vérifier et assembler tous les en-têtes en un seul. C'est un peu complexe, oui, si nous le regardons du point de vue de l'assemblage de l'arbre.",
  "In addition to this, in the Polkadot architecture and in Ethereum with the latest changes, a data availability check takes place. For this, finalizers visit parachain validators and try to request actual information about each block stored in the network. If they receive data from at least 1/3 of the validators, using technology that allows redundant storage of information, and subsequently, if someone loses it, one or two or three validators can still restore it, there is a critical threshold at 1/3. If 1/3 of the nodes respond and say that we have data about the block being produced, finalizers tell the block that it is already a fully formed information block, that all computations have been done correctly, that we have already taken the header of this block and combined it with someone else's headers from other segments of the network. We have already formed the main header of the entire network. After that, finalizers place many checkmarks on the final block, which combines all performed computations.": "En plus de cela, dans l'architecture Polkadot et dans Ethereum avec les derniers changements, une vérification de la disponibilité des données a lieu. Pour cela, les finaliseurs visitent les validateurs de parachain et essaient de demander des informations réelles sur chaque bloc stocké dans le réseau. S'ils reçoivent des données d'au moins 1/3 des validateurs, en utilisant une technologie qui permet le stockage redondant des informations, et par la suite, si quelqu'un le perd, un, deux ou trois validateurs peuvent toujours le restaurer, il y a un seuil critique à 1/3. Si 1/3 des nœuds répondent et disent que nous avons des données sur le bloc en cours de production, les finaliseurs disent au bloc qu'il s'agit déjà d'un bloc d'informations entièrement formé, que tous les calculs ont été effectués correctement, que nous avons déjà pris l'en-tête de ce bloc et l'avons combiné avec les en-têtes de quelqu'un d'autre provenant d'autres segments du réseau. Nous avons déjà formé l'en-tête principal de l'ensemble du réseau. Après cela, les finaliseurs placent de nombreuses coches sur le bloc final, qui combine tous les calculs effectués.",
  "Currently, this is the situation from the perspective of the most engineering-implemented multi-chain heterogeneous ecosystem, which is Polkadot. It is the most engineering-implemented multi-chain heterogeneous ecosystem, not too far from Ethereum. I would like to focus on the comparison, and if someone is interested in understanding how information blocks flow in Ethereum with L2 networks, you can try to do that now. I will return to this question when some elements of Ethereum, in terms of heterogeneity and multi-chain aspects, are completed. It might take 1-2 years, and then we can build such a picture. Nevertheless, we can generally accept a scheme with three main stages:": "Actuellement, c'est la situation du point de vue de l'écosystème hétérogène multi-cha��nes le plus implémenté en ingénierie, qui est Polkadot. C'est l'écosystème hétérogène multi-chaînes le plus implémenté en ingénierie, pas trop loin d'Ethereum. J'aimerais me concentrer sur la comparaison, et si quelqu'un est intéressé à comprendre comment les blocs d'informations circulent dans Ethereum avec les réseaux L2, vous pouvez essayer de le faire maintenant. Je reviendrai sur cette question lorsque certains éléments d'Ethereum, en termes d'hétérogénéité et d'aspects multi-chaînes, seront terminés. Cela pourrait prendre 1 à 2 ans, et ensuite nous pourrons construire une telle image. Néanmoins, nous pouvons généralement accepter un schéma avec trois étapes principales:",
  "**1. Formation of a candidate for the information block:**": "**1. Formation d'un candidat pour le bloc d'informations :**",
  "In this stage, the initial candidate for the information block is formed.": "À cette étape, le candidat initial pour le bloc d'informations est formé.",
  "**2. Execution of all computations, data storage, data availability, rechecking with other nodes, ensuring that all state transitions are performed correctly according to specific algorithms, and storing these algorithms in the main citadel:**": "**2. Exécution de tous les calculs, stockage des données, disponibilité des données, re-vérification avec d'autres nœuds, en veillant à ce que toutes les transitions d'état soient effectuées correctement selon des algorithmes spécifiques, et stockage de ces algorithmes dans le citadelle principale :**",
  "This stage involves the actual execution of computations, saving data to certain layers, ensuring data availability, rechecking with other nodes to confirm that all state transitions are in accordance with algorithms stored somewhere in the main citadel.": "Cette étape implique l'exécution réelle des calculs, la sauvegarde des données à certaines couches, en veillant à la disponibilité des données, la re-vérification avec d'autres nœuds pour confirmer que toutes les transitions d'état sont conformes aux algorithmes stockés quelque part dans la citadelle principale.",
  "**3. Finalization, which will not recheck the computations but will verify the meta-information, how this meta-information is stored. It will then assemble the final block, which is the state of the states, and release it as a common information block for the entire segmented multi-chain network:**": "**3. Finalisation, qui ne re-vérifiera pas les calculs mais vérifiera les méta-informations, comment ces méta-informations sont stockées. Elle assemblera ensuite le bloc final, qui est l'état des états, et le libérera en tant que bloc d'informations commun pour l'ensemble du réseau multi-chaînes segmenté :**",
  "The final stage involves checking the meta-information, verifying how this meta-information is stored, assembling the final block (state of the states), and releasing it as a common information block for the entire segmented multi-chain network.": "La dernière étape implique la vérification des méta-informations, la vérification de la manière dont ces méta-informations sont stockées, l'assemblage du bloc final (état des états) et sa libération en tant que bloc d'informations commun pour l'ensemble du réseau multi-chaînes segmenté.",
  "At this point, we can say that our information is saved. It has passed through the heart, the heart has executed its data transfer correctly, and we can already use the output values. Some will use them to open a smart-contract-purchased apartment with a smart lock, while others might show off their NFT, just received for 10 ethers.": "À ce stade, nous pouvons dire que nos informations sont sauvegardées. Elles ont traversé le cœur, le cœur a exécuté correctement son transfert de données, et nous pouvons déjà utiliser les valeurs de sortie. Certains les utiliseront pour ouvrir un appartement acheté avec un contrat intelligent avec une serrure intelligente, tandis que d'autres pourraient montrer leur NFT, récemment reçu pour 10 ethers.",
  "In general, this is approximately how it works. This concludes the theoretical part. I think it took about 2 hours, and ahead of us are practical sessions that I will be recording over the next few months. They will help us understand the observed data from the console window, decentralized applications, block explorers, where we will gradually understand how all these theoretical numbers and letters actually look in implementation using Polkadot as an example. I will also start getting hands-on with implementations at the L2 level using one of the well-known frameworks for building L2. Thank you to everyone who has been watching.": "En général, c'est à peu près ainsi que cela fonctionne. Cela conclut la partie théorique. Je pense que cela a pris environ 2 heures, et devant nous se trouvent des sessions pratiques que j'enregistrerai au cours des prochains mois. Elles nous aideront à comprendre les données observées depuis la fenêtre de la console, les applications décentralisées, les explorateurs de blocs, où nous comprendrons progressivement comment tous ces chiffres et lettres théoriques se présentent réellement dans la mise en œuvre en utilisant Polkadot comme exemple. Je commencerai également à mettre en pratique les implémentations au niveau L2 en utilisant l'un des cadres bien connus pour la construction de L2. Merci à tous ceux qui ont regardé."
}